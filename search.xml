<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>cephFs块存储</title>
      <link href="/2021/07/05/cephFs%E5%9D%97%E5%AD%98%E5%82%A8/"/>
      <url>/2021/07/05/cephFs%E5%9D%97%E5%AD%98%E5%82%A8/</url>
      
        <content type="html"><![CDATA[<p>一个块是一个字节序列（例如，一个 512 字节的数据块）。基于块的存储接口是使用旋转介质（例如硬盘、CD、软盘，甚至是传统的 9 轨磁带）存储数据的最常见方式。块设备接口的普遍性使虚拟块设备成为与 Ceph 等海量数据存储系统交互的理想选择。</p><span id="more"></span><p>Ceph 块设备是精简配置的、可调整大小的，并在 Ceph 集群中的多个 OSD 上存储条带化数据。 Ceph 块设备利用 RADOS 功能，例如快照、复制和一致性。 Ceph 的 RADOS 块设备 (RBD) 使用内核模块或 librbd 库与 OSD 交互。</p><p><img src="https://docs.ceph.com/en/nautilus/_images/274b3a8c6be03027e4cbcc949e348d05010b41856c98f7a97992ff7bacfc27da.png" alt="结构图"></p><h2 id="块设备命令">块设备命令</h2><p>rbd 命令使您能够创建、列出、内省和删除块设备映像。您还可以使用它来克隆映像、创建快照、将映像回滚到快照、查看快照等。</p><h3 id="创建一个块存储设备池">创建一个块存储设备池</h3><p><strong>注意 不能使用纠删码</strong> 否则不能创建镜像</p><p>RBD : Ceph’s RADOS Block Devices</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ceph osd pool create block1 2 2 <span class="comment"># 创建pool</span></span><br><span class="line">rbd pool init &lt;pool-name&gt;</span><br><span class="line">rbd pool init block1</span><br></pre></td></tr></table></figure><h3 id="创建块设备用户">创建块设备用户</h3><p>除非指定，否则rbd命令会使用admin进行访问ceph集群，admin允许对集群进行完全的管理权限访问。建议使用具有合适权限的而用户进行访问。</p><p>创建用户命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph auth get-or-create client.&#123;ID&#125; mon <span class="string">&#x27;profile rbd&#x27;</span> osd <span class="string">&#x27;profile &#123;profile name&#125; [pool=&#123;pool-name&#125;][, profile ...]&#x27;</span> mgr <span class="string">&#x27;profile rbd [pool=&#123;pool-name&#125;]&#x27;</span></span><br></pre></td></tr></table></figure><p>录入创建一个用户<code>qemu</code>对<code>vms</code>池有读写权限，对<code>images</code>只有读取权限。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph auth get-or-create client.qemu mon <span class="string">&#x27;profile rbd&#x27;</span> osd <span class="string">&#x27;profile rbd pool=vms, profile rbd-read-only pool=images&#x27;</span> mgr <span class="string">&#x27;profile rbd pool=images&#x27;</span></span><br></pre></td></tr></table></figure><p>我们创建一个<code>block-rw</code>用户对<code>block1</code> pool具有读写权限 再创建一个<code>block-r</code>用户只具有读权限</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ceph auth get-or-create client.block-rw mon <span class="string">&#x27;profile rbd&#x27;</span> osd <span class="string">&#x27;profile rbd pool=block1&#x27;</span> mgr <span class="string">&#x27;profile rbd pool=block1&#x27;</span> <span class="comment"># 创建block-rw</span></span><br><span class="line">ceph auth get-or-create client.block-r  mon <span class="string">&#x27;profile rbd&#x27;</span> osd <span class="string">&#x27;profile rbd-read-only pool=block1&#x27;</span> mgr <span class="string">&#x27;profile rbd pool=block1&#x27;</span> <span class="comment"># 创建block-r</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210703175809667.png" alt="image-20210703175809667"></p><p>如果没有记住密钥，可以使用</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ceph auth get client.用户id</span><br><span class="line"><span class="comment">#例如</span></span><br><span class="line">ceph auth get client.block-rw</span><br></pre></td></tr></table></figure><p>将生成密钥环并分发到各个节点</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ceph auth <span class="built_in">export</span> 用户id &gt;密钥环文件</span><br><span class="line"><span class="comment"># 例如</span></span><br><span class="line">ceph auth <span class="built_in">export</span> client.block-r &gt; /etc/ceph/ceph.client.block-r.keyring </span><br><span class="line"><span class="comment"># 分发到各个结点</span></span><br><span class="line">scp /etc/ceph/ceph.client.block-r.keyring node2:/etc/ceph/</span><br><span class="line">scp /etc/ceph/ceph.client.block-r.keyring node3:/etc/ceph/</span><br></pre></td></tr></table></figure><p>权限验证</p><p>禁止写入</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210704182904322.png" alt="image-20210704182904322"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rbd create --size 16 block1/b3 --id=block-r</span><br></pre></td></tr></table></figure><p>可以读取</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rbd ls block1 --id=block-r</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210704182949062.png" alt="image-20210704182949062"></p><p>在使用rbd时通过–id 指定用户</p><h3 id="创建块设备镜像">创建块设备镜像</h3><p>在将块设备添加到节点之前必须创建一个镜像，创建命令如下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rbd create --size &#123;megabytes&#125; &#123;pool-name&#125;/&#123;image-name&#125;</span><br><span class="line"><span class="comment"># 例如</span></span><br><span class="line">rbd create --size 16 block1/b1 <span class="comment"># 创建一个16M的块设备</span></span><br><span class="line"><span class="comment"># 如果没有指定pool 会将镜像放在默认pool中</span></span><br><span class="line">rbd create --size 1024 foo</span><br></pre></td></tr></table></figure><h3 id="查询镜像文件">查询镜像文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rbd ls &#123;poolname&#125;</span><br><span class="line"><span class="comment"># 例如</span></span><br><span class="line">rbd ls block1</span><br><span class="line"><span class="comment"># 查询延期删除的镜像</span></span><br><span class="line">rbd trash ls &#123;poolname&#125;</span><br></pre></td></tr></table></figure><h3 id="查询镜像信息">查询镜像信息</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rbd info &#123;pool-name&#125;/&#123;image-name&#125;</span><br><span class="line">rbd info block1/b1</span><br></pre></td></tr></table></figure><h3 id="重设镜像大小">重设镜像大小</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#扩容磁盘</span></span><br><span class="line">rbd resize --size 2048 block1/b1</span><br><span class="line"></span><br><span class="line"><span class="comment">#缩减磁盘</span></span><br><span class="line">rbd resize --size 48 block1/b1 --allow-shrink</span><br></pre></td></tr></table></figure><h3 id="删除镜像">删除镜像</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">rbd rm &#123;pool-name&#125;/&#123;image-name&#125;</span><br><span class="line"><span class="comment"># 延迟删除（保留数据）类似回收站</span></span><br><span class="line">rbd trash mv &#123;pool-name&#125;/&#123;image-name&#125;</span><br><span class="line"><span class="comment"># 延迟删除 不再保留数据</span></span><br><span class="line">rbd trash rm &#123;pool-name&#125;/&#123;image-id&#125;</span><br><span class="line"><span class="comment"># 恢复数据 &#123;image-id&#125; 可以通过rbd info进行查询</span></span><br><span class="line">rbd trash restore &#123;pool-name&#125;/&#123;image-id&#125;</span><br></pre></td></tr></table></figure><h2 id="在ceph上挂载设备">在ceph上挂载设备</h2><p>在需要挂载块设备的机器上安装ceph客户端</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install ceph -y</span><br></pre></td></tr></table></figure><p>映射</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rbd map &lt;pool-name&gt;/&lt;image-name&gt;</span><br><span class="line">sudo rbd map block2/b1</span><br></pre></td></tr></table></figure><p>出现错误</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210703201328823.png" alt="image-20210703201328823"></p><p>这是因为内核过低，不支持一些特性 根据红线所示 执行命令</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210703201429472.png" alt="image-20210703201429472"></p><p>再次执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rbd map block2/b1</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210703201558661.png" alt="image-20210703201558661"></p><p>挂载成功</p><p>将/dev/rbd0格式化挂载到/home下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4 /dev/rbd0 </span><br><span class="line">mount /dev/rbd0 /home</span><br></pre></td></tr></table></figure><p>取消映射</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">umount /home <span class="comment"># 先取消挂载</span></span><br><span class="line">rbd umap block2/b1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ceph </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ceph </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cephFs-pool操作</title>
      <link href="/2021/07/05/cephFs-pool%E6%93%8D%E4%BD%9C/"/>
      <url>/2021/07/05/cephFs-pool%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<p>文章来自于 <a href="https://blog.51cto.com/u_11495268/2342692">https://blog.51cto.com/u_11495268/2342692</a></p><h2 id="pool基础命令">pool基础命令</h2><h3 id="pool-创建、删除与查看">pool 创建、删除与查看</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ceph osd pool ls <span class="comment"># 只列出来pool的名称</span></span><br><span class="line">ceph osd pool ls detail <span class="comment"># 列出详情</span></span><br></pre></td></tr></table></figure><span id="more"></span><h4 id="查询pool的当前状态">查询pool的当前状态</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ceph osd pool stats &#123;pool_name&#125;</span><br><span class="line"><span class="comment">#例如</span></span><br><span class="line">ceph osd pool stats block2</span><br></pre></td></tr></table></figure><h4 id="查询pool的使用状态">查询pool的使用状态</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph df</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210703204217792.png" alt="image-20210703204217792"></p><h4 id="创建pool">创建pool</h4><p>pool 创建规则<br>每个osd的pg个数在100个左右（如果没有修改 集群默认pg与pgp的数量为250）<br>pg的个数是2个N次方<br>每一个pool的总容量和pg的个数换算出来的pg的容量 都基本上一致</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ceph osd pool create &#123;pool-name&#125; &#123;pg-num&#125; [&#123;pgp-num&#125;]</span><br><span class="line">ceph osd pool create block1 2 2</span><br></pre></td></tr></table></figure><h4 id="删除pool">删除pool</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ceph daemon mon.&#123;mon实例名&#125; config <span class="built_in">set</span> mon_allow_pool_delete <span class="literal">true</span> <span class="comment"># 设置允许删除</span></span><br><span class="line">ceph osd pool rm &#123;pool_name&#125; &#123;pool_name&#125; --yes-i-really-really-mean-it <span class="comment"># 进行删除</span></span><br></pre></td></tr></table></figure><p>其中{mon实例名}可以通过<code>ceph -s | grep mon </code>进行查询</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210703204728180.png" alt="image-20210703204728180"></p><p>删除需要将删除的pool name 重复两次，示例如下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ceph daemon mon.ceph1 config <span class="built_in">set</span> mon_allow_pool_delete <span class="literal">true</span></span><br><span class="line">ceph osd pool rm block1 block1 --yes-i-really-really-mean-it</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210703205015878.png" alt="image-20210703205015878"></p><h3 id="pool的属性">pool的属性</h3><p>一般 创建 pool 之后可以查看、修改 pool 的相关属性，常用的属性有：size、min_size、rule、pg_num、pgp_num 等</p><h4 id="获取pool的属性">获取pool的属性</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ceph osd pool get &#123;pool-name&#125; &#123;key&#125;</span><br><span class="line"><span class="comment"># 例如</span></span><br><span class="line">ceph osd pool get block1 size</span><br></pre></td></tr></table></figure><h4 id="设置pool的属性">设置pool的属性</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ceph osd pool <span class="built_in">set</span> &#123;pool-name&#125; &#123;key&#125; &#123;value&#125;</span><br><span class="line"><span class="comment"># 例如</span></span><br><span class="line">ceph osd pool <span class="built_in">set</span> block1 size 2</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210703205609832.png" alt="image-20210703205609832">client.block-rw</p><h4 id="重命名pool">重命名pool</h4><figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ceph osd pool <span class="keyword">rename</span> &#123;current-pool-<span class="literal">name</span>&#125; &#123;new-pool-<span class="literal">name</span>&#125;</span><br><span class="line"><span class="keyword">ceph</span> <span class="keyword">osd</span> <span class="keyword">pool</span> <span class="keyword">rename</span> <span class="keyword">block1</span> <span class="keyword">bk1</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210703205725118.png" alt="image-20210703205725118"></p><h3 id="设置配额">设置配额</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ceph osd pool set-quota &#123;pool-name&#125; [max_objects &#123;obj-count&#125;] [max_bytes &#123;bytes&#125;]</span><br><span class="line">ceph osd pool set-quota bk1 max_bytes 2G <span class="comment">#设置限额为2G</span></span><br><span class="line">ceph osd pool set-quota bk1 max_objects 1000 <span class="comment"># 设置对多的对象数为1000</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ceph </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ceph </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cephFs-ceph文件系统</title>
      <link href="/2021/07/05/cephFs-ceph%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
      <url>/2021/07/05/cephFs-ceph%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<p>Ceph 文件系统 (CephFS) 是一个符合 POSIX 的文件系统，它使用 Ceph 存储集群来存储其数据。 Cpeh文件系统使用相同的ceph存储集群实现了Ceph块存储，带有S3和Swift api的对象存储以及原声绑定(librados)</p><span id="more"></span><h2 id="使用cephFs">使用cephFs</h2><p>使用cephFs 要求jcpeh集群中至少拥有一个Ceph Matadata Server 也就是MDS</p><h3 id="创建pool">创建pool</h3><p>Ceph 文件系统至少需要两个 RADOS 池，一个用于数据，一个用于元数据。在配置这些池时，需要考虑：</p><ul><li>对元数据池使用更高的复制级别，因为此池中的任何数据丢失都可能导致整个文件系统无法访问</li><li>将低延迟存储（例如 SSD）用于元数据池，因为这将直接影响客户端上观察到的文件系统操作延迟。</li><li>用于创建文件系统的数据池是“默认”数据池和存储所有 inode 回溯信息的位置，用于硬链接管理和灾难恢复。为此，在 CephFS 中创建的所有 inode 在默认数据池中至少有一个对象。如果为文件系统规划了纠删码池，通常最好使用复制池作为默认数据池，以提高更新回溯的小对象写入和读取性能。另外，可以添加另一个纠删码数据池（另见纠删码），可用于整个目录和文件层次结构（另见文件布局）。</li></ul><p>创建数据和元数据池</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ceph osd pool create cephfs_data &lt;pg_num&gt;</span><br><span class="line">ceph osd pool create cephfs_metadata &lt;pg_num&gt;</span><br></pre></td></tr></table></figure><p>通常，元数据池最多只有几 GB 的数据。因此，通常建议使用较小的 PG 计数。 64 或 128 在实践中通常用于大型集群。</p><h3 id="创建文件系统">创建文件系统</h3><p>创建池后，您可以使用 fs new 命令启用文件系统：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ceph fs new &lt;fs_name&gt; &lt;metadata&gt; &lt;data&gt;</span><br><span class="line"><span class="comment"># 例如</span></span><br><span class="line">ceph fs new cephfs cephfs_metadata cephfs_data <span class="comment"># cephfs fs_name 可以任选 cephfs_metadata 元数据池 cephfs_data 数据池</span></span><br></pre></td></tr></table></figure><p>创建文件系统后，您的 MDS 将能够进入活动状态。例如，在单个 MDS 系统中：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph mds <span class="built_in">stat</span></span><br></pre></td></tr></table></figure><p>创建文件系统并且 MDS 处于活动状态后，您就可以挂载文件系统了。如果您创建了多个文件系统，您将在挂载时选择使用哪个。如果您创建了多个文件系统，并且客户端在挂载时没有指定文件系统，您可以使用 ceph fs set-default 命令控制他们将看到哪个文件系统。</p><h3 id="挂载文件系统">挂载文件系统</h3><h4 id="KERNEL-DRIVER挂载">KERNEL DRIVER挂载</h4><p>可以在任意一套装有linux环境的机器上，windows应该也可以，没有尝试</p><p>1、查看是否启用了Cephx认证，如果是cephx就用了就需要输入密钥进行验证，如果是none就不需要。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/ceph/ceph.conf   | grep auth | grep required</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210703140753041.png" alt="image-20210703140753041"></p><p>密钥存放在/etc/ceph/ceph.client.admin.keyring 文件中 红框中就是密钥 注意开头的空格不是</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210703141022033.png" alt="image-20210703141022033"></p><p>3、创建要挂载的目录</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /mnt/mycephfs </span><br></pre></td></tr></table></figure><p>3、进行挂载</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mount -t ceph 你的ceph集群中任意一个cephip:6789:/ 挂载的文件夹 -o name=admin,secret=你的密钥</span><br><span class="line">mount -t ceph 192.168.77.101:6789:/ /mnt/mycephfs/ -o name=admin,secret=AQAB4d5gZ83FLxAA1x8C6tvqCBwqr4NSI7Of6w**</span><br></pre></td></tr></table></figure><p>上面的挂载会在bash上留下历史记录，可以使用将密钥写入在文件中进行读取</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -t ceph 192.168.77.101:6789:/ /mnt/mycephfs -o name=admin,secretfile=/etc/ceph/admin.secret</span><br></pre></td></tr></table></figure><p>4、取消挂载</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount /mnt/mycephfs</span><br></pre></td></tr></table></figure><p>5、多文件系统指定</p><p>开启多文件系统（14版本默认是关闭的，这还是一个测试性的功能 可能会导致一些问题包括文件丢失等）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph fs flag <span class="built_in">set</span> enable_multiple <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210703150126287.png" alt="image-20210703150126287"></p><p>创建一个新的文件系统</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ceph osd pool create metadata2 8 8 <span class="comment"># 元数据池</span></span><br><span class="line">ceph osd pool create data2 8 8 <span class="comment"># 数据池</span></span><br><span class="line">ceph fs new cfs metadata2 data2 <span class="comment"># cfs fs_name 可以任选 cephfs_metadata 元数据池 cephfs_data 数据池</span></span><br></pre></td></tr></table></figure><p>进行mds_namespace查询</p><p>mds_namespace是创建的fs_name 例如上面的就是cfs 在多文件系统的时候指定mds_namespace进行挂载</p><p>如果忘了可以使用</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph mds <span class="built_in">stat</span></span><br></pre></td></tr></table></figure><p>进行查询</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210703151429468.png" alt="image-20210703151429468"></p><p>如上图所示，存在两个文件系统分别是cephfs和cfs</p><p>指定cfs文件系统进行挂载</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -t ceph 192.168.77.101:6789:/ /mnt/mycephfs/ -o mds_namespace=cfs,name=admin,secret=AQAB4d5gZ83FLxAA1x8C6tvqCBwqr4NSI7Of6w**</span><br></pre></td></tr></table></figure><h4 id="FUSE挂载">FUSE挂载</h4><p>1、这个需要安装ceph-fuse 以centoos7为例</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install ceph-fuse -y</span><br></pre></td></tr></table></figure><p>2、将配置文件拷贝到要进行挂载的机器上</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/ceph</span><br><span class="line">sudo scp &#123;user&#125;@&#123;server-machine&#125;:/etc/ceph/ceph.conf /etc/ceph/ceph.conf</span><br></pre></td></tr></table></figure><p>3、拷贝keyring</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo scp &#123;user&#125;@&#123;server-machine&#125;:/etc/ceph/ceph.client.admin.keyring /etc/ceph</span><br></pre></td></tr></table></figure><p>4、进行挂载</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /home/username/cephfs</span><br><span class="line">sudo ceph-fuse -m 你的ceph集群中任意一个cephip:6789:/ 挂载的文件夹</span><br><span class="line">sudo ceph-fuse -m 192.168.0.1:6789 /home/username/cephfs</span><br></pre></td></tr></table></figure><p>5、取消挂载</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fusermount -u 挂载的文件夹</span><br><span class="line"><span class="comment"># 例如</span></span><br><span class="line">fusermount -u /home/liao/cephfs</span><br></pre></td></tr></table></figure><p>如果你有多个cephfs文件系统 挂载的时候使用–client_mds_namespace进行指定或者在ceph.conf中增加 <code>client_mds_namespace</code>配置进行指定。</p><p>与上面的使用kernel driver挂载一样，同样使用cfs文件系统</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ceph-fuse  -m  192.168.77.101:6789 /home --client_mds_namespace cfs</span><br></pre></td></tr></table></figure><h4 id="挂载在fstab上">挂载在fstab上</h4><p>Kernel diver模式</p><p>编辑/etc/fstab 在下面追加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ceph集群中任意一台机器的ip:6789:/ 挂载点 ceph mds_namespace=文件系统,name=admin,secret=你的密钥,noatime,_netdev 0 2</span><br><span class="line"></span><br><span class="line">192.168.77.101:6789:/     /mnt/ceph    ceph    mds_namespace=cfs,name=admin,secret=AQAB4d5gZ83FLxAA1x8C6tvqCBwqr4NSI7Of6w**,noatime,_netdev    0       2</span><br></pre></td></tr></table></figure><p>FUSE 模式</p><p>首先确保将ceph集群中的<code>ceph.conf</code>和<code>ceph.client.admin.keyring</code>拷贝到本机器下/etc/ceph/文件夹下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#DEVICE PATH       TYPE      OPTIONS</span></span><br><span class="line">none    /mnt/ceph  fuse.ceph ceph.id=&#123;user-ID&#125;[,ceph.conf=&#123;path/to/conf.conf&#125;],_netdev,defaults  0 0</span><br><span class="line"><span class="comment"># 例如</span></span><br><span class="line">none    /mnt/demo  fuse.ceph ceph.id=admin,_netdev,defaults  0 0</span><br><span class="line"><span class="comment"># 指定配置文件夹</span></span><br><span class="line">none    /mnt/ceph  fuse.ceph ceph.id=myuser,ceph.conf=/etc/ceph/foo.conf,_netdev,defaults  0 0</span><br></pre></td></tr></table></figure><h3 id="在-CEPHFS-中使用擦除编码池-实验失败">在 CEPHFS 中使用擦除编码池(实验失败)</h3><p>你可以在CephFs上使用纠删码 如下所示:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph osd pool <span class="built_in">set</span> my_ec_pool allow_ec_overwrites <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="cephfs-shell">cephfs shell</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cephfs-shell [-options] – [<span class="built_in">command</span>, <span class="built_in">command</span>,…]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ceph </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ceph </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ceph集群安装</title>
      <link href="/2021/07/05/ceph%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85/"/>
      <url>/2021/07/05/ceph%E9%9B%86%E7%BE%A4%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<p>使用ceph deploy进行安装</p><p>在虚拟机下进行安装，选用的操作系统为centos7.9 先使用一台宿主机进行一些通用配置的修改，再根据宿主机进行克隆。</p><span id="more"></span><p>宿主机配置如下</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210702153730970.png" alt="image-20210702153730970"></p><p>使用双网卡，2核2G</p><p>以这台虚拟机作为宿主机器进行链接克隆，这样可以先在宿主机上修改好国内源，克隆的机器就不需要再进行修改了。</p><h2 id="宿主机配置">宿主机配置</h2><p>更新系统</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update</span><br></pre></td></tr></table></figure><h3 id="更换国内源">更换国内源</h3><p>centos 可以自己寻找最快的源进行更新下载，但是为了后面的统一，将源更换为华为云。（阿里云镜像站一直在升级，所以选择了华为云）。</p><p>1、备份配置文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -a /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak</span><br></pre></td></tr></table></figure><p>2、修改<strong>CentOS-Base.repo</strong>文件，取消<strong>baseurl</strong>开头的行的注释，并增加<strong>mirrorlist</strong>开头的行的注释。将文件中的<strong><a href="http://mirror.centos.org">http://mirror.centos.org</a></strong>替换成<strong><a href="https://repo.huaweicloud.com">https://repo.huaweicloud.com</a></strong>，可以参考如下命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s/#baseurl/baseurl/g&quot;</span> /etc/yum.repos.d/CentOS-Base.repo</span><br><span class="line">sed -i <span class="string">&quot;s/mirrorlist=http/#mirrorlist=http/g&quot;</span> /etc/yum.repos.d/CentOS-Base.repo</span><br><span class="line">sed -i <span class="string">&quot;s@http://mirror.centos.org@https://repo.huaweicloud.com@g&quot;</span> /etc/yum.repos.d/CentOS-Base.repo</span><br></pre></td></tr></table></figure><p>3、执行<strong>yum clean all</strong>清除原有yum缓存。</p><p>4、执行<strong>yum makecache</strong>（刷新缓存）或者<strong>yum repolist all</strong>（查看所有配置可以使用的文件，会自动刷新缓存）。</p><h3 id="启用epel源">启用epel源</h3><p>1、安装epel</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release</span><br></pre></td></tr></table></figure><p>2、配置备份文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp -a /etc/yum.repos.d/epel.repo /etc/yum.repos.d/epel.repo.backup</span><br><span class="line">mv /etc/yum.repos.d/epel-testing.repo /etc/yum.repos.d/epel-testing.repo.backup</span><br></pre></td></tr></table></figure><p>3、修改<strong>epel.repo</strong>文件，取消<strong>baseurl</strong>开头的行的注释，并增加<strong>mirrorlist</strong>开头的行的注释。将文件中的<strong><a href="http://download.fedoraproject.org/pub">http://download.fedoraproject.org/pub</a></strong>替换成<strong><a href="https://repo.huaweicloud.com">https://repo.huaweicloud.com</a></strong>，可以参考如下命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&quot;s/#baseurl/baseurl/g&quot;</span> /etc/yum.repos.d/epel.repo</span><br><span class="line">sed -i <span class="string">&quot;s/metalink/#metalink/g&quot;</span> /etc/yum.repos.d/epel.repo</span><br><span class="line">sed -i <span class="string">&quot;s@https\?://download.fedoraproject.org/pub@https://repo.huaweicloud.com@g&quot;</span> /etc/yum.repos.d/epel.repo</span><br></pre></td></tr></table></figure><p>4、执行<strong>yum update</strong>更新。</p><h3 id="启用ceph源">启用ceph源</h3><p>安装ceph的repo</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh https://repo.huaweicloud.com/ceph/rpm-nautilus/el7/noarch/ceph-release-1-1.el7.noarch.rpm  <span class="comment"># 安装nautilus版本</span></span><br></pre></td></tr></table></figure><p>修改为华为源</p><p><code>vim  /etc/yum.repos.d/ceph.repo</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[Ceph]</span><br><span class="line">name=Ceph packages <span class="keyword">for</span> <span class="variable">$basearch</span></span><br><span class="line">baseurl=https://repo.huaweicloud.com/ceph/rpm-nautilus/el7/<span class="variable">$basearch</span></span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line"><span class="built_in">type</span>=rpm-md</span><br><span class="line">gpgkey=https://repo.huaweicloud.com/ceph/keys/release.asc</span><br><span class="line"></span><br><span class="line">[Ceph-noarch]</span><br><span class="line">name=Ceph noarch packages</span><br><span class="line">baseurl=https://repo.huaweicloud.com/ceph/rpm-nautilus/el7/noarch</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line"><span class="built_in">type</span>=rpm-md</span><br><span class="line">gpgkey=https://repo.huaweicloud.com/ceph/keys/release.asc</span><br><span class="line"></span><br><span class="line">[ceph-source]</span><br><span class="line">name=Ceph <span class="built_in">source</span> packages</span><br><span class="line">baseurl=https://repo.huaweicloud.com/ceph/rpm-nautilus/el7/SRPMS</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line"><span class="built_in">type</span>=rpm-md</span><br><span class="line">gpgkey=https://repo.huaweicloud.com/ceph/keys/release.asc</span><br></pre></td></tr></table></figure><h3 id="修改静态IP">修改静态IP</h3><p>（根据自己的机器进行修改 这里公开网卡为192.168.77.0/24 望断 内部网卡为192.168.88.0/24网段）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install net-tools <span class="comment"># 可以使用ifconfig进行查看ip信息</span></span><br></pre></td></tr></table></figure><p>查看网卡为ens33和ens34</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210702161509080.png" alt="image-20210702161509080"></p><p>进行修改==要根据自己的网卡情况进行修改==</p><p>例如我的</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210702162712264.png" alt="image-20210702162712264"></p><p>vi /etc/sysconfig/network-scripts/ifcfg-ens33</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210704143342586.png" alt="image-20210704143342586"></p><p>vi /etc/sysconfig/network-scripts/ifcfg-ens34</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210704150048741.png" alt="image-20210704150048741"></p><p>==修改完成后需要进行重启==</p><h3 id="安装ntp">安装ntp</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install ntp ntpdate ntp-doc</span><br></pre></td></tr></table></figure><p>设置开启自启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> chronyd <span class="comment">#关闭chronyd 否则无法开机自启动</span></span><br><span class="line">systemctl restart ntpd</span><br><span class="line">systemctl <span class="built_in">enable</span> ntpd</span><br></pre></td></tr></table></figure><p>查询</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ntpq -p</span><br></pre></td></tr></table></figure><h2 id="安装集群">安装集群</h2><p>将宿主机进行链接克隆,克隆机器node1、node2、node3</p><p>集群规划</p><table><thead><tr><th>机器名称</th><th>ip1</th><th>ip2</th></tr></thead><tbody><tr><td>ceph1</td><td>192.168.77.101</td><td>192.168.88.101</td></tr><tr><td>ceph2</td><td>192.168.77.102</td><td>192.168.88.102</td></tr><tr><td>ceph3</td><td>192.168.77.103</td><td>192.168.88.103</td></tr></tbody></table><h3 id="修改集群静态ip">修改集群静态ip</h3><p>对node1进行静态IP修改</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210702164641360.png" alt="image-20210702164641360"></p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210702164804629.png" alt="image-20210702164804629"></p><p>对node2 修改为（192.168.77.102 192.168.88.102）</p><p>对node3 修改为（192.168.77.103 192.168.88.103）</p><h3 id="设置主机名">设置主机名</h3><p>分别为node1 node2 node3</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname node1 <span class="comment"># 在node1 192.168.77.101 上执行</span></span><br><span class="line">hostnamectl set-hostname node2 <span class="comment"># 在node2 192.168.77.102 上执行</span></span><br><span class="line">hostnamectl set-hostname node3 <span class="comment"># 在node3 192.168.77.103 上执行</span></span><br></pre></td></tr></table></figure><p>在node1 node2 node3上设置机器名称映射</p><p>vim /etc/hosts</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.77.101 node1</span><br><span class="line">192.168.77.102 node2</span><br><span class="line">192.168.77.103 node3</span><br></pre></td></tr></table></figure><p>在三台机器上都能ping通</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ping node1</span><br><span class="line">ping node2</span><br><span class="line">ping node3</span><br></pre></td></tr></table></figure><h3 id="设置免密登陆">设置免密登陆</h3><p>在node1上进行免密 能都免密登陆node1 node2 node3</p><p>在node1（192.168.77.101）上执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen </span><br></pre></td></tr></table></figure><p>一路回车 生成公钥和私钥</p><p>拷贝公钥到node1 node2 node3 根据提示输入root的用户密码即可</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id node1</span><br><span class="line">ssh-copy-id node2</span><br><span class="line">ssh-copy-id node3</span><br></pre></td></tr></table></figure><p>分别执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ssh node1</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">ssh node2</span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">ssh node3</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><p>中间不需要输入密码就成功了。</p><h3 id="关闭selinux和防火墙">关闭selinux和防火墙</h3><p>在node1 node2 node3下执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0 <span class="comment"># 临时关闭</span></span><br></pre></td></tr></table></figure><p>vim /etc/selinux/config</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210702171305744.png" alt="image-20210702171305744"></p><p>ceph health</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld <span class="comment"># 临时关闭</span></span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld <span class="comment"># 禁止开启自启动</span></span><br><span class="line">systemctl status firewalld <span class="comment">#查看状态</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210702171540164.png" alt="image-20210702171540164"></p><p>==修改后需要进行重启==</p><p>重启之后进行查询(三台机器都要查询)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">getenforce <span class="comment"># 查询防火墙</span></span><br><span class="line">systemctl status firewalld <span class="comment">#查询数据</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210704160735830.png" alt="image-20210704160735830"></p><h3 id="ntp时间同步">ntp时间同步</h3><p>在==三台机==器上都启动ntp并允许自启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart ntpd</span><br><span class="line">systemctl <span class="built_in">enable</span> ntpd</span><br></pre></td></tr></table></figure><p>ceph ntp时间与外网同步 不需要进行设置</p><p>将node2、node3上设置时间同步的为node1的时间</p><p>在node2、node3上修改ntp配置文件</p><p>vim /etc/ntp.conf</p><p>将==其他的时间服务器注释掉==</p><p>并添加</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210704162400044.png" alt="image-20210704162400044"></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> chronyd <span class="comment">#关闭chronyd 否则无法开机自启动</span></span><br><span class="line">server 192.168.77.101 iburst  <span class="comment"># 添加node1为主机</span></span><br><span class="line">restrict 192.168.77.101  nomodify notrap noquery <span class="comment">#允许修改</span></span><br></pre></td></tr></table></figure><h2 id="部署ceph">部署ceph</h2><p>在node1上安装ceph-deploy</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install ceph-deploy</span><br><span class="line">yum install python-pip</span><br></pre></td></tr></table></figure><p>创建文件夹管理配置文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir my-cluster</span><br><span class="line"><span class="built_in">cd</span> my-cluster</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph-deploy new --public-network 192.168.77.0/24 --cluster-network 192.168.88.0/24 node1 <span class="comment"># 部署node1为monitor节点</span></span><br></pre></td></tr></table></figure><p>由于官方文档中的自动安装会指向国外的源，因此我们使用<code>--no-adjust-repos</code>强制指定不需要更换源，使用我们自己的源</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph-deploy install --no-adjust-repos node1 node2 node3  <span class="comment">#--no-adjust-repos 需要指定不更换源 </span></span><br></pre></td></tr></table></figure><p>部署monitor并创建密钥环</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph-deploy mon create-initial</span><br></pre></td></tr></table></figure><p>将配置文件和密钥拷贝到其他节点 这样你就可以使用 ceph CLI，而不必在每次执行命令时指定监视器地址和 ceph.client.admin.keyring。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph-deploy admin node1 node2 node3</span><br></pre></td></tr></table></figure><h3 id="创建mgr">创建mgr</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph-deploy mgr create node1</span><br></pre></td></tr></table></figure><h3 id="添加osds">添加osds</h3><p>在虚拟机上添加硬盘（不需要进行格式化等操作 直接挂载裸盘即可） 三台都进行挂载</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210702175610805.png" alt="image-20210702175610805"></p><p>使用fdisk进行查看</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210702175934553.png" alt="image-20210702175934553"></p><p>多了一块盘</p><p>在node1 中的==my-cluster==文件夹上执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ceph-deploy osd create --data /dev/sdb node1</span><br><span class="line">ceph-deploy osd create --data /dev/sdb node2</span><br><span class="line">ceph-deploy osd create --data /dev/sdb node3</span><br></pre></td></tr></table></figure><p>检查ceph的健康</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph health</span><br></pre></td></tr></table></figure><p>如果出现</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210702180519433.png" alt="image-20210702180519433"></p><p>禁用ceph的不安全模式</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph config <span class="built_in">set</span> mon auth_allow_insecure_global_id_reclaim <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>在进行检查</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210702180645979.png" alt="image-20210702180645979">rbd</p><p>查看节点的信息</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph -s</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210702180741993.png" alt="image-20210702180741993"></p><h3 id="部署mds">部署mds</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph-deploy mds create  node1</span><br></pre></td></tr></table></figure><p>添加monitor</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ceph-deploy mon add node2 </span><br><span class="line">ceph-deploy mon add node3</span><br></pre></td></tr></table></figure><p>添加新的 Ceph 监视器后，Ceph 将开始同步监视器并形成法定人数。您可以通过执行以下操作来检查仲裁状态：</p><h3 id="添加manager">添加manager</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ceph-deploy mgr create node2</span><br><span class="line">ceph-deploy mgr create node3</span><br></pre></td></tr></table></figure><h3 id="创建rgw实例">创建rgw实例</h3><p>要使用 Ceph 的 Ceph 对象网关组件，您必须部署一个 RGW 实例。执行以下命令以创建 RGW 的新实例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph-deploy rgw create node1</span><br></pre></td></tr></table></figure><p>默认情况下rgw监听的是7480端口 可以通过修改ceph.conf配置文件进行端口的修改</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">rgw <span class="attr">frontends</span> = civetweb <span class="attr">port=80</span></span><br></pre></td></tr></table></figure><h3 id="存储-检索对象数据">存储/检索对象数据</h3><p>要将对象数据存储在 Ceph 存储集群中，Ceph 客户端必须： 1、设置一个对象名称 2、指定存储池</p><p>Ceph Client 检索最新的集群映射，CRUSH 算法计算如何将对象映射到归置组，然后动态计算如何将归置组分配给 Ceph OSD Daemon。要查找对象位置，您只需要对象名称和池名称。例如：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph osd map &#123;poolname&#125; &#123;object-name&#125;</span><br></pre></td></tr></table></figure><h3 id="创建存储池">创建存储池</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph osd pool create <span class="built_in">test</span> 2</span><br></pre></td></tr></table></figure><h2 id="dashboard">dashboard</h2><h3 id="安装">安装</h3><p>首先确定是否安装了包(所有节点都需要安装)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install ceph-mgr-dashboard -y</span><br></pre></td></tr></table></figure><p>启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph mgr module <span class="built_in">enable</span> dashboard</span><br></pre></td></tr></table></figure><p>禁止https</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph config set mgr mgr/dashboard/ssl false</span><br></pre></td></tr></table></figure><h3 id="设置ip与port">设置ip与port</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ceph config <span class="built_in">set</span> mgr mgr/dashboard/server_addr 192.168.77.101</span><br><span class="line">ceph config <span class="built_in">set</span> mgr mgr/dashboard/server_port 8080</span><br></pre></td></tr></table></figure><h3 id="查看dashboard的地址">查看dashboard的地址</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph mgr services</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210705153403165.png" alt="image-20210705153403165"></p><h3 id="设置登陆用户">设置登陆用户</h3><p>创建一个包含密码的文件mypass 写入你的密码</p><p>之后就可以使用用户和密码进行登陆</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ceph dashboard ac-user-create &lt;username&gt;  administrator -i &lt;password_path&gt;</span><br><span class="line">ceph dashboard ac-user-create liao administrator -i mypass</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210704174247727.png" alt="image-20210704174247727"></p><h3 id="启用rgw">启用rgw</h3><p>Ceph Dashboard默认安装好后，没有启用rgw,需要手工Dashboard中启用RGW</p><p>创建账户</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">radosgw-admin user create --uid=rgw --display-name=rgw --system</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210704174454142.png" alt="image-20210704174454142"></p><p>记下输出的access_key 和 secret_key的值，当初没有记下也可以通过以下命令查看(可选)￼<br>1<br>ceph mds stat</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">radosgw-admin user info --uid=rgw</span><br></pre></td></tr></table></figure><p>将<code>access_key</code>和<code>secret_key</code>的值分别保存在<code>access_key</code>和<code>secret_key</code>两个文件中</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ceph dashboard set-rgw-api-access-key -i access_key</span><br><span class="line">ceph dashboard set-rgw-api-secret-key -i secret_key </span><br></pre></td></tr></table></figure><p>这样就可以正常访问了</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210704175046847.png" alt="image-20210704175046847"></p><h3 id="配置cephFs">配置cephFs</h3><p>创建元数据pool和数据pool</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ceph osd pool create cephfs_data 8 <span class="comment">#创建数据pool</span></span><br><span class="line">ceph osd pool create cephfs_metadata  8 <span class="comment">#创建元数据pool</span></span><br></pre></td></tr></table></figure><p>创建文件系统</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph fs new cephfs cephfs_metadata cephfs_data</span><br></pre></td></tr></table></figure><p>查看状态</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceph mds <span class="built_in">stat</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ceph </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ceph </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ceph</title>
      <link href="/2021/07/05/ceph/"/>
      <url>/2021/07/05/ceph/</url>
      
        <content type="html"><![CDATA[<h2 id="ceph-简介">ceph 简介</h2><p>一个ceph集群至少需一个<strong>ceph Monitor</strong>  [ceph 监视器]、一个<strong>Ceph Manager</strong> [ceph 管理系统 ] 和一个<strong>Ceph OSD</strong>(Object<br>Storage Daemon) [ceph 对象存储守护系统]  如果需要ceph文件系统客户端需要再增加<strong>Ceph Metadata Server</strong>  ceph元数据服务/</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/37f38700cd784da451becd6718695f086edd0fd2ab5f8e8daf686249096ce7ab.png" alt="../../_images/37f38700cd784da451becd6718695f086edd0fd2ab5f8e8daf686249096ce7ab.png"></p><span id="more"></span><p><strong>Monitors</strong> 监视器</p><p>Ceph Monitor (ceph-mon) 维护集群状态的映射，包括监视器映射、管理器映射、OSD 映射、MDS 映射和 CRUSH 映射。（monitor map, manager map, the OSD map, the MDS map, and the CRUSH map）.这些映射（map） 是Ceph守护进程相互协调所需要的关键集群状态。同时还负责守护进程和客户端之间的身份验证。通常至少需要3个监视器才能实现高可用。</p><p><strong>Managers</strong> 管理器</p><p>Ceph 管理器守护进程 (ceph-mgr) 负责跟踪运行时指标和 Ceph 集群的当前状态，包括存储利用率、当前性能指标和系统负载。manager守护进程还托管基于Python的Modules去管理和暴露cpeh的集群信息 包括ceph dashboard 和rest api。至少两个manager实现高可用。</p><p><strong>Ceph OSDs</strong> 对象存储守护进程</p><p>Ceph OSD（对象存储守护进程，ceph-osd）存储数据，处理数据复制、恢复、重新平衡，并通过检查其他 Ceph OSD 守护进程的心跳来向 Ceph 监视器和管理器提供一些监控信息。通常至少需要 3 个 Ceph OSD 来实现冗余和高可用性。</p><p><strong>MDSs</strong>  ceph元数据服务（CPU密集型）</p><p>Ceph 元数据服务器（MDS、ceph-mds）代表 Ceph 文件系统存储元数据（即 Ceph 块设备和 Ceph 对象存储不使用 MDS）。 Ceph 元数据服务器允许 POSIX 文件系统用户执行基本命令（如 ls、find 等），而不会给 Ceph 存储集群带来巨大负担。</p><p>Ceph 将数据作为对象存储在逻辑存储池中。Ceph使用CRUSH算法计算出哪个归置组应该包含对象，并进一步计算哪个 Ceph OSD Daemon 应该存储归置组。使用CRUSH 算法使 Ceph 存储集群能够动态扩展、重新平衡和恢复。</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210701162116970.png" alt="image-20210701162116970"></p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210701163316711.png" alt="image-20210701163316711"></p><p>存储设备包括</p><ul><li>DAS: IDE SATA SCSI SAS USB</li><li>NAS NFS CIFS</li><li>SAN SCSI FC SAN</li></ul>]]></content>
      
      
      <categories>
          
          <category> ceph </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ceph </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux下使用Typora与Picgo实现GitHub图床</title>
      <link href="/2021/07/01/Linux%E4%B8%8B%E4%BD%BF%E7%94%A8Typora%E4%B8%8EPicgo%E5%AE%9E%E7%8E%B0GitHub%E5%9B%BE%E5%BA%8A/"/>
      <url>/2021/07/01/Linux%E4%B8%8B%E4%BD%BF%E7%94%A8Typora%E4%B8%8EPicgo%E5%AE%9E%E7%8E%B0GitHub%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<p>最新版本的typora实现了利用PicGo自动上传图片的功能，但是基本上都是介绍在Windows下如何使用的，很少介绍如何在Linux下使用。经过摸索实现了typora+picgo+github通过代理实现图床的功能。</p><span id="more"></span><h2 id="1、Typora">1、Typora</h2><p>不同的发行版有不同的安装方法，也可以在官网直接下载二进制文件使用。官网地址https://typora.io/。</p><h2 id="2、Picgo">2、Picgo</h2><p>官网提供的<code>picgo-appimage</code>在我的Archlinux下无法正常运行，无法打开界面。而且看起来不太好与Typora整合，因此选择了node.js下的picgo包。</p><h3 id="2-1-node环境安装">2.1 node环境安装</h3><p>首先安装nodejs，下载地址https://nodejs.org/en/。安装方法就是解压配置好环境变量即可（具体可自行百度）。接着配置国内的<code>cnpm</code>。参考地址 <a href="https://developer.aliyun.com/mirror/NPM%E3%80%82">https://developer.aliyun.com/mirror/NPM。</a></p><h3 id="2-2-全局安装picgo">2.2 全局安装picgo</h3><p>执行以下命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install picgo -g <span class="comment">#需要配置cnpm</span></span><br></pre></td></tr></table></figure><p>安装好后，重新打开一个终端 能够找到<code>picgo</code>命令即可。</p><h2 id="3-配置GitHub">3 配置GitHub</h2><p>a、创建一个新的仓库</p><p><strong>注意必须初始化</strong></p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/1611491794.png" alt=""></p><p>b、创建私钥</p><p>在你的账户下的设置里选择<code>Developer settings</code>-&gt;<code>Personal access tokens</code>新建一个</p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/1611491890.png" style="zoom:50%;" /><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/1611492053.png" style="zoom:50%;" /><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/1611492159.png" style="zoom:50%;" /><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/1611492358.png" style="zoom:50%;" /><p>这样会生成一段token 这个值只显示一次所以必须保存好，下面会用到。</p><p>c. 配置picgo</p><p>在终端下执行,会出现选项卡，通过键盘的方向建选择Github，回车确定</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">picgo <span class="built_in">set</span> uploader</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/1611492765.png" alt=""></p><p>依次填入信息即可<img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/1611492879.png" alt=""></p><p><strong>（1）repo</strong></p><p>repo就是你<code>用户名/仓库名</code> 例如刚才创建了demo_img 我的用户名为<code>liaoxianfu</code>那么就是<code>liaoxianfu/demo_img</code></p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/1611491794.png" alt=""></p><p>（2）branch为main （之前的是master，但是从2021年GitHub改成了main）</p><p>（3）token就是之前让你创建token时保存下来的那一串token</p><p>（4）path 就是你上传图片在你仓库保存的位置</p><p>（5）customUrl 国内是不能访问github的文件服务的，需要进行CDN加速访问，这里使用<code>https://cdn.jsdelivr.net/gh/用户名/仓库名</code>配置</p><p>配置好后使用github作为图床</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">picgo use uploader</span><br></pre></td></tr></table></figure><p>选择GitHub即可。</p><p>在终端下使用上传命令测试以下能不能正常上传，正常上传口会出现PicGo SUCCESS 的标志和返回的访问url</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">picgo upload 图片地址</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/1611493714.png" alt=""></p><p>4、整合Typora和Picgo</p><p>在Typora的文件选项卡的偏好设置的图像选项中将插入图片时选择上传图片，上传服务选择<code>Custom Command</code>命令设置为<code>picgo upload</code>即可</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/1611493860.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql索引</title>
      <link href="/2021/06/30/mysql%E7%B4%A2%E5%BC%95/"/>
      <url>/2021/06/30/mysql%E7%B4%A2%E5%BC%95/</url>
      
        <content type="html"><![CDATA[<h2 id="1、索引操作">1、索引操作</h2><p>创建索引</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 格式</span><br><span class="line">CREATE [UNIQUE|FULLTEXT|SPATIAL]  INDEX index_name </span><br><span class="line">[USING  index_type]</span><br><span class="line">ON tbl_name(index_col_name,...)</span><br></pre></td></tr></table></figure><span id="more"></span><p>UNIQUE 唯一索引</p><p>FULLTEXT 全文索引</p><p>SPATIAL</p><p>创建普通索引</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create index index_name on table_name</span><br></pre></td></tr></table></figure><p>查看索引</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show index  from  table_name;</span><br></pre></td></tr></table></figure><p>修改索引</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table table_name add [index_type] index_name(column_list)</span><br></pre></td></tr></table></figure><p>删除索引</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DROP  INDEX  index_name  ON  tbl_name;</span><br></pre></td></tr></table></figure><h2 id="2、设计原则">2、设计原则</h2><p>创建的索引应该是查询次数多、创建唯一索引，索引列应该是where中的列，最好使用短索引，利用最左前缀.。</p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 索引 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql事务</title>
      <link href="/2021/06/30/mysql%E4%BA%8B%E5%8A%A1/"/>
      <url>/2021/06/30/mysql%E4%BA%8B%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h3 id="1、什么是事务">1、什么是事务?</h3><p>事务就是用户定义的一系列执行SQL语句的操作, 这些操作要么完全地执行，要么完全地都不执行， 它是一个不可分割的工作执行单元。</p><span id="more"></span><h3 id="2、事务的使用场景">2、事务的使用场景</h3><p>在日常生活中，有时我们需要进行银行转账，这个银行转账操作背后就是需要执行多个SQL语句，假如这些SQL执行到一半突然停电了，那么就会导致这个功能只完成了一半，这种情况是不允许出现，要想解决这个问题就需要通过事务来完成。</p><h3 id="3、事务的特性">3、事务的特性</h3><p>事务具有ACID的是个特性（原子性、一致性、隔离性以及持久性）</p><h4 id="原子性">原子性</h4><p>事务操作要么一起成功要么一起失败，不存在成功一半的情况。</p><h4 id="一致性">一致性</h4><p>事务不会破坏数据库的完整性约束。</p><h4 id="隔离性">隔离性</h4><p>多个事务并发操作时，相互隔离互不干扰</p><h4 id="持久性">持久性</h4><p>一旦事务提交操作就不会丢失。</p><h3 id="4、事务并发导致的问题">4、事务并发导致的问题</h3><p>事务并发可能会导致脏读，不可重复读和幻读问题。</p><h4 id="脏读">脏读</h4><p>出现的情况</p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210629170427020.png" alt="image-20210629170427020" style="zoom:50%;" /><p>以银行转帐为例，同时开启转帐事务和取款事务，其中先进行取款事务，查询账户余额为2000元 用户开始取钱 取出1000元，此时进行转帐事务，这时转帐事务读取的账户余额为（2000-1000=1000元）产生了脏读。同时取款时发生了错误，事务进行回滚变成了2000元 这是再进行转入还是为1000元 转入2000元 账户余额变为（1000+2000=3000）元 但实际应该是4000元。</p><h4 id="不可重复读">不可重复读</h4><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210629171049920.png" alt="image-20210629171049920" style="zoom:50%;" /><h4 id="幻读">幻读</h4><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210629171131537.png" alt="image-20210629171131537" style="zoom:50%;" /><h4 id="解决方法">解决方法</h4><p>在事务操作之前给受影响的行加锁，但是这样会带来并发度的下降，这就是隔离级别与并发性能之间的矛盾。</p><h3 id="5、数据库锁">5、数据库锁</h3><p>数据库锁整体可分为两大类（悲观锁和乐观锁），其中悲观锁是真正意义上的锁并且在数据库上根据事务的隔离级别有对应的锁机制的实现。乐观锁是实现类似版本机制。乐观锁认为当前操作对象操作对象大概率不会并发，所以不需要加锁。</p><h4 id="乐观锁操作">乐观锁操作</h4><p>读取数据库中的对象数据加一个版本号，然后对对象数据进行操作在写入时那该版本号与数据库中的版本号进行校验，如果校验成功就证明没有发生数据没有发生修改可以进行写入，如果发生变动证明发生了修改需要进行重新尝试。</p><p>乐观锁属于利他操作，适用于读多写少的环境，版本策略可以使用自增或者时间戳 （这样需要新增一个版本属性值） 或者记录行属性的值进行hash.</p><h4 id="悲观锁操作">悲观锁操作</h4><p>悲观锁由数据库提供，基于悲观锁实现事务所以直接使用事务即可。悲观锁类型包括 共享锁（又称S锁）、排它锁（X锁）以及更新锁（U锁）。</p><p>共享锁：</p><p>被操作对象加上S锁后只能增加增加S锁，能够同时读不能同时写。</p><p>排它锁</p><p>被操作对象加入X锁后不能再添加任何锁。</p><p>更新锁</p><p>如果操作方法想要先读再写需要增加U锁，加了U锁后 他方可以增加S锁但是不能增加更新锁和排它锁。</p><h3 id="6、事务的隔离级别">6、事务的隔离级别</h3><p>事务级别包括：读未提交、读已提交（Sqlserver oracle 默认的事务隔离级别）、可重复读（mysql 默认事务隔离级别）、串行化。</p><h4 id="读未提交">读未提交</h4><p>读未提交又称一级封锁协议，在更新数据时间增加S锁，直到事务结束，读取时不加锁。可能会出现脏读、不可重复读、幻读的情况。并发度最高。</p><h4 id="读已提交">读已提交</h4><p>读已提交又称二级封锁协议，在更新数据时增加X锁直到事务结束，读取时增加s锁，读取完成后立即释放锁。能够避免脏读，存在不可重复读和幻读的情况。</p><h4 id="可重复读">可重复读</h4><p>可重复读又称三级封锁协议，在更新数据时增加X锁直到事务结束，读取时增加S锁直到事务结束。能够避免脏读和不可重复读，存在幻读的情况。</p><h4 id="串行化（序列化）">串行化（序列化）</h4><p>串行化又称四级封锁协议，在更新数据时增加X锁直到事务结束，读取时为该数据存在的表增加S锁（表锁）。能够避免脏读、不可重复读和幻读的情况。但是并发度最低。</p><p>事务隔离级别与不同问题之间的对应</p><table><thead><tr><th></th><th>脏读</th><th>不可重复读</th><th>幻读</th></tr></thead><tbody><tr><td>读未提交</td><td>X</td><td>X</td><td>X</td></tr><tr><td>读已提交</td><td>✔</td><td>X</td><td>X</td></tr><tr><td>可重复读</td><td>✔</td><td>✔</td><td>X</td></tr><tr><td>串行化</td><td>✔</td><td>✔</td><td>✔</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 事务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql基础</title>
      <link href="/2021/06/30/mysql%E5%9F%BA%E7%A1%80/"/>
      <url>/2021/06/30/mysql%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1>mysql数据库</h1><h2 id="基本操作">基本操作</h2><h3 id="mysql的登录和登出">mysql的登录和登出</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>u用户名 <span class="operator">-</span>p 输入密码</span><br><span class="line">mysql [<span class="operator">-</span>h主机命 <span class="operator">-</span>p 端口] <span class="operator">-</span>u用户名 <span class="operator">-</span>p密码</span><br></pre></td></tr></table></figure><span id="more"></span><h4 id="mysql的常见命令">mysql的常见命令</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看当前所有的数据库</span></span><br><span class="line"><span class="keyword">show</span> database;</span><br><span class="line"><span class="comment">-- 打开指定的数据库</span></span><br><span class="line">use 数据库名</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看指定库的所有表</span></span><br><span class="line">shoe tables <span class="keyword">from</span> 表名</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 创建表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line">列名 列类型，</span><br><span class="line">    <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">-- 查看表结构</span></span><br><span class="line"><span class="keyword">desc</span> 表名</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看mysql版本</span></span><br><span class="line"><span class="keyword">select</span> version();</span><br><span class="line">mysql <span class="comment">--version</span></span><br></pre></td></tr></table></figure><h4 id="mysql语法规范">mysql语法规范</h4><ol><li>不区分大小写 但是建议关键字大写 其他小写</li><li>每条命令最好使用用分号结尾</li><li>每条命令根据需要可以进行换行。</li><li>注释</li></ol><p>DQL 数据查询语言 查</p><p>DML 数据操作语言 增删改</p><p>DDL  数据定义语言 库和表的定义</p><p>TCL 数据控制语言 事务相关的操作</p><h3 id="实验数据">实验数据</h3><p>myemployees.sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Navicat Premium Data Transfer</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> Source Server         : mysql0815</span></span><br><span class="line"><span class="comment"> Source Server Type    : MySQL</span></span><br><span class="line"><span class="comment"> Source Server Version : 50562</span></span><br><span class="line"><span class="comment"> Source Host           : localhost:3306</span></span><br><span class="line"><span class="comment"> Source Schema         : myemployees</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> Target Server Type    : MySQL</span></span><br><span class="line"><span class="comment"> Target Server Version : 50562</span></span><br><span class="line"><span class="comment"> File Encoding         : 65001</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> Date: 06/11/2019 16:25:51</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> NAMES utf8mb4;</span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for departments</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `departments`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `departments`  (</span><br><span class="line">  `department_id` <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `department_name` <span class="type">varchar</span>(<span class="number">3</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> gb2312 <span class="keyword">COLLATE</span> gb2312_chinese_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `manager_id` <span class="type">int</span>(<span class="number">6</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `location_id` <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`department_id`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  INDEX `loc_id_fk`(`location_id`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> `loc_id_fk` <span class="keyword">FOREIGN</span> KEY (`location_id`) <span class="keyword">REFERENCES</span> `locations` (`location_id`) <span class="keyword">ON</span> <span class="keyword">DELETE</span> RESTRICT <span class="keyword">ON</span> UPDATE RESTRICT</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">271</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> gb2312 <span class="keyword">COLLATE</span> <span class="operator">=</span> gb2312_chinese_ci ROW_FORMAT <span class="operator">=</span> Compact;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of departments</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">10</span>, <span class="string">&#x27;Adm&#x27;</span>, <span class="number">200</span>, <span class="number">1700</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">20</span>, <span class="string">&#x27;Mar&#x27;</span>, <span class="number">201</span>, <span class="number">1800</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">30</span>, <span class="string">&#x27;Pur&#x27;</span>, <span class="number">114</span>, <span class="number">1700</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">40</span>, <span class="string">&#x27;Hum&#x27;</span>, <span class="number">203</span>, <span class="number">2400</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">50</span>, <span class="string">&#x27;Shi&#x27;</span>, <span class="number">121</span>, <span class="number">1500</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">60</span>, <span class="string">&#x27;IT&#x27;</span>, <span class="number">103</span>, <span class="number">1400</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">70</span>, <span class="string">&#x27;Pub&#x27;</span>, <span class="number">204</span>, <span class="number">2700</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">80</span>, <span class="string">&#x27;Sal&#x27;</span>, <span class="number">145</span>, <span class="number">2500</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">90</span>, <span class="string">&#x27;Exe&#x27;</span>, <span class="number">100</span>, <span class="number">1700</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">100</span>, <span class="string">&#x27;Fin&#x27;</span>, <span class="number">108</span>, <span class="number">1700</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">110</span>, <span class="string">&#x27;Acc&#x27;</span>, <span class="number">205</span>, <span class="number">1700</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">120</span>, <span class="string">&#x27;Tre&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">1700</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">130</span>, <span class="string">&#x27;Cor&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">1700</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">140</span>, <span class="string">&#x27;Con&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">1700</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">150</span>, <span class="string">&#x27;Sha&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">1700</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">160</span>, <span class="string">&#x27;Ben&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">1700</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">170</span>, <span class="string">&#x27;Man&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">1700</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">180</span>, <span class="string">&#x27;Con&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">1700</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">190</span>, <span class="string">&#x27;Con&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">1700</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">200</span>, <span class="string">&#x27;Ope&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">1700</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">210</span>, <span class="string">&#x27;IT &#x27;</span>, <span class="keyword">NULL</span>, <span class="number">1700</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">220</span>, <span class="string">&#x27;NOC&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">1700</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">230</span>, <span class="string">&#x27;IT &#x27;</span>, <span class="keyword">NULL</span>, <span class="number">1700</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">240</span>, <span class="string">&#x27;Gov&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">1700</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">250</span>, <span class="string">&#x27;Ret&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">1700</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">260</span>, <span class="string">&#x27;Rec&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">1700</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `departments` <span class="keyword">VALUES</span> (<span class="number">270</span>, <span class="string">&#x27;Pay&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">1700</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for employees</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `employees`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `employees`  (</span><br><span class="line">  `employee_id` <span class="type">int</span>(<span class="number">6</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `first_name` <span class="type">varchar</span>(<span class="number">20</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> gb2312 <span class="keyword">COLLATE</span> gb2312_chinese_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `last_name` <span class="type">varchar</span>(<span class="number">25</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> gb2312 <span class="keyword">COLLATE</span> gb2312_chinese_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `email` <span class="type">varchar</span>(<span class="number">25</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> gb2312 <span class="keyword">COLLATE</span> gb2312_chinese_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `phone_number` <span class="type">varchar</span>(<span class="number">20</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> gb2312 <span class="keyword">COLLATE</span> gb2312_chinese_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `job_id` <span class="type">varchar</span>(<span class="number">10</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> gb2312 <span class="keyword">COLLATE</span> gb2312_chinese_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `salary` <span class="keyword">double</span>(<span class="number">10</span>, <span class="number">2</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `commission_pct` <span class="keyword">double</span>(<span class="number">4</span>, <span class="number">2</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `manager_id` <span class="type">int</span>(<span class="number">6</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `department_id` <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `hiredate` datetime <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`employee_id`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  INDEX `dept_id_fk`(`department_id`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  INDEX `job_id_fk`(`job_id`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> `dept_id_fk` <span class="keyword">FOREIGN</span> KEY (`department_id`) <span class="keyword">REFERENCES</span> `departments` (`department_id`) <span class="keyword">ON</span> <span class="keyword">DELETE</span> RESTRICT <span class="keyword">ON</span> UPDATE RESTRICT,</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> `job_id_fk` <span class="keyword">FOREIGN</span> KEY (`job_id`) <span class="keyword">REFERENCES</span> `jobs` (`job_id`) <span class="keyword">ON</span> <span class="keyword">DELETE</span> RESTRICT <span class="keyword">ON</span> UPDATE RESTRICT</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">207</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> gb2312 <span class="keyword">COLLATE</span> <span class="operator">=</span> gb2312_chinese_ci ROW_FORMAT <span class="operator">=</span> Compact;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of employees</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">100</span>, <span class="string">&#x27;Steven&#x27;</span>, <span class="string">&#x27;K_ing&#x27;</span>, <span class="string">&#x27;SKING&#x27;</span>, <span class="string">&#x27;515.123.4567&#x27;</span>, <span class="string">&#x27;AD_PRES&#x27;</span>, <span class="number">24000.00</span>, <span class="keyword">NULL</span>, <span class="keyword">NULL</span>, <span class="number">90</span>, <span class="string">&#x27;1992-04-03 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">101</span>, <span class="string">&#x27;Neena&#x27;</span>, <span class="string">&#x27;Kochhar&#x27;</span>, <span class="string">&#x27;NKOCHHAR&#x27;</span>, <span class="string">&#x27;515.123.4568&#x27;</span>, <span class="string">&#x27;AD_VP&#x27;</span>, <span class="number">17000.00</span>, <span class="keyword">NULL</span>, <span class="number">100</span>, <span class="number">90</span>, <span class="string">&#x27;1992-04-03 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">102</span>, <span class="string">&#x27;Lex&#x27;</span>, <span class="string">&#x27;De Haan&#x27;</span>, <span class="string">&#x27;LDEHAAN&#x27;</span>, <span class="string">&#x27;515.123.4569&#x27;</span>, <span class="string">&#x27;AD_VP&#x27;</span>, <span class="number">17000.00</span>, <span class="keyword">NULL</span>, <span class="number">100</span>, <span class="number">90</span>, <span class="string">&#x27;1992-04-03 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">103</span>, <span class="string">&#x27;Alexander&#x27;</span>, <span class="string">&#x27;Hunold&#x27;</span>, <span class="string">&#x27;AHUNOLD&#x27;</span>, <span class="string">&#x27;590.423.4567&#x27;</span>, <span class="string">&#x27;IT_PROG&#x27;</span>, <span class="number">9000.00</span>, <span class="keyword">NULL</span>, <span class="number">102</span>, <span class="number">60</span>, <span class="string">&#x27;1992-04-03 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">104</span>, <span class="string">&#x27;Bruce&#x27;</span>, <span class="string">&#x27;Ernst&#x27;</span>, <span class="string">&#x27;BERNST&#x27;</span>, <span class="string">&#x27;590.423.4568&#x27;</span>, <span class="string">&#x27;IT_PROG&#x27;</span>, <span class="number">6000.00</span>, <span class="keyword">NULL</span>, <span class="number">103</span>, <span class="number">60</span>, <span class="string">&#x27;1992-04-03 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">105</span>, <span class="string">&#x27;David&#x27;</span>, <span class="string">&#x27;Austin&#x27;</span>, <span class="string">&#x27;DAUSTIN&#x27;</span>, <span class="string">&#x27;590.423.4569&#x27;</span>, <span class="string">&#x27;IT_PROG&#x27;</span>, <span class="number">4800.00</span>, <span class="keyword">NULL</span>, <span class="number">103</span>, <span class="number">60</span>, <span class="string">&#x27;1998-03-03 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">106</span>, <span class="string">&#x27;Valli&#x27;</span>, <span class="string">&#x27;Pataballa&#x27;</span>, <span class="string">&#x27;VPATABAL&#x27;</span>, <span class="string">&#x27;590.423.4560&#x27;</span>, <span class="string">&#x27;IT_PROG&#x27;</span>, <span class="number">4800.00</span>, <span class="keyword">NULL</span>, <span class="number">103</span>, <span class="number">60</span>, <span class="string">&#x27;1998-03-03 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">107</span>, <span class="string">&#x27;Diana&#x27;</span>, <span class="string">&#x27;Lorentz&#x27;</span>, <span class="string">&#x27;DLORENTZ&#x27;</span>, <span class="string">&#x27;590.423.5567&#x27;</span>, <span class="string">&#x27;IT_PROG&#x27;</span>, <span class="number">4200.00</span>, <span class="keyword">NULL</span>, <span class="number">103</span>, <span class="number">60</span>, <span class="string">&#x27;1998-03-03 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">108</span>, <span class="string">&#x27;Nancy&#x27;</span>, <span class="string">&#x27;Greenberg&#x27;</span>, <span class="string">&#x27;NGREENBE&#x27;</span>, <span class="string">&#x27;515.124.4569&#x27;</span>, <span class="string">&#x27;FI_MGR&#x27;</span>, <span class="number">12000.00</span>, <span class="keyword">NULL</span>, <span class="number">101</span>, <span class="number">100</span>, <span class="string">&#x27;1998-03-03 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">109</span>, <span class="string">&#x27;Daniel&#x27;</span>, <span class="string">&#x27;Faviet&#x27;</span>, <span class="string">&#x27;DFAVIET&#x27;</span>, <span class="string">&#x27;515.124.4169&#x27;</span>, <span class="string">&#x27;FI_ACCOUNT&#x27;</span>, <span class="number">9000.00</span>, <span class="keyword">NULL</span>, <span class="number">108</span>, <span class="number">100</span>, <span class="string">&#x27;1998-03-03 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">110</span>, <span class="string">&#x27;John&#x27;</span>, <span class="string">&#x27;Chen&#x27;</span>, <span class="string">&#x27;JCHEN&#x27;</span>, <span class="string">&#x27;515.124.4269&#x27;</span>, <span class="string">&#x27;FI_ACCOUNT&#x27;</span>, <span class="number">8200.00</span>, <span class="keyword">NULL</span>, <span class="number">108</span>, <span class="number">100</span>, <span class="string">&#x27;2000-09-09 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">111</span>, <span class="string">&#x27;Ismael&#x27;</span>, <span class="string">&#x27;Sciarra&#x27;</span>, <span class="string">&#x27;ISCIARRA&#x27;</span>, <span class="string">&#x27;515.124.4369&#x27;</span>, <span class="string">&#x27;FI_ACCOUNT&#x27;</span>, <span class="number">7700.00</span>, <span class="keyword">NULL</span>, <span class="number">108</span>, <span class="number">100</span>, <span class="string">&#x27;2000-09-09 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">112</span>, <span class="string">&#x27;Jose Manuel&#x27;</span>, <span class="string">&#x27;Urman&#x27;</span>, <span class="string">&#x27;JMURMAN&#x27;</span>, <span class="string">&#x27;515.124.4469&#x27;</span>, <span class="string">&#x27;FI_ACCOUNT&#x27;</span>, <span class="number">7800.00</span>, <span class="keyword">NULL</span>, <span class="number">108</span>, <span class="number">100</span>, <span class="string">&#x27;2000-09-09 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">113</span>, <span class="string">&#x27;Luis&#x27;</span>, <span class="string">&#x27;Popp&#x27;</span>, <span class="string">&#x27;LPOPP&#x27;</span>, <span class="string">&#x27;515.124.4567&#x27;</span>, <span class="string">&#x27;FI_ACCOUNT&#x27;</span>, <span class="number">6900.00</span>, <span class="keyword">NULL</span>, <span class="number">108</span>, <span class="number">100</span>, <span class="string">&#x27;2000-09-09 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">114</span>, <span class="string">&#x27;Den&#x27;</span>, <span class="string">&#x27;Raphaely&#x27;</span>, <span class="string">&#x27;DRAPHEAL&#x27;</span>, <span class="string">&#x27;515.127.4561&#x27;</span>, <span class="string">&#x27;PU_MAN&#x27;</span>, <span class="number">11000.00</span>, <span class="keyword">NULL</span>, <span class="number">100</span>, <span class="number">30</span>, <span class="string">&#x27;2000-09-09 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">115</span>, <span class="string">&#x27;Alexander&#x27;</span>, <span class="string">&#x27;Khoo&#x27;</span>, <span class="string">&#x27;AKHOO&#x27;</span>, <span class="string">&#x27;515.127.4562&#x27;</span>, <span class="string">&#x27;PU_CLERK&#x27;</span>, <span class="number">3100.00</span>, <span class="keyword">NULL</span>, <span class="number">114</span>, <span class="number">30</span>, <span class="string">&#x27;2000-09-09 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">116</span>, <span class="string">&#x27;Shelli&#x27;</span>, <span class="string">&#x27;Baida&#x27;</span>, <span class="string">&#x27;SBAIDA&#x27;</span>, <span class="string">&#x27;515.127.4563&#x27;</span>, <span class="string">&#x27;PU_CLERK&#x27;</span>, <span class="number">2900.00</span>, <span class="keyword">NULL</span>, <span class="number">114</span>, <span class="number">30</span>, <span class="string">&#x27;2000-09-09 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">117</span>, <span class="string">&#x27;Sigal&#x27;</span>, <span class="string">&#x27;Tobias&#x27;</span>, <span class="string">&#x27;STOBIAS&#x27;</span>, <span class="string">&#x27;515.127.4564&#x27;</span>, <span class="string">&#x27;PU_CLERK&#x27;</span>, <span class="number">2800.00</span>, <span class="keyword">NULL</span>, <span class="number">114</span>, <span class="number">30</span>, <span class="string">&#x27;2000-09-09 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">118</span>, <span class="string">&#x27;Guy&#x27;</span>, <span class="string">&#x27;Himuro&#x27;</span>, <span class="string">&#x27;GHIMURO&#x27;</span>, <span class="string">&#x27;515.127.4565&#x27;</span>, <span class="string">&#x27;PU_CLERK&#x27;</span>, <span class="number">2600.00</span>, <span class="keyword">NULL</span>, <span class="number">114</span>, <span class="number">30</span>, <span class="string">&#x27;2000-09-09 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">119</span>, <span class="string">&#x27;Karen&#x27;</span>, <span class="string">&#x27;Colmenares&#x27;</span>, <span class="string">&#x27;KCOLMENA&#x27;</span>, <span class="string">&#x27;515.127.4566&#x27;</span>, <span class="string">&#x27;PU_CLERK&#x27;</span>, <span class="number">2500.00</span>, <span class="keyword">NULL</span>, <span class="number">114</span>, <span class="number">30</span>, <span class="string">&#x27;2000-09-09 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">120</span>, <span class="string">&#x27;Matthew&#x27;</span>, <span class="string">&#x27;Weiss&#x27;</span>, <span class="string">&#x27;MWEISS&#x27;</span>, <span class="string">&#x27;650.123.1234&#x27;</span>, <span class="string">&#x27;ST_MAN&#x27;</span>, <span class="number">8000.00</span>, <span class="keyword">NULL</span>, <span class="number">100</span>, <span class="number">50</span>, <span class="string">&#x27;2004-02-06 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">121</span>, <span class="string">&#x27;Adam&#x27;</span>, <span class="string">&#x27;Fripp&#x27;</span>, <span class="string">&#x27;AFRIPP&#x27;</span>, <span class="string">&#x27;650.123.2234&#x27;</span>, <span class="string">&#x27;ST_MAN&#x27;</span>, <span class="number">8200.00</span>, <span class="keyword">NULL</span>, <span class="number">100</span>, <span class="number">50</span>, <span class="string">&#x27;2004-02-06 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">122</span>, <span class="string">&#x27;Payam&#x27;</span>, <span class="string">&#x27;Kaufling&#x27;</span>, <span class="string">&#x27;PKAUFLIN&#x27;</span>, <span class="string">&#x27;650.123.3234&#x27;</span>, <span class="string">&#x27;ST_MAN&#x27;</span>, <span class="number">7900.00</span>, <span class="keyword">NULL</span>, <span class="number">100</span>, <span class="number">50</span>, <span class="string">&#x27;2004-02-06 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">123</span>, <span class="string">&#x27;Shanta&#x27;</span>, <span class="string">&#x27;Vollman&#x27;</span>, <span class="string">&#x27;SVOLLMAN&#x27;</span>, <span class="string">&#x27;650.123.4234&#x27;</span>, <span class="string">&#x27;ST_MAN&#x27;</span>, <span class="number">6500.00</span>, <span class="keyword">NULL</span>, <span class="number">100</span>, <span class="number">50</span>, <span class="string">&#x27;2004-02-06 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">124</span>, <span class="string">&#x27;Kevin&#x27;</span>, <span class="string">&#x27;Mourgos&#x27;</span>, <span class="string">&#x27;KMOURGOS&#x27;</span>, <span class="string">&#x27;650.123.5234&#x27;</span>, <span class="string">&#x27;ST_MAN&#x27;</span>, <span class="number">5800.00</span>, <span class="keyword">NULL</span>, <span class="number">100</span>, <span class="number">50</span>, <span class="string">&#x27;2004-02-06 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">125</span>, <span class="string">&#x27;Julia&#x27;</span>, <span class="string">&#x27;Nayer&#x27;</span>, <span class="string">&#x27;JNAYER&#x27;</span>, <span class="string">&#x27;650.124.1214&#x27;</span>, <span class="string">&#x27;ST_CLERK&#x27;</span>, <span class="number">3200.00</span>, <span class="keyword">NULL</span>, <span class="number">120</span>, <span class="number">50</span>, <span class="string">&#x27;2004-02-06 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">126</span>, <span class="string">&#x27;Irene&#x27;</span>, <span class="string">&#x27;Mikkilineni&#x27;</span>, <span class="string">&#x27;IMIKKILI&#x27;</span>, <span class="string">&#x27;650.124.1224&#x27;</span>, <span class="string">&#x27;ST_CLERK&#x27;</span>, <span class="number">2700.00</span>, <span class="keyword">NULL</span>, <span class="number">120</span>, <span class="number">50</span>, <span class="string">&#x27;2004-02-06 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">127</span>, <span class="string">&#x27;James&#x27;</span>, <span class="string">&#x27;Landry&#x27;</span>, <span class="string">&#x27;JLANDRY&#x27;</span>, <span class="string">&#x27;650.124.1334&#x27;</span>, <span class="string">&#x27;ST_CLERK&#x27;</span>, <span class="number">2400.00</span>, <span class="keyword">NULL</span>, <span class="number">120</span>, <span class="number">50</span>, <span class="string">&#x27;2004-02-06 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">128</span>, <span class="string">&#x27;Steven&#x27;</span>, <span class="string">&#x27;Markle&#x27;</span>, <span class="string">&#x27;SMARKLE&#x27;</span>, <span class="string">&#x27;650.124.1434&#x27;</span>, <span class="string">&#x27;ST_CLERK&#x27;</span>, <span class="number">2200.00</span>, <span class="keyword">NULL</span>, <span class="number">120</span>, <span class="number">50</span>, <span class="string">&#x27;2004-02-06 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">129</span>, <span class="string">&#x27;Laura&#x27;</span>, <span class="string">&#x27;Bissot&#x27;</span>, <span class="string">&#x27;LBISSOT&#x27;</span>, <span class="string">&#x27;650.124.5234&#x27;</span>, <span class="string">&#x27;ST_CLERK&#x27;</span>, <span class="number">3300.00</span>, <span class="keyword">NULL</span>, <span class="number">121</span>, <span class="number">50</span>, <span class="string">&#x27;2004-02-06 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">130</span>, <span class="string">&#x27;Mozhe&#x27;</span>, <span class="string">&#x27;Atkinson&#x27;</span>, <span class="string">&#x27;MATKINSO&#x27;</span>, <span class="string">&#x27;650.124.6234&#x27;</span>, <span class="string">&#x27;ST_CLERK&#x27;</span>, <span class="number">2800.00</span>, <span class="keyword">NULL</span>, <span class="number">121</span>, <span class="number">50</span>, <span class="string">&#x27;2004-02-06 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">131</span>, <span class="string">&#x27;James&#x27;</span>, <span class="string">&#x27;Marlow&#x27;</span>, <span class="string">&#x27;JAMRLOW&#x27;</span>, <span class="string">&#x27;650.124.7234&#x27;</span>, <span class="string">&#x27;ST_CLERK&#x27;</span>, <span class="number">2500.00</span>, <span class="keyword">NULL</span>, <span class="number">121</span>, <span class="number">50</span>, <span class="string">&#x27;2004-02-06 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">132</span>, <span class="string">&#x27;TJ&#x27;</span>, <span class="string">&#x27;Olson&#x27;</span>, <span class="string">&#x27;TJOLSON&#x27;</span>, <span class="string">&#x27;650.124.8234&#x27;</span>, <span class="string">&#x27;ST_CLERK&#x27;</span>, <span class="number">2100.00</span>, <span class="keyword">NULL</span>, <span class="number">121</span>, <span class="number">50</span>, <span class="string">&#x27;2004-02-06 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">133</span>, <span class="string">&#x27;Jason&#x27;</span>, <span class="string">&#x27;Mallin&#x27;</span>, <span class="string">&#x27;JMALLIN&#x27;</span>, <span class="string">&#x27;650.127.1934&#x27;</span>, <span class="string">&#x27;ST_CLERK&#x27;</span>, <span class="number">3300.00</span>, <span class="keyword">NULL</span>, <span class="number">122</span>, <span class="number">50</span>, <span class="string">&#x27;2004-02-06 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">134</span>, <span class="string">&#x27;Michael&#x27;</span>, <span class="string">&#x27;Rogers&#x27;</span>, <span class="string">&#x27;MROGERS&#x27;</span>, <span class="string">&#x27;650.127.1834&#x27;</span>, <span class="string">&#x27;ST_CLERK&#x27;</span>, <span class="number">2900.00</span>, <span class="keyword">NULL</span>, <span class="number">122</span>, <span class="number">50</span>, <span class="string">&#x27;2002-12-23 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">135</span>, <span class="string">&#x27;Ki&#x27;</span>, <span class="string">&#x27;Gee&#x27;</span>, <span class="string">&#x27;KGEE&#x27;</span>, <span class="string">&#x27;650.127.1734&#x27;</span>, <span class="string">&#x27;ST_CLERK&#x27;</span>, <span class="number">2400.00</span>, <span class="keyword">NULL</span>, <span class="number">122</span>, <span class="number">50</span>, <span class="string">&#x27;2002-12-23 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">136</span>, <span class="string">&#x27;Hazel&#x27;</span>, <span class="string">&#x27;Philtanker&#x27;</span>, <span class="string">&#x27;HPHILTAN&#x27;</span>, <span class="string">&#x27;650.127.1634&#x27;</span>, <span class="string">&#x27;ST_CLERK&#x27;</span>, <span class="number">2200.00</span>, <span class="keyword">NULL</span>, <span class="number">122</span>, <span class="number">50</span>, <span class="string">&#x27;2002-12-23 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">137</span>, <span class="string">&#x27;Renske&#x27;</span>, <span class="string">&#x27;Ladwig&#x27;</span>, <span class="string">&#x27;RLADWIG&#x27;</span>, <span class="string">&#x27;650.121.1234&#x27;</span>, <span class="string">&#x27;ST_CLERK&#x27;</span>, <span class="number">3600.00</span>, <span class="keyword">NULL</span>, <span class="number">123</span>, <span class="number">50</span>, <span class="string">&#x27;2002-12-23 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">138</span>, <span class="string">&#x27;Stephen&#x27;</span>, <span class="string">&#x27;Stiles&#x27;</span>, <span class="string">&#x27;SSTILES&#x27;</span>, <span class="string">&#x27;650.121.2034&#x27;</span>, <span class="string">&#x27;ST_CLERK&#x27;</span>, <span class="number">3200.00</span>, <span class="keyword">NULL</span>, <span class="number">123</span>, <span class="number">50</span>, <span class="string">&#x27;2002-12-23 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">139</span>, <span class="string">&#x27;John&#x27;</span>, <span class="string">&#x27;Seo&#x27;</span>, <span class="string">&#x27;JSEO&#x27;</span>, <span class="string">&#x27;650.121.2019&#x27;</span>, <span class="string">&#x27;ST_CLERK&#x27;</span>, <span class="number">2700.00</span>, <span class="keyword">NULL</span>, <span class="number">123</span>, <span class="number">50</span>, <span class="string">&#x27;2002-12-23 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">140</span>, <span class="string">&#x27;Joshua&#x27;</span>, <span class="string">&#x27;Patel&#x27;</span>, <span class="string">&#x27;JPATEL&#x27;</span>, <span class="string">&#x27;650.121.1834&#x27;</span>, <span class="string">&#x27;ST_CLERK&#x27;</span>, <span class="number">2500.00</span>, <span class="keyword">NULL</span>, <span class="number">123</span>, <span class="number">50</span>, <span class="string">&#x27;2002-12-23 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">141</span>, <span class="string">&#x27;Trenna&#x27;</span>, <span class="string">&#x27;Rajs&#x27;</span>, <span class="string">&#x27;TRAJS&#x27;</span>, <span class="string">&#x27;650.121.8009&#x27;</span>, <span class="string">&#x27;ST_CLERK&#x27;</span>, <span class="number">3500.00</span>, <span class="keyword">NULL</span>, <span class="number">124</span>, <span class="number">50</span>, <span class="string">&#x27;2002-12-23 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">142</span>, <span class="string">&#x27;Curtis&#x27;</span>, <span class="string">&#x27;Davies&#x27;</span>, <span class="string">&#x27;CDAVIES&#x27;</span>, <span class="string">&#x27;650.121.2994&#x27;</span>, <span class="string">&#x27;ST_CLERK&#x27;</span>, <span class="number">3100.00</span>, <span class="keyword">NULL</span>, <span class="number">124</span>, <span class="number">50</span>, <span class="string">&#x27;2002-12-23 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">143</span>, <span class="string">&#x27;Randall&#x27;</span>, <span class="string">&#x27;Matos&#x27;</span>, <span class="string">&#x27;RMATOS&#x27;</span>, <span class="string">&#x27;650.121.2874&#x27;</span>, <span class="string">&#x27;ST_CLERK&#x27;</span>, <span class="number">2600.00</span>, <span class="keyword">NULL</span>, <span class="number">124</span>, <span class="number">50</span>, <span class="string">&#x27;2002-12-23 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">144</span>, <span class="string">&#x27;Peter&#x27;</span>, <span class="string">&#x27;Vargas&#x27;</span>, <span class="string">&#x27;PVARGAS&#x27;</span>, <span class="string">&#x27;650.121.2004&#x27;</span>, <span class="string">&#x27;ST_CLERK&#x27;</span>, <span class="number">2500.00</span>, <span class="keyword">NULL</span>, <span class="number">124</span>, <span class="number">50</span>, <span class="string">&#x27;2002-12-23 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">145</span>, <span class="string">&#x27;John&#x27;</span>, <span class="string">&#x27;Russell&#x27;</span>, <span class="string">&#x27;JRUSSEL&#x27;</span>, <span class="string">&#x27;011.44.1344.429268&#x27;</span>, <span class="string">&#x27;SA_MAN&#x27;</span>, <span class="number">14000.00</span>, <span class="number">0.40</span>, <span class="number">100</span>, <span class="number">80</span>, <span class="string">&#x27;2002-12-23 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">146</span>, <span class="string">&#x27;Karen&#x27;</span>, <span class="string">&#x27;Partners&#x27;</span>, <span class="string">&#x27;KPARTNER&#x27;</span>, <span class="string">&#x27;011.44.1344.467268&#x27;</span>, <span class="string">&#x27;SA_MAN&#x27;</span>, <span class="number">13500.00</span>, <span class="number">0.30</span>, <span class="number">100</span>, <span class="number">80</span>, <span class="string">&#x27;2002-12-23 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">147</span>, <span class="string">&#x27;Alberto&#x27;</span>, <span class="string">&#x27;Errazuriz&#x27;</span>, <span class="string">&#x27;AERRAZUR&#x27;</span>, <span class="string">&#x27;011.44.1344.429278&#x27;</span>, <span class="string">&#x27;SA_MAN&#x27;</span>, <span class="number">12000.00</span>, <span class="number">0.30</span>, <span class="number">100</span>, <span class="number">80</span>, <span class="string">&#x27;2002-12-23 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">148</span>, <span class="string">&#x27;Gerald&#x27;</span>, <span class="string">&#x27;Cambrault&#x27;</span>, <span class="string">&#x27;GCAMBRAU&#x27;</span>, <span class="string">&#x27;011.44.1344.619268&#x27;</span>, <span class="string">&#x27;SA_MAN&#x27;</span>, <span class="number">11000.00</span>, <span class="number">0.30</span>, <span class="number">100</span>, <span class="number">80</span>, <span class="string">&#x27;2002-12-23 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">149</span>, <span class="string">&#x27;Eleni&#x27;</span>, <span class="string">&#x27;Zlotkey&#x27;</span>, <span class="string">&#x27;EZLOTKEY&#x27;</span>, <span class="string">&#x27;011.44.1344.429018&#x27;</span>, <span class="string">&#x27;SA_MAN&#x27;</span>, <span class="number">10500.00</span>, <span class="number">0.20</span>, <span class="number">100</span>, <span class="number">80</span>, <span class="string">&#x27;2002-12-23 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">150</span>, <span class="string">&#x27;Peter&#x27;</span>, <span class="string">&#x27;Tucker&#x27;</span>, <span class="string">&#x27;PTUCKER&#x27;</span>, <span class="string">&#x27;011.44.1344.129268&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">10000.00</span>, <span class="number">0.30</span>, <span class="number">145</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">151</span>, <span class="string">&#x27;David&#x27;</span>, <span class="string">&#x27;Bernstein&#x27;</span>, <span class="string">&#x27;DBERNSTE&#x27;</span>, <span class="string">&#x27;011.44.1344.345268&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">9500.00</span>, <span class="number">0.25</span>, <span class="number">145</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">152</span>, <span class="string">&#x27;Peter&#x27;</span>, <span class="string">&#x27;Hall&#x27;</span>, <span class="string">&#x27;PHALL&#x27;</span>, <span class="string">&#x27;011.44.1344.478968&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">9000.00</span>, <span class="number">0.25</span>, <span class="number">145</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">153</span>, <span class="string">&#x27;Christopher&#x27;</span>, <span class="string">&#x27;Olsen&#x27;</span>, <span class="string">&#x27;COLSEN&#x27;</span>, <span class="string">&#x27;011.44.1344.498718&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">8000.00</span>, <span class="number">0.20</span>, <span class="number">145</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">154</span>, <span class="string">&#x27;Nanette&#x27;</span>, <span class="string">&#x27;Cambrault&#x27;</span>, <span class="string">&#x27;NCAMBRAU&#x27;</span>, <span class="string">&#x27;011.44.1344.987668&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">7500.00</span>, <span class="number">0.20</span>, <span class="number">145</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">155</span>, <span class="string">&#x27;Oliver&#x27;</span>, <span class="string">&#x27;Tuvault&#x27;</span>, <span class="string">&#x27;OTUVAULT&#x27;</span>, <span class="string">&#x27;011.44.1344.486508&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">7000.00</span>, <span class="number">0.15</span>, <span class="number">145</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">156</span>, <span class="string">&#x27;Janette&#x27;</span>, <span class="string">&#x27;K_ing&#x27;</span>, <span class="string">&#x27;JKING&#x27;</span>, <span class="string">&#x27;011.44.1345.429268&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">10000.00</span>, <span class="number">0.35</span>, <span class="number">146</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">157</span>, <span class="string">&#x27;Patrick&#x27;</span>, <span class="string">&#x27;Sully&#x27;</span>, <span class="string">&#x27;PSULLY&#x27;</span>, <span class="string">&#x27;011.44.1345.929268&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">9500.00</span>, <span class="number">0.35</span>, <span class="number">146</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">158</span>, <span class="string">&#x27;Allan&#x27;</span>, <span class="string">&#x27;McEwen&#x27;</span>, <span class="string">&#x27;AMCEWEN&#x27;</span>, <span class="string">&#x27;011.44.1345.829268&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">9000.00</span>, <span class="number">0.35</span>, <span class="number">146</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">159</span>, <span class="string">&#x27;Lindsey&#x27;</span>, <span class="string">&#x27;Smith&#x27;</span>, <span class="string">&#x27;LSMITH&#x27;</span>, <span class="string">&#x27;011.44.1345.729268&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">8000.00</span>, <span class="number">0.30</span>, <span class="number">146</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">160</span>, <span class="string">&#x27;Louise&#x27;</span>, <span class="string">&#x27;Doran&#x27;</span>, <span class="string">&#x27;LDORAN&#x27;</span>, <span class="string">&#x27;011.44.1345.629268&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">7500.00</span>, <span class="number">0.30</span>, <span class="number">146</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">161</span>, <span class="string">&#x27;Sarath&#x27;</span>, <span class="string">&#x27;Sewall&#x27;</span>, <span class="string">&#x27;SSEWALL&#x27;</span>, <span class="string">&#x27;011.44.1345.529268&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">7000.00</span>, <span class="number">0.25</span>, <span class="number">146</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">162</span>, <span class="string">&#x27;Clara&#x27;</span>, <span class="string">&#x27;Vishney&#x27;</span>, <span class="string">&#x27;CVISHNEY&#x27;</span>, <span class="string">&#x27;011.44.1346.129268&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">10500.00</span>, <span class="number">0.25</span>, <span class="number">147</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">163</span>, <span class="string">&#x27;Danielle&#x27;</span>, <span class="string">&#x27;Greene&#x27;</span>, <span class="string">&#x27;DGREENE&#x27;</span>, <span class="string">&#x27;011.44.1346.229268&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">9500.00</span>, <span class="number">0.15</span>, <span class="number">147</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">164</span>, <span class="string">&#x27;Mattea&#x27;</span>, <span class="string">&#x27;Marvins&#x27;</span>, <span class="string">&#x27;MMARVINS&#x27;</span>, <span class="string">&#x27;011.44.1346.329268&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">7200.00</span>, <span class="number">0.10</span>, <span class="number">147</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">165</span>, <span class="string">&#x27;David&#x27;</span>, <span class="string">&#x27;Lee&#x27;</span>, <span class="string">&#x27;DLEE&#x27;</span>, <span class="string">&#x27;011.44.1346.529268&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">6800.00</span>, <span class="number">0.10</span>, <span class="number">147</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">166</span>, <span class="string">&#x27;Sundar&#x27;</span>, <span class="string">&#x27;Ande&#x27;</span>, <span class="string">&#x27;SANDE&#x27;</span>, <span class="string">&#x27;011.44.1346.629268&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">6400.00</span>, <span class="number">0.10</span>, <span class="number">147</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">167</span>, <span class="string">&#x27;Amit&#x27;</span>, <span class="string">&#x27;Banda&#x27;</span>, <span class="string">&#x27;ABANDA&#x27;</span>, <span class="string">&#x27;011.44.1346.729268&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">6200.00</span>, <span class="number">0.10</span>, <span class="number">147</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">168</span>, <span class="string">&#x27;Lisa&#x27;</span>, <span class="string">&#x27;Ozer&#x27;</span>, <span class="string">&#x27;LOZER&#x27;</span>, <span class="string">&#x27;011.44.1343.929268&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">11500.00</span>, <span class="number">0.25</span>, <span class="number">148</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">169</span>, <span class="string">&#x27;Harrison&#x27;</span>, <span class="string">&#x27;Bloom&#x27;</span>, <span class="string">&#x27;HBLOOM&#x27;</span>, <span class="string">&#x27;011.44.1343.829268&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">10000.00</span>, <span class="number">0.20</span>, <span class="number">148</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">170</span>, <span class="string">&#x27;Tayler&#x27;</span>, <span class="string">&#x27;Fox&#x27;</span>, <span class="string">&#x27;TFOX&#x27;</span>, <span class="string">&#x27;011.44.1343.729268&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">9600.00</span>, <span class="number">0.20</span>, <span class="number">148</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">171</span>, <span class="string">&#x27;William&#x27;</span>, <span class="string">&#x27;Smith&#x27;</span>, <span class="string">&#x27;WSMITH&#x27;</span>, <span class="string">&#x27;011.44.1343.629268&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">7400.00</span>, <span class="number">0.15</span>, <span class="number">148</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">172</span>, <span class="string">&#x27;Elizabeth&#x27;</span>, <span class="string">&#x27;Bates&#x27;</span>, <span class="string">&#x27;EBATES&#x27;</span>, <span class="string">&#x27;011.44.1343.529268&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">7300.00</span>, <span class="number">0.15</span>, <span class="number">148</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">173</span>, <span class="string">&#x27;Sundita&#x27;</span>, <span class="string">&#x27;Kumar&#x27;</span>, <span class="string">&#x27;SKUMAR&#x27;</span>, <span class="string">&#x27;011.44.1343.329268&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">6100.00</span>, <span class="number">0.10</span>, <span class="number">148</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">174</span>, <span class="string">&#x27;Ellen&#x27;</span>, <span class="string">&#x27;Abel&#x27;</span>, <span class="string">&#x27;EABEL&#x27;</span>, <span class="string">&#x27;011.44.1644.429267&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">11000.00</span>, <span class="number">0.30</span>, <span class="number">149</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">175</span>, <span class="string">&#x27;Alyssa&#x27;</span>, <span class="string">&#x27;Hutton&#x27;</span>, <span class="string">&#x27;AHUTTON&#x27;</span>, <span class="string">&#x27;011.44.1644.429266&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">8800.00</span>, <span class="number">0.25</span>, <span class="number">149</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">176</span>, <span class="string">&#x27;Jonathon&#x27;</span>, <span class="string">&#x27;Taylor&#x27;</span>, <span class="string">&#x27;JTAYLOR&#x27;</span>, <span class="string">&#x27;011.44.1644.429265&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">8600.00</span>, <span class="number">0.20</span>, <span class="number">149</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">177</span>, <span class="string">&#x27;Jack&#x27;</span>, <span class="string">&#x27;Livingston&#x27;</span>, <span class="string">&#x27;JLIVINGS&#x27;</span>, <span class="string">&#x27;011.44.1644.429264&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">8400.00</span>, <span class="number">0.20</span>, <span class="number">149</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">178</span>, <span class="string">&#x27;Kimberely&#x27;</span>, <span class="string">&#x27;Grant&#x27;</span>, <span class="string">&#x27;KGRANT&#x27;</span>, <span class="string">&#x27;011.44.1644.429263&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">7000.00</span>, <span class="number">0.15</span>, <span class="number">149</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">179</span>, <span class="string">&#x27;Charles&#x27;</span>, <span class="string">&#x27;Johnson&#x27;</span>, <span class="string">&#x27;CJOHNSON&#x27;</span>, <span class="string">&#x27;011.44.1644.429262&#x27;</span>, <span class="string">&#x27;SA_REP&#x27;</span>, <span class="number">6200.00</span>, <span class="number">0.10</span>, <span class="number">149</span>, <span class="number">80</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">180</span>, <span class="string">&#x27;Winston&#x27;</span>, <span class="string">&#x27;Taylor&#x27;</span>, <span class="string">&#x27;WTAYLOR&#x27;</span>, <span class="string">&#x27;650.507.9876&#x27;</span>, <span class="string">&#x27;SH_CLERK&#x27;</span>, <span class="number">3200.00</span>, <span class="keyword">NULL</span>, <span class="number">120</span>, <span class="number">50</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">181</span>, <span class="string">&#x27;Jean&#x27;</span>, <span class="string">&#x27;Fleaur&#x27;</span>, <span class="string">&#x27;JFLEAUR&#x27;</span>, <span class="string">&#x27;650.507.9877&#x27;</span>, <span class="string">&#x27;SH_CLERK&#x27;</span>, <span class="number">3100.00</span>, <span class="keyword">NULL</span>, <span class="number">120</span>, <span class="number">50</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">182</span>, <span class="string">&#x27;Martha&#x27;</span>, <span class="string">&#x27;Sullivan&#x27;</span>, <span class="string">&#x27;MSULLIVA&#x27;</span>, <span class="string">&#x27;650.507.9878&#x27;</span>, <span class="string">&#x27;SH_CLERK&#x27;</span>, <span class="number">2500.00</span>, <span class="keyword">NULL</span>, <span class="number">120</span>, <span class="number">50</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">183</span>, <span class="string">&#x27;Girard&#x27;</span>, <span class="string">&#x27;Geoni&#x27;</span>, <span class="string">&#x27;GGEONI&#x27;</span>, <span class="string">&#x27;650.507.9879&#x27;</span>, <span class="string">&#x27;SH_CLERK&#x27;</span>, <span class="number">2800.00</span>, <span class="keyword">NULL</span>, <span class="number">120</span>, <span class="number">50</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">184</span>, <span class="string">&#x27;Nandita&#x27;</span>, <span class="string">&#x27;Sarchand&#x27;</span>, <span class="string">&#x27;NSARCHAN&#x27;</span>, <span class="string">&#x27;650.509.1876&#x27;</span>, <span class="string">&#x27;SH_CLERK&#x27;</span>, <span class="number">4200.00</span>, <span class="keyword">NULL</span>, <span class="number">121</span>, <span class="number">50</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">185</span>, <span class="string">&#x27;Alexis&#x27;</span>, <span class="string">&#x27;Bull&#x27;</span>, <span class="string">&#x27;ABULL&#x27;</span>, <span class="string">&#x27;650.509.2876&#x27;</span>, <span class="string">&#x27;SH_CLERK&#x27;</span>, <span class="number">4100.00</span>, <span class="keyword">NULL</span>, <span class="number">121</span>, <span class="number">50</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">186</span>, <span class="string">&#x27;Julia&#x27;</span>, <span class="string">&#x27;Dellinger&#x27;</span>, <span class="string">&#x27;JDELLING&#x27;</span>, <span class="string">&#x27;650.509.3876&#x27;</span>, <span class="string">&#x27;SH_CLERK&#x27;</span>, <span class="number">3400.00</span>, <span class="keyword">NULL</span>, <span class="number">121</span>, <span class="number">50</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">187</span>, <span class="string">&#x27;Anthony&#x27;</span>, <span class="string">&#x27;Cabrio&#x27;</span>, <span class="string">&#x27;ACABRIO&#x27;</span>, <span class="string">&#x27;650.509.4876&#x27;</span>, <span class="string">&#x27;SH_CLERK&#x27;</span>, <span class="number">3000.00</span>, <span class="keyword">NULL</span>, <span class="number">121</span>, <span class="number">50</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">188</span>, <span class="string">&#x27;Kelly&#x27;</span>, <span class="string">&#x27;Chung&#x27;</span>, <span class="string">&#x27;KCHUNG&#x27;</span>, <span class="string">&#x27;650.505.1876&#x27;</span>, <span class="string">&#x27;SH_CLERK&#x27;</span>, <span class="number">3800.00</span>, <span class="keyword">NULL</span>, <span class="number">122</span>, <span class="number">50</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">189</span>, <span class="string">&#x27;Jennifer&#x27;</span>, <span class="string">&#x27;Dilly&#x27;</span>, <span class="string">&#x27;JDILLY&#x27;</span>, <span class="string">&#x27;650.505.2876&#x27;</span>, <span class="string">&#x27;SH_CLERK&#x27;</span>, <span class="number">3600.00</span>, <span class="keyword">NULL</span>, <span class="number">122</span>, <span class="number">50</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">190</span>, <span class="string">&#x27;Timothy&#x27;</span>, <span class="string">&#x27;Gates&#x27;</span>, <span class="string">&#x27;TGATES&#x27;</span>, <span class="string">&#x27;650.505.3876&#x27;</span>, <span class="string">&#x27;SH_CLERK&#x27;</span>, <span class="number">2900.00</span>, <span class="keyword">NULL</span>, <span class="number">122</span>, <span class="number">50</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">191</span>, <span class="string">&#x27;Randall&#x27;</span>, <span class="string">&#x27;Perkins&#x27;</span>, <span class="string">&#x27;RPERKINS&#x27;</span>, <span class="string">&#x27;650.505.4876&#x27;</span>, <span class="string">&#x27;SH_CLERK&#x27;</span>, <span class="number">2500.00</span>, <span class="keyword">NULL</span>, <span class="number">122</span>, <span class="number">50</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">192</span>, <span class="string">&#x27;Sarah&#x27;</span>, <span class="string">&#x27;Bell&#x27;</span>, <span class="string">&#x27;SBELL&#x27;</span>, <span class="string">&#x27;650.501.1876&#x27;</span>, <span class="string">&#x27;SH_CLERK&#x27;</span>, <span class="number">4000.00</span>, <span class="keyword">NULL</span>, <span class="number">123</span>, <span class="number">50</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">193</span>, <span class="string">&#x27;Britney&#x27;</span>, <span class="string">&#x27;Everett&#x27;</span>, <span class="string">&#x27;BEVERETT&#x27;</span>, <span class="string">&#x27;650.501.2876&#x27;</span>, <span class="string">&#x27;SH_CLERK&#x27;</span>, <span class="number">3900.00</span>, <span class="keyword">NULL</span>, <span class="number">123</span>, <span class="number">50</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">194</span>, <span class="string">&#x27;Samuel&#x27;</span>, <span class="string">&#x27;McCain&#x27;</span>, <span class="string">&#x27;SMCCAIN&#x27;</span>, <span class="string">&#x27;650.501.3876&#x27;</span>, <span class="string">&#x27;SH_CLERK&#x27;</span>, <span class="number">3200.00</span>, <span class="keyword">NULL</span>, <span class="number">123</span>, <span class="number">50</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">195</span>, <span class="string">&#x27;Vance&#x27;</span>, <span class="string">&#x27;Jones&#x27;</span>, <span class="string">&#x27;VJONES&#x27;</span>, <span class="string">&#x27;650.501.4876&#x27;</span>, <span class="string">&#x27;SH_CLERK&#x27;</span>, <span class="number">2800.00</span>, <span class="keyword">NULL</span>, <span class="number">123</span>, <span class="number">50</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">196</span>, <span class="string">&#x27;Alana&#x27;</span>, <span class="string">&#x27;Walsh&#x27;</span>, <span class="string">&#x27;AWALSH&#x27;</span>, <span class="string">&#x27;650.507.9811&#x27;</span>, <span class="string">&#x27;SH_CLERK&#x27;</span>, <span class="number">3100.00</span>, <span class="keyword">NULL</span>, <span class="number">124</span>, <span class="number">50</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">197</span>, <span class="string">&#x27;Kevin&#x27;</span>, <span class="string">&#x27;Feeney&#x27;</span>, <span class="string">&#x27;KFEENEY&#x27;</span>, <span class="string">&#x27;650.507.9822&#x27;</span>, <span class="string">&#x27;SH_CLERK&#x27;</span>, <span class="number">3000.00</span>, <span class="keyword">NULL</span>, <span class="number">124</span>, <span class="number">50</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">198</span>, <span class="string">&#x27;Donald&#x27;</span>, <span class="string">&#x27;OConnell&#x27;</span>, <span class="string">&#x27;DOCONNEL&#x27;</span>, <span class="string">&#x27;650.507.9833&#x27;</span>, <span class="string">&#x27;SH_CLERK&#x27;</span>, <span class="number">2600.00</span>, <span class="keyword">NULL</span>, <span class="number">124</span>, <span class="number">50</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">199</span>, <span class="string">&#x27;Douglas&#x27;</span>, <span class="string">&#x27;Grant&#x27;</span>, <span class="string">&#x27;DGRANT&#x27;</span>, <span class="string">&#x27;650.507.9844&#x27;</span>, <span class="string">&#x27;SH_CLERK&#x27;</span>, <span class="number">2600.00</span>, <span class="keyword">NULL</span>, <span class="number">124</span>, <span class="number">50</span>, <span class="string">&#x27;2014-03-05 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">200</span>, <span class="string">&#x27;Jennifer&#x27;</span>, <span class="string">&#x27;Whalen&#x27;</span>, <span class="string">&#x27;JWHALEN&#x27;</span>, <span class="string">&#x27;515.123.4444&#x27;</span>, <span class="string">&#x27;AD_ASST&#x27;</span>, <span class="number">4400.00</span>, <span class="keyword">NULL</span>, <span class="number">101</span>, <span class="number">10</span>, <span class="string">&#x27;2016-03-03 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">201</span>, <span class="string">&#x27;Michael&#x27;</span>, <span class="string">&#x27;Hartstein&#x27;</span>, <span class="string">&#x27;MHARTSTE&#x27;</span>, <span class="string">&#x27;515.123.5555&#x27;</span>, <span class="string">&#x27;MK_MAN&#x27;</span>, <span class="number">13000.00</span>, <span class="keyword">NULL</span>, <span class="number">100</span>, <span class="number">20</span>, <span class="string">&#x27;2016-03-03 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">202</span>, <span class="string">&#x27;Pat&#x27;</span>, <span class="string">&#x27;Fay&#x27;</span>, <span class="string">&#x27;PFAY&#x27;</span>, <span class="string">&#x27;603.123.6666&#x27;</span>, <span class="string">&#x27;MK_REP&#x27;</span>, <span class="number">6000.00</span>, <span class="keyword">NULL</span>, <span class="number">201</span>, <span class="number">20</span>, <span class="string">&#x27;2016-03-03 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">203</span>, <span class="string">&#x27;Susan&#x27;</span>, <span class="string">&#x27;Mavris&#x27;</span>, <span class="string">&#x27;SMAVRIS&#x27;</span>, <span class="string">&#x27;515.123.7777&#x27;</span>, <span class="string">&#x27;HR_REP&#x27;</span>, <span class="number">6500.00</span>, <span class="keyword">NULL</span>, <span class="number">101</span>, <span class="number">40</span>, <span class="string">&#x27;2016-03-03 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">204</span>, <span class="string">&#x27;Hermann&#x27;</span>, <span class="string">&#x27;Baer&#x27;</span>, <span class="string">&#x27;HBAER&#x27;</span>, <span class="string">&#x27;515.123.8888&#x27;</span>, <span class="string">&#x27;PR_REP&#x27;</span>, <span class="number">10000.00</span>, <span class="keyword">NULL</span>, <span class="number">101</span>, <span class="number">70</span>, <span class="string">&#x27;2016-03-03 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">205</span>, <span class="string">&#x27;Shelley&#x27;</span>, <span class="string">&#x27;Higgins&#x27;</span>, <span class="string">&#x27;SHIGGINS&#x27;</span>, <span class="string">&#x27;515.123.8080&#x27;</span>, <span class="string">&#x27;AC_MGR&#x27;</span>, <span class="number">12000.00</span>, <span class="keyword">NULL</span>, <span class="number">101</span>, <span class="number">110</span>, <span class="string">&#x27;2016-03-03 00:00:00&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `employees` <span class="keyword">VALUES</span> (<span class="number">206</span>, <span class="string">&#x27;William&#x27;</span>, <span class="string">&#x27;Gietz&#x27;</span>, <span class="string">&#x27;WGIETZ&#x27;</span>, <span class="string">&#x27;515.123.8181&#x27;</span>, <span class="string">&#x27;AC_ACCOUNT&#x27;</span>, <span class="number">8300.00</span>, <span class="keyword">NULL</span>, <span class="number">205</span>, <span class="number">110</span>, <span class="string">&#x27;2016-03-03 00:00:00&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for job_grades</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `job_grades`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `job_grades`  (</span><br><span class="line">  `grade_level` <span class="type">varchar</span>(<span class="number">3</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `lowest_sal` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `highest_sal` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span></span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_general_ci ROW_FORMAT <span class="operator">=</span> Compact;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of job_grades</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `job_grades` <span class="keyword">VALUES</span> (<span class="string">&#x27;A&#x27;</span>, <span class="number">1000</span>, <span class="number">2999</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `job_grades` <span class="keyword">VALUES</span> (<span class="string">&#x27;B&#x27;</span>, <span class="number">3000</span>, <span class="number">5999</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `job_grades` <span class="keyword">VALUES</span> (<span class="string">&#x27;C&#x27;</span>, <span class="number">6000</span>, <span class="number">9999</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `job_grades` <span class="keyword">VALUES</span> (<span class="string">&#x27;D&#x27;</span>, <span class="number">10000</span>, <span class="number">14999</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `job_grades` <span class="keyword">VALUES</span> (<span class="string">&#x27;E&#x27;</span>, <span class="number">15000</span>, <span class="number">24999</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `job_grades` <span class="keyword">VALUES</span> (<span class="string">&#x27;F&#x27;</span>, <span class="number">25000</span>, <span class="number">40000</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for jobs</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `jobs`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `jobs`  (</span><br><span class="line">  `job_id` <span class="type">varchar</span>(<span class="number">10</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> gb2312 <span class="keyword">COLLATE</span> gb2312_chinese_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `job_title` <span class="type">varchar</span>(<span class="number">35</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> gb2312 <span class="keyword">COLLATE</span> gb2312_chinese_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `min_salary` <span class="type">int</span>(<span class="number">6</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `max_salary` <span class="type">int</span>(<span class="number">6</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`job_id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> gb2312 <span class="keyword">COLLATE</span> <span class="operator">=</span> gb2312_chinese_ci ROW_FORMAT <span class="operator">=</span> Compact;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of jobs</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `jobs` <span class="keyword">VALUES</span> (<span class="string">&#x27;AC_ACCOUNT&#x27;</span>, <span class="string">&#x27;Public Accountant&#x27;</span>, <span class="number">4200</span>, <span class="number">9000</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `jobs` <span class="keyword">VALUES</span> (<span class="string">&#x27;AC_MGR&#x27;</span>, <span class="string">&#x27;Accounting Manager&#x27;</span>, <span class="number">8200</span>, <span class="number">16000</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `jobs` <span class="keyword">VALUES</span> (<span class="string">&#x27;AD_ASST&#x27;</span>, <span class="string">&#x27;Administration Assistant&#x27;</span>, <span class="number">3000</span>, <span class="number">6000</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `jobs` <span class="keyword">VALUES</span> (<span class="string">&#x27;AD_PRES&#x27;</span>, <span class="string">&#x27;President&#x27;</span>, <span class="number">20000</span>, <span class="number">40000</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `jobs` <span class="keyword">VALUES</span> (<span class="string">&#x27;AD_VP&#x27;</span>, <span class="string">&#x27;Administration Vice President&#x27;</span>, <span class="number">15000</span>, <span class="number">30000</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `jobs` <span class="keyword">VALUES</span> (<span class="string">&#x27;FI_ACCOUNT&#x27;</span>, <span class="string">&#x27;Accountant&#x27;</span>, <span class="number">4200</span>, <span class="number">9000</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `jobs` <span class="keyword">VALUES</span> (<span class="string">&#x27;FI_MGR&#x27;</span>, <span class="string">&#x27;Finance Manager&#x27;</span>, <span class="number">8200</span>, <span class="number">16000</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `jobs` <span class="keyword">VALUES</span> (<span class="string">&#x27;HR_REP&#x27;</span>, <span class="string">&#x27;Human Resources Representative&#x27;</span>, <span class="number">4000</span>, <span class="number">9000</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `jobs` <span class="keyword">VALUES</span> (<span class="string">&#x27;IT_PROG&#x27;</span>, <span class="string">&#x27;Programmer&#x27;</span>, <span class="number">4000</span>, <span class="number">10000</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `jobs` <span class="keyword">VALUES</span> (<span class="string">&#x27;MK_MAN&#x27;</span>, <span class="string">&#x27;Marketing Manager&#x27;</span>, <span class="number">9000</span>, <span class="number">15000</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `jobs` <span class="keyword">VALUES</span> (<span class="string">&#x27;MK_REP&#x27;</span>, <span class="string">&#x27;Marketing Representative&#x27;</span>, <span class="number">4000</span>, <span class="number">9000</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `jobs` <span class="keyword">VALUES</span> (<span class="string">&#x27;PR_REP&#x27;</span>, <span class="string">&#x27;Public Relations Representative&#x27;</span>, <span class="number">4500</span>, <span class="number">10500</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `jobs` <span class="keyword">VALUES</span> (<span class="string">&#x27;PU_CLERK&#x27;</span>, <span class="string">&#x27;Purchasing Clerk&#x27;</span>, <span class="number">2500</span>, <span class="number">5500</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `jobs` <span class="keyword">VALUES</span> (<span class="string">&#x27;PU_MAN&#x27;</span>, <span class="string">&#x27;Purchasing Manager&#x27;</span>, <span class="number">8000</span>, <span class="number">15000</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `jobs` <span class="keyword">VALUES</span> (<span class="string">&#x27;SA_MAN&#x27;</span>, <span class="string">&#x27;Sales Manager&#x27;</span>, <span class="number">10000</span>, <span class="number">20000</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `jobs` <span class="keyword">VALUES</span> (<span class="string">&#x27;SA_REP&#x27;</span>, <span class="string">&#x27;Sales Representative&#x27;</span>, <span class="number">6000</span>, <span class="number">12000</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `jobs` <span class="keyword">VALUES</span> (<span class="string">&#x27;SH_CLERK&#x27;</span>, <span class="string">&#x27;Shipping Clerk&#x27;</span>, <span class="number">2500</span>, <span class="number">5500</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `jobs` <span class="keyword">VALUES</span> (<span class="string">&#x27;ST_CLERK&#x27;</span>, <span class="string">&#x27;Stock Clerk&#x27;</span>, <span class="number">2000</span>, <span class="number">5000</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `jobs` <span class="keyword">VALUES</span> (<span class="string">&#x27;ST_MAN&#x27;</span>, <span class="string">&#x27;Stock Manager&#x27;</span>, <span class="number">5500</span>, <span class="number">8500</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for locations</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `locations`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `locations`  (</span><br><span class="line">  `location_id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `street_address` <span class="type">varchar</span>(<span class="number">40</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> gb2312 <span class="keyword">COLLATE</span> gb2312_chinese_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `postal_code` <span class="type">varchar</span>(<span class="number">12</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> gb2312 <span class="keyword">COLLATE</span> gb2312_chinese_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `city` <span class="type">varchar</span>(<span class="number">30</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> gb2312 <span class="keyword">COLLATE</span> gb2312_chinese_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `state_province` <span class="type">varchar</span>(<span class="number">25</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> gb2312 <span class="keyword">COLLATE</span> gb2312_chinese_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `country_id` <span class="type">varchar</span>(<span class="number">2</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> gb2312 <span class="keyword">COLLATE</span> gb2312_chinese_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`location_id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">3201</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> gb2312 <span class="keyword">COLLATE</span> <span class="operator">=</span> gb2312_chinese_ci ROW_FORMAT <span class="operator">=</span> Compact;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of locations</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `locations` <span class="keyword">VALUES</span> (<span class="number">1000</span>, <span class="string">&#x27;1297 Via Cola di Rie&#x27;</span>, <span class="string">&#x27;00989&#x27;</span>, <span class="string">&#x27;Roma&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;IT&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `locations` <span class="keyword">VALUES</span> (<span class="number">1100</span>, <span class="string">&#x27;93091 Calle della Testa&#x27;</span>, <span class="string">&#x27;10934&#x27;</span>, <span class="string">&#x27;Venice&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;IT&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `locations` <span class="keyword">VALUES</span> (<span class="number">1200</span>, <span class="string">&#x27;2017 Shinjuku-ku&#x27;</span>, <span class="string">&#x27;1689&#x27;</span>, <span class="string">&#x27;Tokyo&#x27;</span>, <span class="string">&#x27;Tokyo Prefecture&#x27;</span>, <span class="string">&#x27;JP&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `locations` <span class="keyword">VALUES</span> (<span class="number">1300</span>, <span class="string">&#x27;9450 Kamiya-cho&#x27;</span>, <span class="string">&#x27;6823&#x27;</span>, <span class="string">&#x27;Hiroshima&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;JP&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `locations` <span class="keyword">VALUES</span> (<span class="number">1400</span>, <span class="string">&#x27;2014 Jabberwocky Rd&#x27;</span>, <span class="string">&#x27;26192&#x27;</span>, <span class="string">&#x27;Southlake&#x27;</span>, <span class="string">&#x27;Texas&#x27;</span>, <span class="string">&#x27;US&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `locations` <span class="keyword">VALUES</span> (<span class="number">1500</span>, <span class="string">&#x27;2011 Interiors Blvd&#x27;</span>, <span class="string">&#x27;99236&#x27;</span>, <span class="string">&#x27;South San Francisco&#x27;</span>, <span class="string">&#x27;California&#x27;</span>, <span class="string">&#x27;US&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `locations` <span class="keyword">VALUES</span> (<span class="number">1600</span>, <span class="string">&#x27;2007 Zagora St&#x27;</span>, <span class="string">&#x27;50090&#x27;</span>, <span class="string">&#x27;South Brunswick&#x27;</span>, <span class="string">&#x27;New Jersey&#x27;</span>, <span class="string">&#x27;US&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `locations` <span class="keyword">VALUES</span> (<span class="number">1700</span>, <span class="string">&#x27;2004 Charade Rd&#x27;</span>, <span class="string">&#x27;98199&#x27;</span>, <span class="string">&#x27;Seattle&#x27;</span>, <span class="string">&#x27;Washington&#x27;</span>, <span class="string">&#x27;US&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `locations` <span class="keyword">VALUES</span> (<span class="number">1800</span>, <span class="string">&#x27;147 Spadina Ave&#x27;</span>, <span class="string">&#x27;M5V 2L7&#x27;</span>, <span class="string">&#x27;Toronto&#x27;</span>, <span class="string">&#x27;Ontario&#x27;</span>, <span class="string">&#x27;CA&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `locations` <span class="keyword">VALUES</span> (<span class="number">1900</span>, <span class="string">&#x27;6092 Boxwood St&#x27;</span>, <span class="string">&#x27;YSW 9T2&#x27;</span>, <span class="string">&#x27;Whitehorse&#x27;</span>, <span class="string">&#x27;Yukon&#x27;</span>, <span class="string">&#x27;CA&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `locations` <span class="keyword">VALUES</span> (<span class="number">2000</span>, <span class="string">&#x27;40-5-12 Laogianggen&#x27;</span>, <span class="string">&#x27;190518&#x27;</span>, <span class="string">&#x27;Beijing&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;CN&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `locations` <span class="keyword">VALUES</span> (<span class="number">2100</span>, <span class="string">&#x27;1298 Vileparle (E)&#x27;</span>, <span class="string">&#x27;490231&#x27;</span>, <span class="string">&#x27;Bombay&#x27;</span>, <span class="string">&#x27;Maharashtra&#x27;</span>, <span class="string">&#x27;IN&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `locations` <span class="keyword">VALUES</span> (<span class="number">2200</span>, <span class="string">&#x27;12-98 Victoria Street&#x27;</span>, <span class="string">&#x27;2901&#x27;</span>, <span class="string">&#x27;Sydney&#x27;</span>, <span class="string">&#x27;New South Wales&#x27;</span>, <span class="string">&#x27;AU&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `locations` <span class="keyword">VALUES</span> (<span class="number">2300</span>, <span class="string">&#x27;198 Clementi North&#x27;</span>, <span class="string">&#x27;540198&#x27;</span>, <span class="string">&#x27;Singapore&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;SG&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `locations` <span class="keyword">VALUES</span> (<span class="number">2400</span>, <span class="string">&#x27;8204 Arthur St&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;London&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;UK&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `locations` <span class="keyword">VALUES</span> (<span class="number">2500</span>, <span class="string">&#x27;Magdalen Centre, The Oxford Science Park&#x27;</span>, <span class="string">&#x27;OX9 9ZB&#x27;</span>, <span class="string">&#x27;Oxford&#x27;</span>, <span class="string">&#x27;Oxford&#x27;</span>, <span class="string">&#x27;UK&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `locations` <span class="keyword">VALUES</span> (<span class="number">2600</span>, <span class="string">&#x27;9702 Chester Road&#x27;</span>, <span class="string">&#x27;09629850293&#x27;</span>, <span class="string">&#x27;Stretford&#x27;</span>, <span class="string">&#x27;Manchester&#x27;</span>, <span class="string">&#x27;UK&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `locations` <span class="keyword">VALUES</span> (<span class="number">2700</span>, <span class="string">&#x27;Schwanthalerstr. 7031&#x27;</span>, <span class="string">&#x27;80925&#x27;</span>, <span class="string">&#x27;Munich&#x27;</span>, <span class="string">&#x27;Bavaria&#x27;</span>, <span class="string">&#x27;DE&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `locations` <span class="keyword">VALUES</span> (<span class="number">2800</span>, <span class="string">&#x27;Rua Frei Caneca 1360 &#x27;</span>, <span class="string">&#x27;01307-002&#x27;</span>, <span class="string">&#x27;Sao Paulo&#x27;</span>, <span class="string">&#x27;Sao Paulo&#x27;</span>, <span class="string">&#x27;BR&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `locations` <span class="keyword">VALUES</span> (<span class="number">2900</span>, <span class="string">&#x27;20 Rue des Corps-Saints&#x27;</span>, <span class="string">&#x27;1730&#x27;</span>, <span class="string">&#x27;Geneva&#x27;</span>, <span class="string">&#x27;Geneve&#x27;</span>, <span class="string">&#x27;CH&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `locations` <span class="keyword">VALUES</span> (<span class="number">3000</span>, <span class="string">&#x27;Murtenstrasse 921&#x27;</span>, <span class="string">&#x27;3095&#x27;</span>, <span class="string">&#x27;Bern&#x27;</span>, <span class="string">&#x27;BE&#x27;</span>, <span class="string">&#x27;CH&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `locations` <span class="keyword">VALUES</span> (<span class="number">3100</span>, <span class="string">&#x27;Pieter Breughelstraat 837&#x27;</span>, <span class="string">&#x27;3029SK&#x27;</span>, <span class="string">&#x27;Utrecht&#x27;</span>, <span class="string">&#x27;Utrecht&#x27;</span>, <span class="string">&#x27;NL&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `locations` <span class="keyword">VALUES</span> (<span class="number">3200</span>, <span class="string">&#x27;Mariano Escobedo 9991&#x27;</span>, <span class="string">&#x27;11932&#x27;</span>, <span class="string">&#x27;Mexico City&#x27;</span>, <span class="string">&#x27;Distrito Federal,&#x27;</span>, <span class="string">&#x27;MX&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>girl.sql文件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> Navicat Premium Data Transfer</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> Source Server         : mysql0815</span></span><br><span class="line"><span class="comment"> Source Server Type    : MySQL</span></span><br><span class="line"><span class="comment"> Source Server Version : 50562</span></span><br><span class="line"><span class="comment"> Source Host           : localhost:3306</span></span><br><span class="line"><span class="comment"> Source Schema         : girls</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> Target Server Type    : MySQL</span></span><br><span class="line"><span class="comment"> Target Server Version : 50562</span></span><br><span class="line"><span class="comment"> File Encoding         : 65001</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> Date: 06/11/2019 16:26:51</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> NAMES utf8mb4;</span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for admin</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `admin`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `admin`  (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `username` <span class="type">varchar</span>(<span class="number">10</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `password` <span class="type">varchar</span>(<span class="number">10</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">3</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_general_ci ROW_FORMAT <span class="operator">=</span> Compact;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of admin</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `admin` <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;john&#x27;</span>, <span class="string">&#x27;8888&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `admin` <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">&#x27;lyt&#x27;</span>, <span class="string">&#x27;6666&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for beauty</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `beauty`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `beauty`  (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">50</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `sex` <span class="type">char</span>(<span class="number">1</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;Ů&#x27;</span>,</span><br><span class="line">  `borndate` datetime <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;1987-01-01 00:00:00&#x27;</span>,</span><br><span class="line">  `phone` <span class="type">varchar</span>(<span class="number">11</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `photo` <span class="type">blob</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `boyfriend_id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">13</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_general_ci ROW_FORMAT <span class="operator">=</span> Compact;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of beauty</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `beauty` <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;柳岩&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;1988-02-03 00:00:00&#x27;</span>, <span class="string">&#x27;18209876577&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">8</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `beauty` <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">&#x27;苍老师&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;1987-12-30 00:00:00&#x27;</span>, <span class="string">&#x27;18219876577&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">9</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `beauty` <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="string">&#x27;Angelababy&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;1989-02-03 00:00:00&#x27;</span>, <span class="string">&#x27;18209876567&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `beauty` <span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="string">&#x27;热巴&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;1993-02-03 00:00:00&#x27;</span>, <span class="string">&#x27;18209876579&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">2</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `beauty` <span class="keyword">VALUES</span> (<span class="number">5</span>, <span class="string">&#x27;周冬雨&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;1992-02-03 00:00:00&#x27;</span>, <span class="string">&#x27;18209179577&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">9</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `beauty` <span class="keyword">VALUES</span> (<span class="number">6</span>, <span class="string">&#x27;周芷若&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;1988-02-03 00:00:00&#x27;</span>, <span class="string">&#x27;18209876577&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `beauty` <span class="keyword">VALUES</span> (<span class="number">7</span>, <span class="string">&#x27;岳灵珊&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;1987-12-30 00:00:00&#x27;</span>, <span class="string">&#x27;18219876577&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">9</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `beauty` <span class="keyword">VALUES</span> (<span class="number">8</span>, <span class="string">&#x27;小昭&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;1989-02-03 00:00:00&#x27;</span>, <span class="string">&#x27;18209876567&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `beauty` <span class="keyword">VALUES</span> (<span class="number">9</span>, <span class="string">&#x27;双儿&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;1993-02-03 00:00:00&#x27;</span>, <span class="string">&#x27;18209876579&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">9</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `beauty` <span class="keyword">VALUES</span> (<span class="number">10</span>, <span class="string">&#x27;王语嫣&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;1992-02-03 00:00:00&#x27;</span>, <span class="string">&#x27;18209179577&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">4</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `beauty` <span class="keyword">VALUES</span> (<span class="number">11</span>, <span class="string">&#x27;夏雪&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;1993-02-03 00:00:00&#x27;</span>, <span class="string">&#x27;18209876579&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">9</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `beauty` <span class="keyword">VALUES</span> (<span class="number">12</span>, <span class="string">&#x27;赵敏&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="string">&#x27;1992-02-03 00:00:00&#x27;</span>, <span class="string">&#x27;18209179577&#x27;</span>, <span class="keyword">NULL</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for boys</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `boys`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `boys`  (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `boyName` <span class="type">varchar</span>(<span class="number">20</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `userCP` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">5</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_general_ci ROW_FORMAT <span class="operator">=</span> Compact;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of boys</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `boys` <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;张无忌&#x27;</span>, <span class="number">100</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `boys` <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">&#x27;鹿晗&#x27;</span>, <span class="number">800</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `boys` <span class="keyword">VALUES</span> (<span class="number">3</span>, <span class="string">&#x27;黄晓&#x27;</span>, <span class="number">50</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `boys` <span class="keyword">VALUES</span> (<span class="number">4</span>, <span class="string">&#x27;段誉&#x27;</span>, <span class="number">300</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>job_grades.sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">USE myemployees;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> job_grades(</span><br><span class="line">grade_level <span class="type">VARCHAR</span>(<span class="number">3</span>),</span><br><span class="line">lowest_sal  <span class="type">INT</span>,</span><br><span class="line">highest_sal <span class="type">INT</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job_grades</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">&#x27;A&#x27;</span>, <span class="number">1000</span>, <span class="number">2999</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job_grades</span><br><span class="line"><span class="keyword">VALUES</span> (<span class="string">&#x27;B&#x27;</span>, <span class="number">3000</span>, <span class="number">5999</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job_grades</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">&#x27;C&#x27;</span>, <span class="number">6000</span>, <span class="number">9999</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job_grades</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">&#x27;D&#x27;</span>, <span class="number">10000</span>, <span class="number">14999</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job_grades</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">&#x27;E&#x27;</span>, <span class="number">15000</span>, <span class="number">24999</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> job_grades</span><br><span class="line"><span class="keyword">VALUES</span>(<span class="string">&#x27;F&#x27;</span>, <span class="number">25000</span>, <span class="number">40000</span>);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="单表操作">单表操作</h2><h3 id="普通查询">普通查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询表中单个字段</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询表中的多个字段</span></span><br><span class="line"><span class="keyword">SELECT</span> last_name,salary,email <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询全部字段</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 字段带着重号 可以去掉 代表这是一个字段名称</span></span><br><span class="line"><span class="keyword">SELECT</span> `last_name`,`salary`,`email` <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询常量值 查询的结果和字段都是本身</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询表达式</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="number">100</span><span class="operator">*</span><span class="number">98</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询函数</span></span><br><span class="line"><span class="keyword">SELECT</span> VERSION();</span><br><span class="line"></span><br><span class="line"># 为字段起别名</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">① 便于理解</span></span><br><span class="line"><span class="comment">② 重名的时候 可以区分 </span></span><br><span class="line"><span class="comment">as 可以省略</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">SELECT</span> VERSION() <span class="keyword">AS</span> `mysql_version`; </span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询salary 输出为 out put 出现特殊符号的时候需要使用引号</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> salary <span class="keyword">AS</span> &quot;out put&quot; <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 去重</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> department_id <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"># <span class="operator">+</span>的作用</span><br><span class="line"><span class="comment">-- 查询员工名和员工姓为一个字</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">java 中的+ </span></span><br><span class="line"><span class="comment">运算符</span></span><br><span class="line"><span class="comment">连接符 只要有一个为字符串 就会拼接</span></span><br><span class="line"><span class="comment">在mysql中+只是运算符</span></span><br><span class="line"><span class="comment">在mysql中如果有一个字段为字符串 就会试图进行转换如果转换成功就按照字符串</span></span><br><span class="line"><span class="comment">代表的数值进行运算 否则就转换成0 只要其中的一方为null 结果就是null</span></span><br><span class="line"><span class="comment">字符串利用concat进行拼接</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">SELECT</span> CONCAT(last_name,<span class="string">&#x27; &#x27;</span>,first_name) <span class="keyword">AS</span> 姓名 <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">DESCRIBE</span> `departments`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> job_id <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ifnull函数</span></span><br><span class="line"><span class="keyword">SELECT</span> IFNULL(commission_pct,<span class="number">0</span>)<span class="keyword">AS</span> <span class="string">&#x27;奖金率&#x27;</span> <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  CONCAT(</span><br><span class="line">    first_name,</span><br><span class="line">    <span class="string">&#x27;,&#x27;</span>,</span><br><span class="line">    last_name,</span><br><span class="line">    <span class="string">&#x27;,&#x27;</span>,</span><br><span class="line">    IFNULL(commission_pct, <span class="number">0</span>)</span><br><span class="line">  ) <span class="keyword">AS</span> info</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="带条件查询">带条件查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">条件查询</span></span><br><span class="line"><span class="comment">语法 select 查询列表 from 表名 where 筛选条件;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">分类：</span></span><br><span class="line"><span class="comment">1、 条件表达式筛选 条件运算符 &gt; = &lt; &lt;&gt; &lt;= &gt;=</span></span><br><span class="line"><span class="comment">2、 按逻辑表达式筛选 使用的是逻辑运算符  and or not</span></span><br><span class="line"><span class="comment">&amp;&amp; 和 and 如果两个条件为true 结果为true 反之为false</span></span><br><span class="line"><span class="comment">！和 not 取反</span></span><br><span class="line"><span class="comment">or 只要有一个为true 就位true</span></span><br><span class="line"><span class="comment">3、 模糊查询 like in between and is null</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">-- 条件表达式查询</span></span><br><span class="line"> <span class="keyword">SELECT</span></span><br><span class="line">  <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="operator">&gt;</span> <span class="number">12000</span>;</span><br><span class="line"></span><br><span class="line"># 查询部门标号不等于<span class="number">90</span>号的员工名和部门编号</span><br><span class="line"> <span class="keyword">SELECT</span></span><br><span class="line">  last_name,</span><br><span class="line">  department_id</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees</span><br><span class="line"><span class="keyword">WHERE</span> department_id <span class="operator">&lt;&gt;</span> <span class="number">90</span>;</span><br><span class="line"></span><br><span class="line"># 按照逻辑表达式筛选</span><br><span class="line"> # 查询工资大于<span class="number">10000</span>小于<span class="number">20000</span>的员工信息</span><br><span class="line"> <span class="keyword">SELECT</span></span><br><span class="line">  last_name,</span><br><span class="line">  salary,</span><br><span class="line">  commission_pct</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="operator">&gt;</span> <span class="number">10000</span></span><br><span class="line">  <span class="keyword">AND</span> salary <span class="operator">&lt;</span> <span class="number">20000</span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> <span class="comment">-- 模糊查询</span></span><br><span class="line"> <span class="comment">-- like</span></span><br><span class="line"> <span class="comment">-- 查询员工名中包含支付a的员工信息</span></span><br><span class="line"> <span class="comment">-- 一般和通配符使用 </span></span><br><span class="line"> <span class="comment">/*</span></span><br><span class="line"><span class="comment"> % like 包含0-n个字符 </span></span><br><span class="line"><span class="comment"> _ 任意单个字符</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment"> 字符的转义可以使用\</span></span><br><span class="line"><span class="comment"> */</span> </span><br><span class="line"> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> last_name <span class="keyword">LIKE</span> <span class="string">&#x27;%a%&#x27;</span>;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/*</span></span><br><span class="line"><span class="comment"> between and</span></span><br><span class="line"><span class="comment"> 查询工资在10000-20000之间的员工</span></span><br><span class="line"><span class="comment"> 包含左右区间 但是不能颠倒顺序</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> salary <span class="keyword">BETWEEN</span> <span class="number">10000</span> <span class="keyword">AND</span><span class="number">20000</span>;</span><br><span class="line"> </span><br><span class="line"> <span class="comment">/*</span></span><br><span class="line"><span class="comment">in</span></span><br><span class="line"><span class="comment">提高简洁度</span></span><br><span class="line"><span class="comment">in里面的类型必须是同类型 或者类型兼容的</span></span><br><span class="line"><span class="comment">不支持%等通配符</span></span><br><span class="line"><span class="comment">查询员工的工种编号是 在 AD_VP PU_MAN</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> job_id <span class="keyword">IN</span>(<span class="string">&#x27;AD_VP&#x27;</span>, <span class="string">&#x27;PU_MAN&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">isnull</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">查询没有奖金率的员工</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span>commission_pct <span class="keyword">IS</span> <span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span>commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">安全等于 &lt;=&gt;</span></span><br><span class="line"><span class="comment">可以判断null值</span></span><br><span class="line"><span class="comment">也可以判断数值 </span></span><br><span class="line"><span class="comment">is null 只能判断null &lt;=&gt;可以判断null和数值 但是</span></span><br><span class="line"><span class="comment">可读性不好 因此建议使用is null 和 =</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> commission_pct <span class="operator">&lt;=&gt;</span> <span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> commission_pct <span class="operator">&lt;=&gt;</span> <span class="number">0.2</span>;</span><br></pre></td></tr></table></figure><h3 id="排序">排序</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">排序功能</span></span><br><span class="line"><span class="comment">语法 select 查询列表 from 表 where 筛选条件 order by 排序列表 [asc|desc]</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">查询员工信息 要求工资从高到低</span></span><br><span class="line"><span class="comment">一般情况下order by 是放在最后面的 limit 除外。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> salary <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*查询部门编号》90 按照入职时间进行排序*/</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees</span><br><span class="line"><span class="keyword">WHERE</span> employee_id <span class="operator">&gt;</span> <span class="number">90</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> hiredate;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*按照表达式排序 按照年薪排序  */</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="operator">*</span>,</span><br><span class="line">  salary <span class="operator">*</span> <span class="number">12</span> <span class="operator">*</span> (<span class="number">1</span><span class="operator">+</span> IFNULL(commission_pct, <span class="number">0</span>)) <span class="keyword">AS</span> year_salary</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span></span><br><span class="line">salary <span class="operator">*</span> <span class="number">12</span> <span class="operator">*</span> (<span class="number">1</span><span class="operator">+</span> IFNULL(commission_pct, <span class="number">0</span>));</span><br><span class="line">  <span class="comment">/*按照别名排序 年薪降序*/</span></span><br><span class="line">  <span class="keyword">SELECT</span></span><br><span class="line">    <span class="operator">*</span>,</span><br><span class="line">    salary <span class="operator">*</span> <span class="number">12</span> <span class="operator">*</span> (<span class="number">1</span><span class="operator">+</span> IFNULL(commission_pct, <span class="number">0</span>)) <span class="keyword">AS</span> year_salary</span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    employees</span><br><span class="line">  <span class="keyword">ORDER</span> <span class="keyword">BY</span> year_salary <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*按照员工姓名的长度进行排序*/</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  LENGTH(last_name) <span class="keyword">AS</span> name_length,</span><br><span class="line">  last_name</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> name_length <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*多个字段的排序*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  LENGTH(last_name) <span class="keyword">AS</span> name_length,</span><br><span class="line">  last_name,salary</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> name_length <span class="keyword">DESC</span>,salary <span class="keyword">DESC</span>;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="常见函数">常见函数</h3><h4 id="单行函数">单行函数</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 进阶4 常见函数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">功能 类似于java的方法 将我们的一组逻辑语句封装在函数内</span></span><br><span class="line"><span class="comment">对外暴露方法名</span></span><br><span class="line"><span class="comment">调用：slect 函数名(参数列表) from 表名 </span></span><br><span class="line"><span class="comment">特点 ① 函数名 ② 函数功能</span></span><br><span class="line"><span class="comment">分类 单行函数  concat length 处理</span></span><br><span class="line"><span class="comment">     分组函数统计函数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*单行函数：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">字符函数</span></span><br><span class="line"><span class="comment">数学函数</span></span><br><span class="line"><span class="comment">日期函数</span></span><br><span class="line"><span class="comment">其他函数</span></span><br><span class="line"><span class="comment">流程控制函数</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*字符函数</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">length</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">SELECT</span> LENGTH(<span class="string">&#x27;1222&#x27;</span>);</span><br><span class="line"><span class="keyword">SELECT</span> LENGTH(&quot;张三丰&quot;); # utf8 字符集 占据<span class="number">3</span>个字节</span><br><span class="line"></span><br><span class="line"># concat 拼接函数</span><br><span class="line"><span class="keyword">SELECT</span> CONCAT(first_name,last_name) <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"># upper lower 大小写转换</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> CONCAT(<span class="built_in">UPPER</span>(first_name),&quot; &quot;,<span class="built_in">LOWER</span>(last_name)) <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># substr substring 截取字符串 开始位置从<span class="number">1</span></span><br><span class="line"><span class="keyword">SELECT</span> SUBSTR(<span class="string">&#x27;李莫愁&#x27;</span>,<span class="number">2</span>) out_put;</span><br><span class="line"># 截取的为字符的长度</span><br><span class="line"><span class="keyword">SELECT</span> SUBSTR(<span class="string">&#x27;李莫愁&#x27;</span>,<span class="number">1</span>,<span class="number">1</span>) out_put;</span><br><span class="line"></span><br><span class="line"># instr </span><br><span class="line"><span class="keyword">SELECT</span> INSTR(<span class="string">&#x27;杨不悔爱上了殷六侠&#x27;</span>,<span class="string">&#x27;殷六侠&#x27;</span>) <span class="keyword">AS</span> output;</span><br><span class="line"></span><br><span class="line"># trim 去空格</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">TRIM</span>(<span class="string">&#x27;   heloo   &#x27;</span>) <span class="keyword">AS</span> output;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">TRIM</span>(<span class="string">&#x27;a&#x27;</span> <span class="keyword">FROM</span> <span class="string">&#x27;aaaaahhhhhaaaa&#x27;</span>) <span class="keyword">AS</span> output;</span><br><span class="line"></span><br><span class="line"># lpad 用指定的字符实现左填充 rpad 实现右填充</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> LPAD(<span class="string">&#x27;殷素素&#x27;</span>,<span class="number">10</span>,<span class="string">&#x27;*&#x27;</span>) <span class="keyword">AS</span> output;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># replace</span><br><span class="line"><span class="keyword">SELECT</span> REPLACE(&quot;周芷若爱上了张无忌&quot;,<span class="string">&#x27;周芷若&#x27;</span>,<span class="string">&#x27;赵敏&#x27;</span>) <span class="keyword">AS</span>  output;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 数学函数</span><br><span class="line"></span><br><span class="line">#  round 四舍五入</span><br><span class="line"><span class="keyword">SELECT</span> ROUND(<span class="number">1.45</span>);</span><br><span class="line"><span class="keyword">SELECT</span> ROUND(<span class="number">1.654</span>,<span class="number">2</span>); #保留两位小数</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 向上取整</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">CEIL</span>(<span class="number">2.2</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">-- 向下取整</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">FLOOR</span>(<span class="number">2.5</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 日期函数</span></span><br><span class="line"># now 返回当前日期<span class="operator">+</span>时间</span><br><span class="line"><span class="keyword">SELECT</span> NOW();</span><br><span class="line"></span><br><span class="line"># 返回当前日期</span><br><span class="line"><span class="keyword">SELECT</span> CURDATE();</span><br><span class="line"></span><br><span class="line"># 返回当前时间</span><br><span class="line"><span class="keyword">SELECT</span> CURTIME();</span><br><span class="line"></span><br><span class="line"># 在日期中获取年月日</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">YEAR</span>(hiredate) <span class="keyword">AS</span> `<span class="keyword">year</span>`   <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 格式化日期</span><br><span class="line"><span class="keyword">SELECT</span> employee_id,DATE_FORMAT(hiredate,<span class="string">&#x27;%Y年%m月%d日&#x27;</span>) <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*其他函数*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> VERSION();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 流程控制函数</span><br><span class="line"></span><br><span class="line"># if 函数</span><br><span class="line"><span class="keyword">SELECT</span> IF(<span class="number">10</span><span class="operator">&gt;</span><span class="number">5</span>,<span class="string">&#x27;大&#x27;</span>,<span class="string">&#x27;小&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># <span class="keyword">case</span>函数</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">switch case 函数</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">mysql中 case 要判断字段或者表达式</span></span><br><span class="line"><span class="comment">when 常量1： then：要显示的值或者语句;</span></span><br><span class="line"><span class="comment">...</span></span><br><span class="line"><span class="comment">else 默认的语句</span></span><br><span class="line"><span class="comment">end</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">部门号=30 显示的工资为1.1被</span></span><br><span class="line"><span class="comment">部门号=40 。。。1.2</span></span><br><span class="line"><span class="comment">..=50   1.3</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">SELECT</span> department_id,salary 原始工资,</span><br><span class="line"><span class="keyword">CASE</span> department_id</span><br><span class="line"><span class="keyword">WHEN</span> <span class="number">30</span> <span class="keyword">THEN</span> salary<span class="operator">*</span><span class="number">1.1</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="number">40</span> <span class="keyword">THEN</span> salary<span class="operator">*</span><span class="number">1.2</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="number">50</span> <span class="keyword">THEN</span> salary<span class="operator">*</span><span class="number">1.3</span></span><br><span class="line"><span class="keyword">ELSE</span> salary</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">AS</span> 新工资</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"># <span class="keyword">case</span> 函数的使用 类似多重if</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">在mysql中 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">作为一个字段显示</span></span><br><span class="line"><span class="comment">case</span></span><br><span class="line"><span class="comment">when 条件1 then 语句1</span></span><br><span class="line"><span class="comment">when 条件2 then 语句2</span></span><br><span class="line"><span class="comment">when 条件3 then 语句3</span></span><br><span class="line"><span class="comment">。。</span></span><br><span class="line"><span class="comment">else 要显示的值n或者语句n</span></span><br><span class="line"><span class="comment">end</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">如果工资&gt;20000显示A级别</span></span><br><span class="line"><span class="comment">如果工资&gt;15000 显示B级别</span></span><br><span class="line"><span class="comment">如果工资&gt;10000 显示C级别</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">SELECT</span> salary,</span><br><span class="line"><span class="keyword">CASE</span></span><br><span class="line"><span class="keyword">WHEN</span> salary<span class="operator">&gt;</span><span class="number">20000</span> <span class="keyword">THEN</span> <span class="string">&#x27;A&#x27;</span></span><br><span class="line"><span class="keyword">WHEN</span> salary<span class="operator">&gt;</span><span class="number">15000</span> <span class="keyword">THEN</span> <span class="string">&#x27;B&#x27;</span></span><br><span class="line"><span class="keyword">WHEN</span> salary<span class="operator">&gt;</span><span class="number">10000</span> <span class="keyword">THEN</span> <span class="string">&#x27;C&#x27;</span></span><br><span class="line"><span class="keyword">ELSE</span> <span class="string">&#x27;D&#x27;</span></span><br><span class="line"><span class="keyword">END</span> <span class="keyword">AS</span> `level`</span><br><span class="line"><span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="分组函数">分组函数</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 分组喊你书</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUM</span>(salary) <span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(salary) <span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(salary) <span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">功能</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">可以与distinct搭配实现去重统计</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">SUM</span>(<span class="keyword">DISTINCT</span> salary) <span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="keyword">DISTINCT</span> salary) <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># count函数</span><br><span class="line"><span class="comment">-- count(*)用于统计行数</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> employees;</span><br><span class="line"><span class="comment">-- 同理 加常量值 也是用于统计</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="number">1</span>) <span class="keyword">FROM</span> employees;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 效率 INNODB 在MYISAM count(*)效率最高 在INNODB count(*)与cout(1)效率差不多 但是大于字段</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 和分组函数一同查询的字段限制 一般要求的是group by的</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"># 进阶<span class="number">5</span> 分组查询</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">select 分组函数，列</span></span><br><span class="line"><span class="comment"> 分组前筛选 原始表 where</span></span><br><span class="line"><span class="comment"> 分组后筛选 使用筛选后的结果集 having</span></span><br><span class="line"><span class="comment"> 分组函数作维筛选使用having</span></span><br><span class="line"><span class="comment"> </span></span><br><span class="line"><span class="comment">特点 1、分组查询的筛选条件分为两类</span></span><br><span class="line"><span class="comment">分组前筛选</span></span><br><span class="line"><span class="comment">分组后筛选 </span></span><br><span class="line"><span class="comment">支持多个字段分组，分组之间的顺序无影响 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 插叙每个部门的平均工资</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">AVG</span>(salary) <span class="keyword">FROM</span> employees <span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(salary),manager_id <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> manager_id;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询部门的员工个数大于2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 先查询每个部门的员工数</span></span><br><span class="line"><span class="comment">-- 在根据每个部门的员工数进行筛选 使用having</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>),department_id <span class="keyword">FROM</span> employees <span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id <span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>)<span class="operator">&gt;</span><span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询每个工种有奖金的员工最高工资》12000的工种编号和最高工资</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(salary) <span class="keyword">AS</span> max_salary,job_id <span class="keyword">FROM</span> employees </span><br><span class="line"><span class="keyword">WHERE</span> commission_pct <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> job_id</span><br><span class="line"><span class="keyword">HAVING</span> max_salary<span class="operator">&gt;</span><span class="number">12000</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 按照表达式或者函数分组</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- ① 查询姓名长度的员工个数</span></span><br><span class="line"><span class="comment">-- 按照员工的姓名长度进行分组，查询每一组的员工个数，筛选员工个数&gt;5的有哪些 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> `count`,LENGTH(last_name) <span class="keyword">AS</span> len_name <span class="keyword">FROM</span> employees <span class="keyword">GROUP</span> <span class="keyword">BY</span> len_name <span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>)<span class="operator">&gt;</span><span class="number">5</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">DESC</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="多表操作">多表操作</h2><h3 id="笛卡尔乘积现象">笛卡尔乘积现象</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="operator">*</span></span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  beauty,</span><br><span class="line">  boys;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">笛卡尔乘积现象 如果表1有m行，表2有n行 那么查询的结果是m*n行</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">内连接</span></span><br><span class="line"><span class="comment">等值连接</span></span><br><span class="line"><span class="comment">非等值连接</span></span><br><span class="line"><span class="comment">自连接</span></span><br><span class="line"><span class="comment">外连接</span></span><br><span class="line"><span class="comment">左外连接</span></span><br><span class="line"><span class="comment">右外连接</span></span><br><span class="line"><span class="comment">全外连接</span></span><br><span class="line"><span class="comment">交叉连接</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  beauty.`name`,</span><br><span class="line">  boys.`boyName`</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  beauty,</span><br><span class="line">  boys</span><br><span class="line"><span class="keyword">WHERE</span> beauty.`boyfriend_id` <span class="operator">=</span> boys.`id`;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">一、sql92标准</span></span><br><span class="line"><span class="comment">1 等值连接</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  beauty.`name`,</span><br><span class="line">  boys.`boyName`</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  beauty,</span><br><span class="line">  boys</span><br><span class="line"><span class="keyword">WHERE</span> beauty.`boyfriend_id` <span class="operator">=</span> boys.`id`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  last_name,</span><br><span class="line">  department_name</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees,</span><br><span class="line">  departments</span><br><span class="line"><span class="keyword">WHERE</span> employees.`department_id` <span class="operator">=</span> departments.`department_id`;</span><br><span class="line"></span><br><span class="line"># 为表起别名</span><br><span class="line"> <span class="keyword">SELECT</span></span><br><span class="line">  e.`last_name`,</span><br><span class="line">  j.`job_id`,</span><br><span class="line">  j.`job_title`</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees e,</span><br><span class="line">  jobs j</span><br><span class="line"><span class="keyword">WHERE</span> e.`job_id` <span class="operator">=</span> j.`job_id`;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 非等值连接</span></span><br><span class="line"> <span class="keyword">select</span></span><br><span class="line">  salary,</span><br><span class="line">  grade_level</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">  employees e,</span><br><span class="line">  job_grades g</span><br><span class="line"><span class="keyword">where</span> salary <span class="keyword">between</span> g.`lowest_sal`</span><br><span class="line">  <span class="keyword">and</span> g.`highest_sal`;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">sql 99</span></span><br><span class="line"><span class="comment">select 查询列表</span></span><br><span class="line"><span class="comment">from 表1 别名 [连接类型]</span></span><br><span class="line"><span class="comment">join 表2 北冥</span></span><br><span class="line"><span class="comment">on 连接条件</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">内连接 inner</span></span><br><span class="line"><span class="comment">外连接 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">左外</span></span><br><span class="line"><span class="comment">右外</span></span><br><span class="line"><span class="comment">全外</span></span><br><span class="line"><span class="comment">交叉连接 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">-- 查询员工名和部门名</span></span><br><span class="line"> <span class="keyword">select</span></span><br><span class="line">  last_name,</span><br><span class="line">  department_name</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">  employees e</span><br><span class="line">  <span class="keyword">inner</span> <span class="keyword">join</span> departments d</span><br><span class="line">    <span class="keyword">on</span> e.`department_id` <span class="operator">=</span> d.`department_id`;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 案例 查询那个部门的员工个数》3的部门名和员工个数 并按照个数降序</span></span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">  department_name,</span><br><span class="line">  <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">as</span> employee_num</span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">  departments</span><br><span class="line">  <span class="keyword">inner</span> <span class="keyword">join</span> employees</span><br><span class="line">    <span class="keyword">on</span> employees.`department_id` <span class="operator">=</span> departments.`department_id`</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> departments.`department_id`</span><br><span class="line"><span class="keyword">having</span> employee_num <span class="operator">&gt;</span> <span class="number">3</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> employee_num <span class="keyword">desc</span>;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="子查询">子查询</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 内连接</span></span><br><span class="line"><span class="keyword">SELECT</span> beauty.`name`,beauty.`phone`,beauty.`boyfriend_id`,</span><br><span class="line">boys.`boyName` <span class="keyword">FROM</span> beauty <span class="keyword">JOIN</span> boys <span class="keyword">WHERE</span> </span><br><span class="line">beauty.`boyfriend_id`<span class="operator">=</span>boys.`id`;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 左外连接</span></span><br><span class="line"> <span class="keyword">SELECT</span></span><br><span class="line">  beauty.`name`,</span><br><span class="line">  beauty.`phone`,</span><br><span class="line">  beauty.`boyfriend_id`,</span><br><span class="line">  boys.`boyName`</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  beauty</span><br><span class="line">  <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> boys</span><br><span class="line"><span class="keyword">ON</span> beauty.`boyfriend_id` <span class="operator">=</span> boys.`id`;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 右外查询</span></span><br><span class="line"> <span class="keyword">SELECT</span></span><br><span class="line">  beauty.`name`,</span><br><span class="line">  beauty.`phone`,</span><br><span class="line">  beauty.`boyfriend_id`,</span><br><span class="line">  boys.`boyName`</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  beauty</span><br><span class="line">  <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> boys</span><br><span class="line"><span class="keyword">ON</span> beauty.`boyfriend_id` <span class="operator">=</span> boys.`id`;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">子查询</span></span><br><span class="line"><span class="comment">子查询需要使用小括号</span></span><br><span class="line"><span class="comment">子查询一般放在条件的右侧</span></span><br><span class="line"><span class="comment">一般搭配标量子查询 一般搭配多行子查询使用</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"># <span class="number">1.</span> 标量子查询</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">谁的工资比Abel高</span></span><br><span class="line"><span class="comment">先查询Abel的工资</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> salary <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> last_name<span class="operator">=</span><span class="string">&#x27;Abel&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  last_name,</span><br><span class="line">  salary</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees</span><br><span class="line"><span class="keyword">WHERE</span> salary <span class="operator">&gt;</span></span><br><span class="line">  (<span class="keyword">SELECT</span></span><br><span class="line">    salary</span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    employees</span><br><span class="line">  <span class="keyword">WHERE</span> last_name <span class="operator">=</span> <span class="string">&#x27;Abel&#x27;</span>);</span><br><span class="line">  </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">案例2 返回job_id 与141号员工相同，salary比143号员工多的</span></span><br><span class="line"><span class="comment">员工 姓名 job——id 工资1</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> job_id <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> employee_id <span class="operator">=</span> <span class="number">141</span>;</span><br><span class="line"><span class="keyword">SELECT</span> salary <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> employee_id <span class="operator">=</span> <span class="number">143</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  last_name,</span><br><span class="line">  job_id,</span><br><span class="line">  salary</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees</span><br><span class="line"><span class="keyword">WHERE</span> job_id <span class="operator">=</span></span><br><span class="line">  (<span class="keyword">SELECT</span></span><br><span class="line">    job_id</span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    employees</span><br><span class="line">  <span class="keyword">WHERE</span> employee_id <span class="operator">=</span> <span class="number">141</span>)</span><br><span class="line">  <span class="keyword">AND</span> salary <span class="operator">&gt;</span></span><br><span class="line">  (<span class="keyword">SELECT</span></span><br><span class="line">    salary</span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    employees</span><br><span class="line">  <span class="keyword">WHERE</span> employee_id <span class="operator">=</span> <span class="number">143</span>);</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  # 案例<span class="number">3</span> 返回 公式工资最少的运功的last_name,job_id 和salary</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">SELECT</span> <span class="built_in">MIN</span>(salary) <span class="keyword">FROM</span> employees;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">SELECT</span> last_name,job_id,salary <span class="keyword">FROM</span> employees</span><br><span class="line">  <span class="keyword">WHERE</span> salary<span class="operator">=</span>(</span><br><span class="line">  <span class="keyword">SELECT</span> <span class="built_in">MIN</span>(salary) <span class="keyword">FROM</span> employees</span><br><span class="line">  );</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  # 查询最低工资大于<span class="number">50</span>号部门的最低工资的部门id哈最低工资</span><br><span class="line">  <span class="keyword">SELECT</span> <span class="built_in">MIN</span>(salary) <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> department_id  <span class="operator">=</span> <span class="number">50</span>;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">  <span class="built_in">MIN</span>(salary) min_salary,</span><br><span class="line">  department_id</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">  employees</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id</span><br><span class="line"><span class="keyword">HAVING</span>  min_salary <span class="operator">&gt;</span></span><br><span class="line">  (<span class="keyword">SELECT</span></span><br><span class="line">    <span class="built_in">MIN</span>(salary)</span><br><span class="line">  <span class="keyword">FROM</span></span><br><span class="line">    employees</span><br><span class="line">  <span class="keyword">WHERE</span> department_id <span class="operator">=</span> <span class="number">50</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 行子查询 一行多列 多行多列</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查询员工编号以及工资最高的员工信息。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>),department_id <span class="keyword">FROM</span> employees <span class="keyword">GROUP</span> <span class="keyword">BY</span> department_id;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> department_name <span class="keyword">FROM</span> departments <span class="keyword">INNER</span> <span class="keyword">JOIN</span> employees <span class="keyword">ON</span> employees.`employee_id`<span class="operator">=</span><span class="number">102</span> <span class="keyword">AND</span> departments.`department_id`<span class="operator">=</span>employees.`department_id`;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 联合查询</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">union </span></span><br><span class="line"><span class="comment">多条查询语句的结果合并成一个结果</span></span><br><span class="line"><span class="comment">查询语句1</span></span><br><span class="line"><span class="comment">union </span></span><br><span class="line"><span class="comment">查询语句2</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">应用场景</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">要查询的结果来自于多个表 </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"># 查询部门编号<span class="operator">&gt;</span><span class="number">90</span> 或者邮箱包含a的员工信息</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> department_id<span class="operator">&gt;</span><span class="number">90</span></span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employees <span class="keyword">WHERE</span> email <span class="keyword">LIKE</span> <span class="string">&#x27;%a%&#x27;</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker-compose基础入门</title>
      <link href="/2021/06/30/docker-compose%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/"/>
      <url>/2021/06/30/docker-compose%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="docker-compose安装">docker-compose安装</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install docker-compose</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="模板文件">模板文件</h3><p>模板文件默认为<code>docker-compose.yaml</code></p><p>每个服务都必须指定image或者build build 必须有Dockerfile</p><p>如果使用 build 指令，在 Dockerfile 中设置的选项(例如：CMD, EXPOSE, VOLUME, ENV 等) 将会自动被获取，无需在 docker-compose.yml 中再次设置。</p><p>简单的模板</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  nginx-service:</span><br><span class="line">    image: nginx <span class="comment"># docker 镜像文件</span></span><br><span class="line">    ports: <span class="comment"># 映射端口</span></span><br><span class="line">      - <span class="string">&quot;80:80&quot;</span></span><br><span class="line">    volumes: </span><br><span class="line">      - ./<span class="built_in">log</span>:/var/<span class="built_in">log</span>/nginx <span class="comment"># 绝对路径映射</span></span><br><span class="line">      - html:/usr/share/nginx/html <span class="comment"># 卷标映射</span></span><br><span class="line">volumes:</span><br><span class="line">  html: <span class="comment"># 卷标</span></span><br></pre></td></tr></table></figure><h4 id="build-命令">build 命令</h4><p>​指定 Dockerfile 所在文件夹的路径（可以是绝对路径，或者相对 docker-compose.yml 文件的路径）<br>​模板</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">webapp:</span></span><br><span class="line">    <span class="attr">build:</span> <span class="string">./dir</span></span><br></pre></td></tr></table></figure><h4 id="image">image</h4><p>​指定为镜像名称或镜像 ID。如果镜像在本地不存在，Compose 将会尝试拉取这个镜像。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span> <span class="comment"># 版本号</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">nginx-service:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx</span> <span class="comment"># docker nginx 镜像文件</span></span><br><span class="line">    <span class="string">.......</span></span><br></pre></td></tr></table></figure><h4 id="depends-on">depends_on</h4><p>​容器启动顺序，解决容器依赖问题</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line">    <span class="attr">build:</span> <span class="string">.</span></span><br><span class="line">    <span class="attr">depends_on:</span> <span class="comment"># 先启动db 和redis</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">db</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">redis</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">postgres</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="expose">expose</h4><p>​暴露端口，但不映射到宿主机，只被连接的服务访问。<br>​</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">expose:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">&quot;3000&quot;</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">&quot;8000&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="ports">ports</h4><p>​暴露端口信息。</p><p>使用宿主端口：容器端口 (HOST:CONTAINER) 格式，或者仅仅指定容器的端口（宿主将会随机选择端口）都可以。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">ports:</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">&quot;3000&quot;</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">&quot;8000:8000&quot;</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">&quot;49100:22&quot;</span></span><br><span class="line"> <span class="bullet">-</span> <span class="string">&quot;127.0.0.1:8001:8001&quot;</span></span><br></pre></td></tr></table></figure><p>volumes<br>数据卷所挂载路径设置。可以设置宿主机路径 （HOST:CONTAINER） 或加上访问模式 （HOST:CONTAINER:ro）。</p><p>该指令中路径支持相对路径。<br>绝对路径</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span> <span class="comment"># 版本号</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">nginx-service:</span></span><br><span class="line">  <span class="string">.......</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./log:/var/log/nginx</span> <span class="comment"># 映射日志目录</span></span><br></pre></td></tr></table></figure><p>​卷标</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">nginx-service:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx</span> <span class="comment"># docker 镜像文件</span></span><br><span class="line">    <span class="attr">ports:</span> <span class="comment"># 映射端口</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;80:80&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="string">./log:/var/log/nginx</span> <span class="comment"># 绝对路径映射</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">html:/usr/share/nginx/html</span> <span class="comment"># 卷标映射</span></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">html:</span> <span class="comment"># 卷标</span></span><br></pre></td></tr></table></figure><p>第一种情况路径直接挂载到本地，比较直观，但需要管理本地的路径，而第二种使用卷标的方式，比较简洁，但你不知道数据存在本地什么位置，下面说明如何查看docker的卷标</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volume ls </span><br></pre></td></tr></table></figure><p>进行卷标查询</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volumes ls | grep html</span><br></pre></td></tr></table></figure><p>查询后进行详细查询</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volumes inspect tmp_html <span class="comment"># tmp_html是上一步查询出来的</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20210630211306178.png" alt="image-20210630211306178"></p><p>environment<br>设置环境变量。你可以使用数组或字典两种格式。</p><p>只给定名称的变量会自动获取运行 Compose 主机上对应变量的值，可以用来防止泄露不必要的数据。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">environment:</span></span><br><span class="line">  <span class="attr">RACK_ENV:</span> <span class="string">development</span></span><br><span class="line">  <span class="attr">SESSION_SECRET:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">environment:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">RACK_ENV=development</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">SESSION_SECRET</span></span><br></pre></td></tr></table></figure><h3 id="常见模板">常见模板</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.1&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">db:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="string">--default-authentication-plugin=mysql_native_password</span></span><br><span class="line">      <span class="string">--character-set-server=utf8mb4</span></span><br><span class="line">      <span class="string">--collation-server=utf8mb4_general_ci</span></span><br><span class="line">      <span class="string">--explicit_defaults_for_timestamp=true</span></span><br><span class="line">      <span class="string">--lower_case_table_names=1</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">3306</span><span class="string">:3306</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/var/lib/mysqlversion:</span> <span class="string">&#x27;3.1&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker-compose </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 容器 </tag>
            
            <tag> docker-compose </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker使用2</title>
      <link href="/2021/06/30/docker%E4%BD%BF%E7%94%A82/"/>
      <url>/2021/06/30/docker%E4%BD%BF%E7%94%A82/</url>
      
        <content type="html"><![CDATA[<p>紧接上文<a href="http://www.democpp.cn/2021/06/08/docker%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/ ">docker基本使用</a></p><h3 id="docker资源限制">docker资源限制</h3><p>docker可以限制各种资源，例如内存、cpu、带宽以及bps和iops等。</p><span id="more"></span><p>例如</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --memory 200M --memory-swap 300M  --name n1 nginx</span><br></pre></td></tr></table></figure><h3 id="docker数据卷">docker数据卷</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -v 宿主机的绝对路径:容器内部路径 --name 容器名称 镜像名称 </span><br><span class="line">docker run -it -v /home/liao/data:/data/ --name c1 centos:7</span><br></pre></td></tr></table></figure><p>此外还可以映射文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -v /home/liao/data.txt:/data.txt --name c1 centos:7</span><br></pre></td></tr></table></figure><h3 id="Dockerfile">Dockerfile</h3><p>一个简单的例子</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span>  golang:<span class="number">1.16</span> as builder</span><br><span class="line"><span class="comment"># 将dockerfile的所在文件夹下面的文件拷贝容器/go/src/test02下</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /go/src/test02</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> . .</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> go env -w GO111MODULE=on</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> go env -w GOPROXY=https://goproxy.cn,direct</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> go mod tidy</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> go build  -o /root/ginapp main.go</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">18.04</span> as runner</span><br><span class="line"><span class="comment"># RUN mkdir -p /go/app</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /go/app</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> --from=builder /root/ginapp .</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8080</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [ <span class="string">&quot;./ginapp&quot;</span> ]</span></span><br></pre></td></tr></table></figure><p>编译dockerfile</p><p>在dockerfile文件所在的目录下执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker build --tag username/tag . <span class="comment"># 注意后面有个点</span></span><br><span class="line"><span class="comment"># 例如</span></span><br><span class="line">docker build --tag liaoxianfu/gin-demo .</span><br></pre></td></tr></table></figure><p>忽略拷贝进dockerfile编译的文件。例如假设一个项目 存在main.go 和test.go 想把这个项目做成dockr镜像 但是不想把test.go拷贝进入镜像中就可以在项目目录下创建.dockerignore文件将文件名写在.dockerignore文件中进行忽略。整体的思路和.gitignore十分相似。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test.go</span><br></pre></td></tr></table></figure><h4 id="常见指令">常见指令</h4><p>WORKDIR</p><p>​    指定工作目录，如果不存在会自动创建目录</p><p>RUN<br>类似于在shell下执行命令</p><p>COPY<br>将上下文目录文件进行拷贝</p><p>ADD<br>与COPY作用相同，但是可以自动解压，以及添加网络文件</p><p>EXPOSE<br>暴露端口</p><p>VOLUME<br>映射到宿主机的目录</p><h4 id="分段编译，减小容器体积">分段编译，减小容器体积</h4><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span>  golang:<span class="number">1.16</span> as builder</span><br><span class="line"><span class="comment"># 将dockerfile的所在文件夹下面的文件拷贝容器/go/src/test02下</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /go/src/test02</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> *.go .</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> *.mod .</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> *.mod .</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> go env -w GO111MODULE=on</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> go env -w GOPROXY=https://goproxy.cn,direct</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> go mod tidy</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> go build  -o /root/ginapp main.go</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译与运行分离，减小发布的容器体积</span></span><br><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">18.04</span> as runner</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /go/app</span></span><br><span class="line"><span class="comment"># 将该目录下的内容存储到宿主机而不是容器</span></span><br><span class="line"><span class="keyword">VOLUME</span><span class="bash"> [ <span class="string">&quot;/data&quot;</span> ]</span></span><br><span class="line"><span class="comment"># 将builder中的ginapp文件拷贝到当前目录</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> --from=builder /root/ginapp .</span></span><br><span class="line"><span class="comment"># 运行</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [ <span class="string">&quot;./ginapp&quot;</span> ]</span></span><br><span class="line"><span class="comment"># 暴露8080端口</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 容器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker基本使用</title>
      <link href="/2021/06/08/docker%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/"/>
      <url>/2021/06/08/docker%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="1、介绍">1、介绍</h2><p>Docker 使用 Google 公司推出的 Go 语言 进行开发实现，基于 Linux 内核的 cgroup，namespace，以及 AUFS 类的 Union FS 等技术，对进程进行封装隔离，属于 操作系统层面的虚拟化技术。由于隔离的进程独立于宿主和其它的隔离的进程，因此也称其为容器。最初实现是基于 LXC，从 0.7 版本以后开始去除 LXC，转而使用自行开发的 libcontainer，从 1.11 开始，则进一步演进为使用 runC 和 containerd。</p><span id="more"></span><p>优点：</p><ul><li>系统资源利用率高</li><li>更快的启动时间</li><li>一致的运行时间</li><li>持续交付和部署</li><li>更轻松的迁移</li></ul><h2 id="2、镜像管理">2、镜像管理</h2><h3 id="2-1、查找镜像">2.1、查找镜像</h3><p>在命令行查询</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker search 镜像名称</span><br><span class="line"><span class="comment"># 举例</span></span><br><span class="line">docker search redis</span><br></pre></td></tr></table></figure><p>在docker hub查询 <a href="https://registry.hub.docker.com/">https://registry.hub.docker.com/</a></p><h3 id="2-2、下载镜像">2.2、下载镜像</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull name:tag</span><br><span class="line"><span class="comment"># 举例</span></span><br><span class="line">docker pull centos:7</span><br></pre></td></tr></table></figure><h3 id="2-3、查看本地镜像">2.3、查看本地镜像</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><h3 id="2-4、删除本地镜像">2.4、删除本地镜像</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker</span> rmi 镜像名称....</span><br><span class="line"><span class="attribute">docker</span> rmi centos:<span class="number">7</span> </span><br></pre></td></tr></table></figure><h3 id="2-5、查看镜像的详细信息">2.5、查看镜像的详细信息</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect 镜像名称</span><br></pre></td></tr></table></figure><h2 id="3、容器管理">3、容器管理</h2><h3 id="3-1-启动容器">3.1 启动容器</h3><p>1、交互式</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">run</span> -<span class="keyword">it</span> <span class="comment">--name hello centos:7 /bin/bash</span></span><br></pre></td></tr></table></figure><p>-it  /bin/bash 交互式运行</p><p>–name 指定名称</p><p>2、后台式</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name ng1 nginx</span><br><span class="line"><span class="comment"># -d 后台</span></span><br></pre></td></tr></table></figure><h3 id="3-2-查看容器列表">3.2 查看容器列表</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只显示运行状态</span></span><br><span class="line">docker ps</span><br><span class="line"><span class="comment"># 显示所有</span></span><br><span class="line">docker ps -a</span><br><span class="line"><span class="comment">#只显示ＩＤ</span></span><br><span class="line">docker ps -aq</span><br></pre></td></tr></table></figure><h3 id="3-3-启动容器列表中的容器">3.3 启动容器列表中的容器</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker start 容器名称/容器ID</span><br><span class="line">docker start 0400 </span><br><span class="line">docker start resdis</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210608112654.png" alt="image-20210608112653008"></p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210608112654.png" alt=""></p><h3 id="3-4-停止容器">3.4 停止容器</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop 容器名称/容器ID</span><br></pre></td></tr></table></figure><p>​</p><h3 id="3-5-删除容器">3.5 删除容器</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker rm 容器名称/容器ＩＤ</span><br><span class="line"><span class="comment">#删除所有容器</span></span><br><span class="line">docker rm $(docker ps -aq)</span><br></pre></td></tr></table></figure><h3 id="3-6-复制容器里的文件">3.6 复制容器里的文件</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp n1:<span class="regexp">/etc/</span>nginx<span class="regexp">/nginx.conf ./</span></span><br></pre></td></tr></table></figure><h3 id="3-7-设置重启规则">3.7 设置重启规则</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">--restart</span>=always</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 容器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go并发控制</title>
      <link href="/2021/06/05/go%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6/"/>
      <url>/2021/06/05/go%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<p>对于在一些场景中需要在一个协程中等待另一个或者多个协程的信息，举例用户下单后，创建订单需要确保在通知商家确定有货，收取金额后再进行数据库订单写入的操作。此时就需要等待通知商家和收取金额两个go routine成功通知数据库写入。Go提供了三个方案分别是channel、WaitGroup和Context</p><span id="more"></span><h3 id="1-channel">1. channel</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test01</span><span class="params">(num <span class="keyword">int</span>, ch <span class="keyword">chan</span> <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">res := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= num; i++ &#123;</span><br><span class="line">res += i</span><br><span class="line">time.Sleep(time.Millisecond * <span class="number">10</span>)</span><br><span class="line">&#125;</span><br><span class="line">ch &lt;- res</span><br><span class="line">fmt.Println(<span class="string">&quot;success&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">goCount := <span class="number">10</span></span><br><span class="line"><span class="keyword">var</span> ch = <span class="built_in">make</span>([]<span class="keyword">chan</span> <span class="keyword">int</span>, goCount)</span><br><span class="line">fmt.Println(<span class="string">&quot;开始&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; goCount; i++ &#123;</span><br><span class="line"><span class="comment">// channel 进行初始化</span></span><br><span class="line">ch[i] = <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">int</span>)</span><br><span class="line"><span class="keyword">go</span> test01(<span class="number">10</span>*i, ch[i])</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; goCount; i++ &#123;</span><br><span class="line">fmt.Println(&lt;-ch[i]) <span class="comment">// 会阻塞</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;end&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-WaitGroup">2. WaitGroup</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;sync&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test02</span><span class="params">(num <span class="keyword">int</span>, wg *sync.WaitGroup)</span></span> &#123;</span><br><span class="line">res := <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= num; i++ &#123;</span><br><span class="line">res += i</span><br><span class="line">time.Sleep(time.Millisecond * <span class="number">10</span>)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(res, <span class="string">&quot;   success&quot;</span>)</span><br><span class="line">wg.Done()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">var</span> wg sync.WaitGroup</span><br><span class="line">wg.Add(<span class="number">2</span>)</span><br><span class="line"><span class="keyword">go</span> test02(<span class="number">100</span>, &amp;wg)</span><br><span class="line"><span class="keyword">go</span> test02(<span class="number">1000</span>, &amp;wg)</span><br><span class="line">wg.Wait()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-Context">3. Context</h3><p>Context实际上只实现了接口，接口的定义</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Context <span class="keyword">interface</span> &#123;</span><br><span class="line"><span class="comment">// 返回一个time.Time类型的的deadline 和是否设置deadline的状态值 如果没有设置deadline 就会默认为设置一个初始的时间和ok==false</span></span><br><span class="line">Deadline() (deadline time.Time, ok <span class="keyword">bool</span>)</span><br><span class="line">    <span class="comment">// 返回一个只读的chan 需要在select-case语句中使用 case&lt;-context.Done() </span></span><br><span class="line">    <span class="comment">// 当Context关闭后 返回一个关闭的管道 仍然可读 如果goroutine收到关闭的信息但是Context还没来得及关闭 此时返回nil。</span></span><br><span class="line">Done() &lt;-<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line">    <span class="comment">// 描述context关闭的原因 关闭的理由由context决定 不需要用户设置 当context关闭后返回关闭的原因 如果还没关闭就返回nil</span></span><br><span class="line">Err() error</span><br><span class="line"><span class="comment">// 有一种context不是用于控制树状分布的goroutine而是用于在树状分布的goroutine之间传递信息。</span></span><br><span class="line">    <span class="comment">// value 就是作用此种状态的context 该返回用key值查询map中的value。</span></span><br><span class="line">Value(key <span class="keyword">interface</span>&#123;&#125;) <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-1-emptyCtx-定义">3.1 emptyCtx 定义</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> emptyCtx <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*emptyCtx)</span> <span class="title">Deadline</span><span class="params">()</span> <span class="params">(deadline time.Time, ok <span class="keyword">bool</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*emptyCtx)</span> <span class="title">Done</span><span class="params">()</span> &lt;-<span class="title">chan</span> <span class="title">struct</span></span>&#123;&#125; &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*emptyCtx)</span> <span class="title">Err</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*emptyCtx)</span> <span class="title">Value</span><span class="params">(key <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">interface</span></span>&#123;&#125; &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *emptyCtx)</span> <span class="title">String</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">switch</span> e &#123;</span><br><span class="line"><span class="keyword">case</span> background:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;context.Background&quot;</span></span><br><span class="line"><span class="keyword">case</span> todo:</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;context.TODO&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;unknown empty Context&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">background = <span class="built_in">new</span>(emptyCtx)</span><br><span class="line">todo       = <span class="built_in">new</span>(emptyCtx)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Background returns a non-nil, empty Context. It is never canceled, has no</span></span><br><span class="line"><span class="comment">// values, and has no deadline. It is typically used by the main function,</span></span><br><span class="line"><span class="comment">// initialization, and tests, and as the top-level Context for incoming</span></span><br><span class="line"><span class="comment">// requests.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Background</span><span class="params">()</span> <span class="title">Context</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> background</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>context包中定义了一个**公用的emptCtx全局变量，**名为background 可以通过context.Background()方法进行获取。context包提供了四个方法创建不同类型的context，使用这四个方法时如果没有父context则需要传入background，将background作为父节点。</p><p>四个方法的定义如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建cancelCtx</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WithCancel</span><span class="params">(parent Context)</span> <span class="params">(ctx Context, cancel CancelFunc)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> parent == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">&quot;cannot create context from nil parent&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">c := newCancelCtx(parent)</span><br><span class="line">propagateCancel(parent, &amp;c)</span><br><span class="line"><span class="keyword">return</span> &amp;c, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123; c.cancel(<span class="literal">true</span>, Canceled) &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建timeCtx 实现设定一个具体的截止日期</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WithDeadline</span><span class="params">(parent Context, d time.Time)</span> <span class="params">(Context, CancelFunc)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> parent == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">&quot;cannot create context from nil parent&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> cur, ok := parent.Deadline(); ok &amp;&amp; cur.Before(d) &#123;</span><br><span class="line"><span class="comment">// The current deadline is already sooner than the new one.</span></span><br><span class="line"><span class="keyword">return</span> WithCancel(parent)</span><br><span class="line">&#125;</span><br><span class="line">c := &amp;timerCtx&#123;</span><br><span class="line">cancelCtx: newCancelCtx(parent),</span><br><span class="line">deadline:  d,</span><br><span class="line">&#125;</span><br><span class="line">propagateCancel(parent, c)</span><br><span class="line">dur := time.Until(d)</span><br><span class="line"><span class="keyword">if</span> dur &lt;= <span class="number">0</span> &#123;</span><br><span class="line">c.cancel(<span class="literal">true</span>, DeadlineExceeded) <span class="comment">// deadline has already passed</span></span><br><span class="line"><span class="keyword">return</span> c, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123; c.cancel(<span class="literal">false</span>, Canceled) &#125;</span><br><span class="line">&#125;</span><br><span class="line">c.mu.Lock()</span><br><span class="line"><span class="keyword">defer</span> c.mu.Unlock()</span><br><span class="line"><span class="keyword">if</span> c.err == <span class="literal">nil</span> &#123;</span><br><span class="line">c.timer = time.AfterFunc(dur, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">c.cancel(<span class="literal">true</span>, DeadlineExceeded)</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> c, <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123; c.cancel(<span class="literal">true</span>, Canceled) &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建timeCtx 实现超时的效果</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WithTimeout</span><span class="params">(parent Context, timeout time.Duration)</span> <span class="params">(Context, CancelFunc)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> WithDeadline(parent, time.Now().Add(timeout))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建valueCtx 实现在协程上传递数据的效果</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WithValue</span><span class="params">(parent Context, key, val <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">Context</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> parent == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">&quot;cannot create context from nil parent&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> key == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">&quot;nil key&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> !reflectlite.TypeOf(key).Comparable() &#123;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">&quot;key is not comparable&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> &amp;valueCtx&#123;parent, key, val&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-2-cancelCtx">3.2 cancelCtx</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> cancelCtx <span class="keyword">struct</span> &#123;</span><br><span class="line">Context</span><br><span class="line">mu       sync.Mutex            <span class="comment">// protects following fields</span></span><br><span class="line">done     <span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;         <span class="comment">// created lazily, closed by first cancel call</span></span><br><span class="line">children <span class="keyword">map</span>[canceler]<span class="keyword">struct</span>&#123;&#125; <span class="comment">// set to nil by the first cancel call</span></span><br><span class="line">err      error                 <span class="comment">// set to non-nil by the first cancel call</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>children 中记录了由此context派生的所有的child 此context被cancel时会将其所有的child都cancel掉。cancelCtx和deadline和value无关 ，所以只需要实现Done和Err即可。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *cancelCtx)</span> <span class="title">Done</span><span class="params">()</span> &lt;-<span class="title">chan</span> <span class="title">struct</span></span>&#123;&#125; &#123;</span><br><span class="line">c.mu.Lock()</span><br><span class="line">    <span class="comment">// 有可能cancelCtx还没分配done就被cancel了所以要初始化一下</span></span><br><span class="line"><span class="keyword">if</span> c.done == <span class="literal">nil</span> &#123;</span><br><span class="line">c.done = <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line">&#125;</span><br><span class="line">d := c.done</span><br><span class="line">c.mu.Unlock()</span><br><span class="line"><span class="keyword">return</span> d</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *cancelCtx)</span> <span class="title">Err</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">c.mu.Lock()</span><br><span class="line">err := c.err</span><br><span class="line">c.mu.Unlock()</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>err默认值为nil 在context被cancel时指定一个error变量var Canceled=errors.New(“context canceled”)</p><p>cancel方法 关闭自己以及自己的后代</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *cancelCtx)</span> <span class="title">cancel</span><span class="params">(removeFromParent <span class="keyword">bool</span>, err error)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">&quot;context: internal error: missing cancel error&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">c.mu.Lock()</span><br><span class="line"><span class="keyword">if</span> c.err != <span class="literal">nil</span> &#123;</span><br><span class="line">c.mu.Unlock()</span><br><span class="line"><span class="keyword">return</span> <span class="comment">// already canceled</span></span><br><span class="line">&#125;</span><br><span class="line">c.err = err</span><br><span class="line"><span class="keyword">if</span> c.done == <span class="literal">nil</span> &#123;</span><br><span class="line">c.done = closedchan <span class="comment">// 还没来得及创建 再创建一个 在初始化的是否就关闭了</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">        var closedchan = make(chan struct&#123;&#125;)</span></span><br><span class="line"><span class="comment">func init() &#123;</span></span><br><span class="line"><span class="comment">close(closedchan)</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">close</span>(c.done) <span class="comment">// 关闭chan</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> child := <span class="keyword">range</span> c.children &#123;</span><br><span class="line"><span class="comment">// <span class="doctag">NOTE:</span> acquiring the child&#x27;s lock while holding parent&#x27;s lock.</span></span><br><span class="line">child.cancel(<span class="literal">false</span>, err)</span><br><span class="line">&#125;</span><br><span class="line">c.children = <span class="literal">nil</span></span><br><span class="line">c.mu.Unlock()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> removeFromParent &#123; <span class="comment">// 将自己从parent中删除</span></span><br><span class="line">removeChild(c.Context, c)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">HandleRequest</span><span class="params">(ctx context.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">go</span> WriteRedis(ctx)</span><br><span class="line"><span class="keyword">go</span> WriteMysql(ctx)</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line">fmt.Println(<span class="string">&quot;HandleRequest Done&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;HandleRequest running&quot;</span>)</span><br><span class="line">time.Sleep(time.Second * <span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WriteRedis</span><span class="params">(ctx context.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line">fmt.Println(<span class="string">&quot;WriteRedis Done&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;WriteRedis running&quot;</span>)</span><br><span class="line">time.Sleep(time.Second * <span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WriteMysql</span><span class="params">(ctx context.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line">fmt.Println(<span class="string">&quot;WriteMysql Done&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;WriteMysql running&quot;</span>)</span><br><span class="line">time.Sleep(time.Second * <span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">ctx, cancelFunc := context.WithCancel(context.Background())</span><br><span class="line"><span class="keyword">go</span> HandleRequest(ctx)</span><br><span class="line">time.Sleep(time.Second*<span class="number">5</span>)</span><br><span class="line">fmt.Println(<span class="string">&quot;时间到了..... &quot;</span>)</span><br><span class="line">cancelFunc()</span><br><span class="line">time.Sleep(time.Second*<span class="number">5</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> timerCtx <span class="keyword">struct</span> &#123;</span><br><span class="line">cancelCtx</span><br><span class="line">timer *time.Timer <span class="comment">// Under cancelCtx.mu.</span></span><br><span class="line"></span><br><span class="line">deadline time.Time</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-3-timerCtx">3.3 timerCtx</h4><p>timerCtx在cancelCtx基础上添加了定时器的功能用于标识自动cancel的最终时间，而timeer就是自动触发的定时器。由此衍生出WithDeadline()和WithTiemout()，实际上实现的原理一致语境不同而已。</p><ul><li>deadline 指定最后期限，比如2021：3：22 00:00:00 自动结束</li><li>timeout 指定最长存活时间 比如context在30s后被cancel</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WithTimeout</span><span class="params">(parent Context, timeout time.Duration)</span> <span class="params">(Context, CancelFunc)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> WithDeadline(parent, time.Now().Add(timeout))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实际上就timeout就是在调用WithDeadline。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">HandleRequest</span><span class="params">(ctx context.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">go</span> WriteRedis(ctx)</span><br><span class="line"><span class="keyword">go</span> WriteMysql(ctx)</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line">fmt.Println(<span class="string">&quot;HandleRequest Done&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;HandleRequest running&quot;</span>)</span><br><span class="line">time.Sleep(time.Second * <span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WriteRedis</span><span class="params">(ctx context.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line">fmt.Println(<span class="string">&quot;WriteRedis Done&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;WriteRedis running&quot;</span>)</span><br><span class="line">time.Sleep(time.Second * <span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WriteMysql</span><span class="params">(ctx context.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line">fmt.Println(<span class="string">&quot;WriteMysql Done&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;WriteMysql running&quot;</span>)</span><br><span class="line">time.Sleep(time.Second * <span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//ctx, cancelFunc := context.WithCancel(context.Background())</span></span><br><span class="line"><span class="comment">// 设置3s后自动取消</span></span><br><span class="line">ctx, cancelFunc := context.WithTimeout(context.Background(),time.Second*<span class="number">3</span>)</span><br><span class="line"><span class="comment">// 设置截止日期</span></span><br><span class="line">context.WithDeadline(context.Background(),time.Now().Add(time.Second*<span class="number">10</span>))</span><br><span class="line"><span class="keyword">go</span> HandleRequest(ctx)</span><br><span class="line">time.Sleep(time.Second*<span class="number">5</span>)</span><br><span class="line">fmt.Println(<span class="string">&quot;时间到了..... &quot;</span>)</span><br><span class="line">cancelFunc()</span><br><span class="line">fmt.Println(ctx.Err())</span><br><span class="line">time.Sleep(time.Second*<span class="number">5</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-4-valueCtx">3.4 valueCtx</h4><p>valueCtx比较简单 就是可以传递数据</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">HandleRequest</span><span class="params">(ctx context.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">go</span> WriteRedis(ctx)</span><br><span class="line"><span class="keyword">go</span> WriteMysql(ctx)</span><br><span class="line"><span class="keyword">go</span> GetParameters(ctx)</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line">fmt.Println(<span class="string">&quot;HandleRequest Done&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;HandleRequest running&quot;</span>)</span><br><span class="line">time.Sleep(time.Second * <span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WriteRedis</span><span class="params">(ctx context.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line">fmt.Println(<span class="string">&quot;WriteRedis Done&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;WriteRedis running&quot;</span>)</span><br><span class="line">time.Sleep(time.Second * <span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">WriteMysql</span><span class="params">(ctx context.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line">fmt.Println(<span class="string">&quot;WriteMysql Done&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;WriteMysql running&quot;</span>)</span><br><span class="line">time.Sleep(time.Second * <span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetParameters</span><span class="params">(ctx context.Context)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line"><span class="keyword">select</span> &#123;</span><br><span class="line"><span class="keyword">case</span> &lt;-ctx.Done():</span><br><span class="line">fmt.Println(<span class="string">&quot;GetParameters Done&quot;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;get parameters&quot;</span>,ctx.Value(<span class="string">&quot;data&quot;</span>))</span><br><span class="line">time.Sleep(time.Second * <span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//ctx, cancelFunc := context.WithCancel(context.Background())</span></span><br><span class="line"><span class="comment">// 设置3s后自动取消</span></span><br><span class="line">ctx, cancelFunc := context.WithTimeout(context.Background(), time.Second*<span class="number">3</span>)</span><br><span class="line"><span class="comment">//  因为valueCtx是无法自动结束的 所以需要设置一个支持cancel的父context</span></span><br><span class="line">ctx = context.WithValue(ctx, <span class="string">&quot;data&quot;</span>, <span class="number">1</span>)</span><br><span class="line"><span class="comment">// 设置截止日期</span></span><br><span class="line">context.WithDeadline(context.Background(), time.Now().Add(time.Second*<span class="number">10</span>))</span><br><span class="line"><span class="keyword">go</span> HandleRequest(ctx)</span><br><span class="line">time.Sleep(time.Second * <span class="number">5</span>)</span><br><span class="line">fmt.Println(<span class="string">&quot;时间到了..... &quot;</span>)</span><br><span class="line">cancelFunc()</span><br><span class="line">fmt.Println(ctx.Err())</span><br><span class="line">time.Sleep(time.Second * <span class="number">5</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意 因为valueCtx是无法自动结束的 所以需要设置一个支持cancel的父context</p><h3 id="4-Mutex">4.Mutex</h3><p>互斥锁是在并发编程中对共享资源进行访问的主要手段，对此Go语言提供了简单的Mutex，Mutex是一个结构体类型对外暴露Lock() 和Unlock() 两个方法，用于加锁和解锁。</p><h4 id="4-1-Mutex构成">4.1 Mutex构成</h4><p>Mutex的定义如下:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// A Mutex is a mutual exclusion lock.</span></span><br><span class="line"><span class="comment">// The zero value for a Mutex is an unlocked mutex.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// A Mutex must not be copied after first use.</span></span><br><span class="line"><span class="keyword">type</span> Mutex <span class="keyword">struct</span> &#123;</span><br><span class="line">state <span class="keyword">int32</span></span><br><span class="line">sema  <span class="keyword">uint32</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据官方的定义我们知道 Mutex是一个互斥锁 零值是一个unlock的互斥锁，当第一次使用后禁止进行拷贝操作。<code>state</code>用来表示互斥锁的状态，比如是否被锁定等。<code>sema</code>表示信号量，协程阻塞等待该信号量，解锁的协程释放信号量从而唤醒等待信号量。</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20201218131518552.png" alt="img"></p><ul><li>Locked  代表是否被锁定 0 没有 1 锁定</li><li>Woken 表示是否有协程被唤醒，0 没有 1 已经唤醒正在加锁</li><li>Starving 该Mutex是否处于饥饿状态 0 没有 1 表示饥饿状态 有协程阻塞超过了1 ms</li><li>Waiter 表示阻塞等待的协程个数 协程解锁时根据这个值来判断是否需要释放信号量</li></ul><p>协程之间的抢锁实际上是争夺给Locked赋值的权利，能给Locked域赋值1，就说明抢锁成功。如果没有抢到就阻塞等待<code>sema</code>信号量，等待再次解锁进行下次的争夺。</p><h4 id="4-2-加锁和解锁过程">4.2 加锁和解锁过程</h4><ul><li>简单加锁</li></ul><p>只有一个协程进行加锁</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20201218131710736.png" alt="在这里插入图片描述"></p><p>加锁过程会去判断Locked标志位是否为0，如果是0则把Locked位置1，代表加锁成功。从上图可见，加锁成功后，只是Locked位置1，其他状态位没发生变化。</p><ul><li>阻塞加锁</li></ul><p>如果该协程需要加锁时，这个锁已经被其他协程获取加锁了</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210329191100.png" alt="在这里插入图片描述"></p><p>从上图可看到，当协程B对一个已被占用的锁再次加锁时，Waiter计数器增加了1，此时协程B将被阻塞，直到Locked值变为0后才会被唤醒。</p><ul><li>简单解锁</li></ul><p>假定解锁时，没有其他协程阻塞，此时解锁过程如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210329191350.png" alt="在这里插入图片描述"></p><ul><li>解锁并唤醒</li></ul><p>假定解锁时，有1个或多个协程阻塞，此时解锁过程如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210329191622.png" alt="在这里插入图片描述"></p><p>协程A解锁过程分为两个步骤，一是把Locked位置0，二是查看到Waiter&gt;0，所以释放一个信号量，唤醒一个阻塞的协程，被唤醒的协程B把Locked位置1，于是协程B获得锁。</p><h4 id="4-3-自旋">4.3 自旋</h4><p>加锁时，如果当前的locked为1，说明当前该锁被其他协程持有，尝试加锁的协程并不是直接进行阻塞而是持续的进行探测LockedI是否变为0 ，这个过程称为自旋过程。自旋的过程十分短暂，如果在自旋过程中发现锁已经被释放，那么该协程就会立即获取这个锁，此时就算有其他的协程被唤醒也不能拿到锁只能再次进行阻塞。自旋的好处是当加锁失败时并不会立即进入阻塞，有一定的机会会获得锁，这样可以避免协程的切换。</p><p><strong>什么是自旋？</strong></p><p>自旋对应的是CPU的PAUSE命令，ＣＰＵ对指令什么都不做，相当于CPU 空转，对于程序而言是相当于sleep了一段时间（与sleep不同的是不需要将协程转为睡眠状态），时间非常短。自旋的过程会持续不断的探测Locked是否变为0，连续两次探测的间隔就是执行PAUSE的指令。</p><p><strong>自旋的条件</strong></p><p>加锁时，程序会自动判断是否需要进行自旋，无限制的自旋会给CPU带来巨大的压力，所以判断是否可以自选就非常重要了。自旋必须看满足以下条件：</p><ul><li>自旋的次数要足够少 通常为4 即最多自旋4次（超过自旋的次数之后就会阻塞的状态）</li><li>CPU的核数要大于1，否者自旋没有意义一次此时不可能有其他协程释放锁</li><li>协程调度机制中的Process数量需要大于1 比如使用GOMAXPROCS()将处理器的数量设置为1就不能自旋。</li><li>协程调度机制中的可运行队列必须为空否者会延迟协程调度。</li></ul><p><strong>自旋的优势</strong></p><p>自旋的优势是充分的利用CPU尽量避免协程的切换，如果经过短时间的自旋就可以获得锁那么当前的协程可以继续运行不必阻塞。</p><p><strong>自旋的问题</strong></p><p>如果自旋过程中获得锁，那么之前被阻塞的协程就无法获得锁。如果加锁的协程特别多每次都能通过自旋获得锁那么之前阻塞的协程就会一直被阻塞进入饥饿状态。为了避免协程长时间获取不到锁，从1.8增加了一个Mutex的Starving状态，在这个状态下不会进行自旋，一旦有协程协程释放锁就会唤醒阻塞的协程并成功加锁。</p><h4 id="4-4-Mutex模式">4.4 Mutex模式</h4><ul><li>Normal 模式</li></ul><p>默认情况下就是Normal模式，在该模式下如果加锁不成功不会立即进入阻塞模式而是判断是否能够自旋，如果可以进行自旋抢锁</p><ul><li>Starving模式</li></ul><p>如果阻塞的协程时间超过了1 ms就会就会进入Starving模式 此时不能进行自旋。</p><h4 id="4-5-Woken模式">4.5 Woken模式</h4><p>Woken状态用于加锁和解锁过程中的通信。也就是在同一个时刻一个进行解锁一个加锁，那么就不需要释放信号量了。</p><h4 id="4-6-重复解锁触发Panic">4.6 重复解锁触发Panic</h4><p>如果实现重复解锁不触发Panic，那么会频繁的唤醒多个协程，多个协程唤醒后会在Lock()中进行抢锁，增加Lock()的实现复杂度，引起不必要的协程切换。</p><h4 id="4-7-编程Tips">4.7 编程Tips</h4><ul><li>使用defer避免死锁</li></ul><p>加锁后立即使用defer进行解锁</p><ul><li>加锁和解锁成对出现</li></ul><p>加锁和解锁最好出现在同一层次的代码块中。</p>]]></content>
      
      
      <categories>
          
          <category> go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
            <tag> 并发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Go语言基础</title>
      <link href="/2020/10/28/Go%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2020/10/28/Go%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="Go语言基础（一）">Go语言基础（一）</h2><h3 id="1、变量声明">1、变量声明</h3><p>Go语言声明变量分为四种：全局变量声明、局部变量声明、匿名变量声明和init初始化函数。</p><span id="more"></span><h4 id="1-1、全局变量声明">1.1、全局变量声明</h4><p>声明格式：<strong>var 变量名称 变量类型</strong> 如果在声明的同时给变量赋值可以省略变量类型。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a <span class="keyword">int</span> <span class="comment">// 声明一个为赋值的变量 默认值为int的零值 也就是0 </span></span><br><span class="line"><span class="keyword">var</span> b = <span class="literal">false</span> <span class="comment">// 声明的同时进行赋值 编译器会进行自动推导 这里赋值为false后 推导类型为bool</span></span><br></pre></td></tr></table></figure><p>多个变量可以只写一个var</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span>(</span><br><span class="line">a <span class="keyword">int</span></span><br><span class="line">    b <span class="keyword">bool</span></span><br><span class="line">    str <span class="keyword">string</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>多个类型的可以一行声明</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a,b,c <span class="keyword">int</span></span><br></pre></td></tr></table></figure><p>可以同时在一行中进行声明和赋值</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a,b,c = <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span></span><br></pre></td></tr></table></figure><p>也可以指定为不同的类型 自动推导</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a,b,c  = <span class="number">1</span>,<span class="literal">true</span>,<span class="string">&quot;asd&quot;</span></span><br></pre></td></tr></table></figure><h4 id="1-2-局部变量">1.2 局部变量</h4><p>局部变量声明除了与<strong>上面的全局变量声明的格式</strong>以外，还可以使用<code>:=</code>进行声明 注意：<strong>这种只可以用在函数体内声明</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:=<span class="number">1</span> <span class="comment">// 与var a =1 等同</span></span><br></pre></td></tr></table></figure><p>也可以进行多值一行赋值</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a,b:=<span class="number">1</span>,<span class="number">2</span></span><br></pre></td></tr></table></figure><p>也可以进行互换值而无需引入第三个变量</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a,b=b,a</span><br></pre></td></tr></table></figure><h4 id="1-3-匿名变量">1.3 匿名变量</h4><p>由于局部变量声明后必须使用，否则编译器会报错，为了解决这个问题，可以将不需要使用的局部变量赋值给匿名变量<code>_</code></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test01</span><span class="params">()</span> <span class="params">(<span class="keyword">int</span>, <span class="keyword">string</span>, <span class="keyword">bool</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>, <span class="string">&quot;hallo&quot;</span>, <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a, _, _ = test01() <span class="comment">// 使用匿名变量接收无需使用的其他返回值 避免报错</span></span><br><span class="line">fmt.Println(a)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-4-init初始化函数">1.4 init初始化函数</h4><p>init函数是一个特殊函数，执行优先级比main函数要高并且不能手动进行调用，每个源文件都有一个init函数，在main函数之前进行调用。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test01</span><span class="params">()</span> <span class="params">(<span class="keyword">int</span>, <span class="keyword">string</span>, <span class="keyword">bool</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>, <span class="string">&quot;hallo&quot;</span>, <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">a, _, _ = test01()</span><br><span class="line">fmt.Println(a)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;我比main函数优先级高&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行结果：</p><blockquote><p>我比main函数优先级高<br>1</p></blockquote><h3 id="2、数据类型">2、数据类型</h3><p>不同的数据类型占据的内存空间是不同的，了解不同的数据类型能够提高内存的利用率。</p><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">类型描述</th></tr></thead><tbody><tr><td style="text-align:center">bool</td><td style="text-align:center">bool类型 值为true和false两个，占据内存空间为1字节</td></tr><tr><td style="text-align:center">int/uint</td><td style="text-align:center">Go支持有符号和无符号两种类型，具体的大小取决于编译器的实现。<br />但是Go内置了确定字节数的int实现int8/uint8(byte),int16/uint16 int32(rune)/uint32，int64/uint64</td></tr><tr><td style="text-align:center">float32/float64</td><td style="text-align:center">Go语言是没有float类型的，长度为32,64 占据的内存空间<br />为4字节和8字节</td></tr><tr><td style="text-align:center">string</td><td style="text-align:center">字符串类型 所有的字节默认使用UTF-8，字符串是固定的不可变化</td></tr><tr><td style="text-align:center">派生类型</td><td style="text-align:center">切片（slice）、字典（map），通道（channel）、指针（pointer）等</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><p>整数（int）和浮点数（float）类型的操作 加减乘除等 不再进行赘述，与其他语言基本一致。</p><h4 id="2-1、字符串">2.1、字符串</h4><h5 id="2-1-1-字符串是不可变常量">2.1.1 字符串是不可变常量</h5><p>GO语言的字符串串是一个固定的值也就是进行初始化后不能再进行修改。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">str:=<span class="string">&quot;Hello World&quot;</span></span><br><span class="line"><span class="comment">//str[0] =&#x27;A&#x27; // 报错 无法进行修改</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="keyword">range</span> str &#123;</span><br><span class="line">fmt.Println(str[i]) <span class="comment">// 打印的是ASCAL码值</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>字符串不进行转义</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">str:=<span class="string">`你好\n世界`</span></span><br><span class="line">fmt.Println(str)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>你好\n世界</p></blockquote><p>字符串修改</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">str := <span class="string">`你好\n世界`</span></span><br><span class="line">str += <span class="string">&quot;hello&quot;</span></span><br><span class="line">fmt.Println(str)</span><br><span class="line"><span class="comment">// 修改字符（例如汉字 因为汉字的值&gt;127） 转换为rune</span></span><br><span class="line">str2 := []<span class="keyword">rune</span>(str)</span><br><span class="line"><span class="comment">// 打印对应的ascal值</span></span><br><span class="line"><span class="keyword">for</span> i:=<span class="number">0</span> ; i &lt; <span class="built_in">len</span>(str2); i++ &#123;</span><br><span class="line">fmt.Println(str2[i])</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 修改</span></span><br><span class="line"><span class="comment">// 你 对应值为 20320</span></span><br><span class="line"><span class="comment">// 修改为 好 值为 22909</span></span><br><span class="line">str2[<span class="number">0</span>] = <span class="number">22909</span></span><br><span class="line">fmt.Println(<span class="keyword">string</span>(str2))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>20320<br>22909<br>92<br>110<br>19990<br>30028<br>104<br>101<br>108<br>108<br>111<br>好好\n世界hello</p></blockquote><h5 id="2-1-2、Stirngs包操作字符串"><strong>2.1.2、Stirngs包操作字符串</strong></h5><p>1、判断是否包含前缀</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// HasPrefix tests whether the string s begins with prefix.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">HasPrefix</span><span class="params">(s, prefix <span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">len</span>(s) &gt;= <span class="built_in">len</span>(prefix) &amp;&amp; s[<span class="number">0</span>:<span class="built_in">len</span>(prefix)] == prefix</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str:=<span class="string">&quot;你好 世界 World&quot;</span></span><br><span class="line">hasPrefix := strings.HasPrefix(str, <span class="string">&quot;你&quot;</span>)</span><br></pre></td></tr></table></figure><p>2、判断是否包含后缀</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// HasSuffix tests whether the string s ends with suffix.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">HasSuffix</span><span class="params">(s, suffix <span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">len</span>(s) &gt;= <span class="built_in">len</span>(suffix) &amp;&amp; s[<span class="built_in">len</span>(s)-<span class="built_in">len</span>(suffix):] == suffix</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">suffix := strings.HasSuffix(str,<span class="string">&quot;ld&quot;</span>)</span><br><span class="line">fmt.Println(suffix)</span><br></pre></td></tr></table></figure><p>3、判断是否包含子串（字符）</p><p>函数原型</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Contains reports whether substr is within s.</span></span><br><span class="line"><span class="comment">// 判断子串是否</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Contains</span><span class="params">(s, substr <span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> Index(s, substr) &gt;= <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ContainsAny reports whether any Unicode code points in chars are within s.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ContainsAny</span><span class="params">(s, chars <span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> IndexAny(s, chars) &gt;= <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ContainsRune reports whether the Unicode code point r is within s.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ContainsRune</span><span class="params">(s <span class="keyword">string</span>, r <span class="keyword">rune</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> IndexRune(s, r) &gt;= <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数测试</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">str := <span class="string">&quot;你好 世界 World&quot;</span></span><br><span class="line">hasStr := strings.Contains(str, <span class="string">&quot;世界&quot;</span>)</span><br><span class="line">fmt.Println(hasStr) <span class="comment">// true </span></span><br><span class="line"></span><br><span class="line">containsAny := strings.ContainsAny(str, <span class="string">&quot;&quot;</span>)</span><br><span class="line">fmt.Println(containsAny) <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line">containsRune := strings.ContainsRune(str, <span class="keyword">rune</span>(<span class="string">&#x27;世&#x27;</span>))</span><br><span class="line">fmt.Println(containsRune) <span class="comment">// true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、索引</p><p>查询首个匹配数据</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 返回第一个子串的位置 不存在返回-1</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Index</span><span class="params">(s, substr <span class="keyword">string</span>)</span> <span class="title">int</span></span> &#123;...&#125;  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// example</span></span><br><span class="line">s:=<span class="string">&quot;Hello world&quot;</span></span><br><span class="line">strings.Index(s, <span class="string">&quot;world&quot;</span>) <span class="comment">// 返回子串第一个的位置 6</span></span><br><span class="line">strings.Index(s,<span class="string">&quot;www&quot;</span>) <span class="comment">// 不存在子串 返回 -1 </span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 查询子串中任一一个字符存在的位置</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">IndexAny</span><span class="params">(s, chars <span class="keyword">string</span>)</span> <span class="title">int</span></span> &#123;...&#125;</span><br><span class="line"></span><br><span class="line">strings.IndexAny(s, <span class="string">&quot;loooo&quot;</span>) <span class="comment">// 2 </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 返回r在s的位置</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">IndexRune</span><span class="params">(s <span class="keyword">string</span>, r <span class="keyword">rune</span>)</span> <span class="title">int</span></span> &#123;...&#125; </span><br><span class="line"></span><br><span class="line">strings.IndexRune(s, <span class="keyword">rune</span>(<span class="string">&#x27;w&#x27;</span>) <span class="comment">//  6</span></span><br></pre></td></tr></table></figure><p>查询最后匹配的数据</p><p>与前面的用法基本一致</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s := <span class="string">&quot;Hello world&quot;</span> <span class="comment">// 长度为 11</span></span><br><span class="line"><span class="built_in">println</span>(strings.LastIndex(s, <span class="string">&quot;world&quot;</span>)) <span class="comment">// 6</span></span><br><span class="line"><span class="built_in">println</span>(strings.LastIndexAny(s, <span class="string">&quot;looo&quot;</span>)) <span class="comment">// 9</span></span><br><span class="line"><span class="built_in">println</span>(strings.LastIndexByte(s, <span class="keyword">byte</span>(<span class="string">&#x27;l&#x27;</span>))) <span class="comment">// 9</span></span><br></pre></td></tr></table></figure><p>5、替换</p><p>Replace函数返回前n个old字符串被new字符串替代的一个string类型变量s的副本。如果old为空，默认会匹配开头，也就是将替换的new字符串加载开头 如果n&lt;0 就不会限制被替换的副本数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 函数原型</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Replace returns a copy of the string s with the first n</span></span><br><span class="line"><span class="comment">// non-overlapping instances of old replaced by new.</span></span><br><span class="line"><span class="comment">// If old is empty, it matches at the beginning of the string</span></span><br><span class="line"><span class="comment">// and after each UTF-8 sequence, yielding up to k+1 replacements</span></span><br><span class="line"><span class="comment">// for a k-rune string.</span></span><br><span class="line"><span class="comment">// If n &lt; 0, there is no limit on the number of replacements.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Replace</span><span class="params">(s, old, <span class="built_in">new</span> <span class="keyword">string</span>, n <span class="keyword">int</span>)</span> <span class="title">string</span></span> &#123;...&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">s := <span class="string">&quot;你好，世界，世界&quot;</span></span><br><span class="line">newWord := <span class="string">&quot;地球&quot;</span></span><br><span class="line">oldWord := <span class="string">&quot;世界&quot;</span></span><br><span class="line">replaceWord := strings.Replace(s, oldWord, newWord, <span class="number">1</span>) <span class="comment">// 将世界替换成地球 匹配的次数为1 返回的结果为 你好，地球，世界</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test06</span><span class="params">()</span></span> &#123;</span><br><span class="line">s := <span class="string">&quot;你好，世界，世界&quot;</span></span><br><span class="line">newWord := <span class="string">&quot;地球&quot;</span></span><br><span class="line">oldWord := <span class="string">&quot;世界&quot;</span></span><br><span class="line">replaceWord := strings.Replace(s, oldWord, newWord, <span class="number">-1</span>) <span class="comment">// n为-1 &lt;0 替换所有的 </span></span><br><span class="line">    <span class="comment">// 你好，地球，地球</span></span><br><span class="line"><span class="built_in">println</span>(replaceWord)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test07</span><span class="params">()</span></span> &#123;</span><br><span class="line">s := <span class="string">&quot;你好，世界，世界&quot;</span></span><br><span class="line">newWord := <span class="string">&quot;地球&quot;</span></span><br><span class="line">oldWord := <span class="string">&quot;&quot;</span></span><br><span class="line">replaceWord := strings.Replace(s, oldWord, newWord, <span class="number">1</span>) <span class="comment">// oldWorld为空 默认将新的字符串加载开头 地球你好，世界，世界</span></span><br><span class="line"><span class="built_in">println</span>(replaceWord)</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>6、统计字符串出现的次数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(strings.Count(<span class="string">&quot;cheese&quot;</span>, <span class="string">&quot;e&quot;</span>))</span><br><span class="line">fmt.Println(strings.Count(<span class="string">&quot;five&quot;</span>, <span class="string">&quot;&quot;</span>)) <span class="comment">// before &amp; after each rune 空字符串是统计的字符串数量加1</span></span><br><span class="line"><span class="comment">// Output:</span></span><br><span class="line"><span class="comment">// 3</span></span><br><span class="line"><span class="comment">// 5</span></span><br></pre></td></tr></table></figure><p>7、统计字符的数量</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s := <span class="string">&quot;你好，世界，世界&quot;</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%s长度为%d\n&quot;</span>,s,<span class="built_in">len</span>([]<span class="keyword">rune</span>(s))) <span class="comment">// 将字符转换为int类型统计数组的长度 8</span></span><br><span class="line">fmt.Println(utf8.RuneCountInString(s)) <span class="comment">// 8</span></span><br></pre></td></tr></table></figure><p>8、两种遍历方式</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">s:=<span class="string">&quot;Hello,世界&quot;</span></span><br><span class="line"><span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;<span class="built_in">len</span>(s);i++ &#123;</span><br><span class="line"><span class="comment">//fmt.Println(s[i])</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%c\n&quot;</span>,s[i]) <span class="comment">// 存在乱码 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> s &#123;</span><br><span class="line"><span class="comment">//fmt.Println(v)</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%c\n&quot;</span>,v) <span class="comment">// 不存在乱码 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>9、大小写转换</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 大小写转换</span></span><br><span class="line">s := <span class="string">&quot;hello world&quot;</span></span><br><span class="line">upperStr := strings.ToUpper(s)</span><br><span class="line"><span class="built_in">println</span>(upperStr)</span><br><span class="line">lowerStr := strings.ToLower(upperStr)</span><br><span class="line"><span class="built_in">println</span>(lowerStr)</span><br><span class="line"><span class="comment">// Output</span></span><br><span class="line"><span class="comment">// HELLO WORLD</span></span><br><span class="line"><span class="comment">//hello world</span></span><br></pre></td></tr></table></figure><p>10、字符串修剪</p><p>只可以替换开头和结尾 如果需要进行中间的修剪可以使用Replace函数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">s:=<span class="string">&quot;hello world&quot;</span></span><br><span class="line">trim := strings.Trim(s, <span class="string">&quot;h&quot;</span>)</span><br><span class="line"><span class="built_in">println</span>(trim) <span class="comment">// ello,world</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s=<span class="string">&quot;  he&quot;</span></span><br><span class="line">trim=strings.TrimSpace(s)<span class="comment">// 修剪空格</span></span><br></pre></td></tr></table></figure><p>11、字符串分割</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s:=<span class="string">&quot;a,b,c&quot;</span></span><br><span class="line">split := strings.Split(s, <span class="string">&quot;,&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> _, s2 := <span class="keyword">range</span> split &#123;</span><br><span class="line"><span class="built_in">println</span>(s2)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>12、插入字符串</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">s := <span class="string">&quot;a b c&quot;</span></span><br><span class="line">fields := strings.Fields(s)</span><br><span class="line"><span class="keyword">for</span> _, field := <span class="keyword">range</span> fields &#123;</span><br><span class="line"><span class="built_in">println</span>(field)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// a</span></span><br><span class="line"><span class="comment">// b</span></span><br><span class="line"><span class="comment">// c</span></span><br><span class="line"></span><br><span class="line">strJoin := strings.Join(fields, <span class="string">&quot;;&quot;</span>) <span class="comment">// 将为slice的字符串间隔添加字符</span></span><br><span class="line"><span class="built_in">println</span>(strJoin)</span><br><span class="line"><span class="comment">// a;b;c</span></span><br></pre></td></tr></table></figure><p>2.1.3、strconv包</p><p>strconv包主要用于字符串与其他数据类型进行转换</p><h6 id="1、其他类型转字符串">1、其他类型转字符串</h6><p>int类型转换为各种进制的字符串</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">formatInt10 := strconv.FormatInt(<span class="number">122</span>, <span class="number">10</span>) <span class="comment">// 转换为10进制的字符串</span></span><br><span class="line"><span class="built_in">println</span>(formatInt10) <span class="comment">//122</span></span><br><span class="line">formatInt8 := strconv.FormatInt(<span class="number">122</span>, <span class="number">8</span>) <span class="comment">// 转换为8进制的字符串</span></span><br><span class="line"><span class="built_in">println</span>(formatInt8) <span class="comment">//172</span></span><br><span class="line">formatInt16 := strconv.FormatInt(<span class="number">122</span>, <span class="number">16</span>) <span class="comment">// 转换为16进制的字符串</span></span><br><span class="line"><span class="built_in">println</span>(formatInt16) <span class="comment">// 7a</span></span><br><span class="line">formatInt2 := strconv.FormatInt(<span class="number">122</span>, <span class="number">2</span>) <span class="comment">// 转换为2进制</span></span><br><span class="line"><span class="built_in">println</span>(formatInt2) <span class="comment">// 1111010</span></span><br><span class="line">itoa := strconv.Itoa(<span class="number">122</span>) <span class="comment">//相当于int转换为10进制</span></span><br><span class="line"><span class="built_in">println</span>(itoa) <span class="comment">// 122</span></span><br></pre></td></tr></table></figure><h6 id="2、字符串转其他类型">2、字符串转其他类型</h6><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">s:=<span class="string">&quot;1001&quot;</span></span><br><span class="line">v, err := strconv.Atoi(s)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(v)</span><br><span class="line">&#125;</span><br><span class="line">v2, err := strconv.ParseInt(s, <span class="number">10</span>, <span class="number">32</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(v2) <span class="comment">// 1001</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">v2, err := strconv.ParseInt(s, <span class="number">2</span>, <span class="number">32</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(v2) <span class="comment">// 9</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">s2:=<span class="string">&quot;102.2&quot;</span></span><br><span class="line">v3, err := strconv.ParseFloat(s2, <span class="number">32</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%.1f&quot;</span>,v3)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go网络编程</title>
      <link href="/2020/10/19/Go%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
      <url>/2020/10/19/Go%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="网络编程">网络编程</h2><p>本文将介绍使用Go语言来开发网络程序。Go语言标准库里提供的net包，支持基于IP层、TCP/UDP层以及应用层（HTTP，FTP等）的网络操作。其中用于操作IP层的称为Raw Socket</p><span id="more"></span><h3 id="1、Socket编程">1、Socket编程</h3><p>在Go语言编程中编写网络，我们将看不到传统的编码形式、以前使用Socket进行编程时会进行如下步骤的操作</p><p>创建Socket-&gt; 绑定Socket-&gt;监听-&gt; 接受连接-&gt; 接收或者发送。</p><p>Go语言标准库对此进行了抽象和封装。无论我们期望使用什么协议建立什么形式的连接都只需要调用net.Dial()</p><h4 id="1-1、dial-函数">1.1、dial() 函数</h4><p>函数原型为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">func Dial(net,addr string)(Conn,error)</span><br></pre></td></tr></table></figure><p>其中net参数为网络协议的名字，addr参数为IP地址或者域名，端口号以<code>:</code>分割 例如addr = <code>127.0.0.1:8080</code>端口为可选。如果连接成功返回连接对象否者返回error。</p><p>常见的连接方式</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// TCP</span></span><br><span class="line">conn,err := net.Dial(<span class="string">&quot;tcp&quot;</span>,<span class="string">&quot;127.0.0.1:2000&quot;</span>)</span><br><span class="line"><span class="comment">// UDP</span></span><br><span class="line">conn,err := net.Dial(<span class="string">&quot;udp&quot;</span>,<span class="string">&quot;127.0.0.1:8080&quot;</span>)</span><br><span class="line"><span class="comment">// ICMP(使用协议名称)</span></span><br><span class="line">conn,err := net.Dial(<span class="string">&quot;ip4:icmp&quot;</span>,<span class="string">&quot;127.0.0.1:8080&quot;</span>)</span><br><span class="line"><span class="comment">// ICMP（使用协议编号）</span></span><br><span class="line">conn,err := net.Dial(<span class="string">&quot;ip4:1&quot;</span>,<span class="string">&quot;127.0.0.1:8080&quot;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>百度百科</p><p>ICMP（Internet Control Message Protocol）Internet控制<a href="https://baike.baidu.com/item/%E6%8A%A5%E6%96%87/3164352">报文</a>协议。它是<a href="https://baike.baidu.com/item/TCP%2FIP%E5%8D%8F%E8%AE%AE%E7%B0%87">TCP/IP协议簇</a>的一个子协议，用于在IP<a href="https://baike.baidu.com/item/%E4%B8%BB%E6%9C%BA/455151">主机</a>、<a href="https://baike.baidu.com/item/%E8%B7%AF%E7%94%B1">路由</a>器之间传递控制消息。控制消息是指<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E9%80%9A">网络通</a>不通、<a href="https://baike.baidu.com/item/%E4%B8%BB%E6%9C%BA/455151">主机</a>是否可达、<a href="https://baike.baidu.com/item/%E8%B7%AF%E7%94%B1/363497">路由</a>是否可用等网络本身的消息。这些控制消息虽然并不传输用户数据，但是对于用户数据的传递起着重要的作用。</p></blockquote><p>TODO</p><blockquote><p>TCP和UDP还没有弄懂</p></blockquote><h3 id="2、HTTP编程">2、HTTP编程</h3><p>Go语言标准库中提供了net/http包用于实现HTTP客户端和服务端编程。</p><h4 id="2-0、web的工作方式">2.0、web的工作方式</h4><p>什么是http协议？</p><blockquote><p>HTTP是一种无状态、由文本构成的请求-响应(request-response)协议,这种协议使用 的是客户端-服务器( client-server)计算模型 。</p></blockquote><p>我们平时浏览网页的时候,会打开浏览器，输入网址后按下回车键，然后就会显示出你想要浏览的内容。在这个看似简单的用户行为背后，到底隐藏了些什么呢？</p><p>对于普通的上网过程，系统其实是这样做的：浏览器本身是一个客户端，当你输入URL的时候，首先浏览器会去请求DNS服务器，通过DNS获取相应的域名对应的IP，然后通过IP地址找到IP对应的服务器后，要求建立TCP连接，等浏览器发送完HTTP Request（请求）包后，服务器接收到请求包之后才开始处理请求包，服务器调用自身服务，返回HTTP Response（响应）包；客户端收到来自服务器的响应后开始渲染这个Response包里的主体（body），等收到全部的内容随后断开与该服务器之间的TCP连接。</p><p>Web服务器的工作原理可以简单地归纳为：</p><ul><li>客户机通过TCP/IP协议建立到服务器的TCP连接</li><li>客户端向服务器发送HTTP协议请求包，请求服务器里的资源文档</li><li>服务器向客户机发送HTTP协议应答包，如果请求的资源包含有动态语言的内容，那么服务器会调用动态语言的解释引擎负责处理“动态内容”，并将处理得到的数据返回给客户端</li><li>客户机与服务器断开。由客户端解释HTML文档，在客户端屏幕上渲染图形结果</li></ul><p>URL 与DNS解析</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">scheme://host[:<span class="keyword">port</span><span class="comment">#]/path/.../[?query-string][#anchor]</span></span><br><span class="line">scheme         指定低层使用的协议(例如：http, https, ftp)</span><br><span class="line">host           HTTP服务器的IP地址或者域名</span><br><span class="line"><span class="keyword">port</span><span class="comment">#          HTTP服务器的默认端口是80，这种情况下端口号可以省略。如果使用了别的端口，必须指明，例如 http://www.cnblogs.com:8080/</span></span><br><span class="line">path           访问资源的路径</span><br><span class="line">query-string   发送给http服务器的数据</span><br><span class="line"><span class="built_in">anchor</span>         锚</span><br></pre></td></tr></table></figure><p>HTTP 请求包（浏览器信息）</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET <span class="regexp">/domains/</span>example<span class="regexp">/ HTTP/</span><span class="number">1.1</span>      <span class="regexp">//</span>请求行: 请求方法 请求URI HTTP协议/协议版本</span><br><span class="line">Host：www.iana.org             <span class="regexp">//</span>服务端的主机名</span><br><span class="line">User-Agent：Mozilla<span class="regexp">/5.0 (Windows NT 6.1) AppleWebKit/</span><span class="number">537.4</span> (KHTML, like Gecko) Chrome<span class="regexp">/22.0.1229.94 Safari/</span><span class="number">537.4</span>            <span class="regexp">//</span>浏览器信息</span><br><span class="line">Accept：text<span class="regexp">/html,application/</span>xhtml+xml,application<span class="regexp">/xml;q=0.9,*/</span>*;q=<span class="number">0.8</span>    <span class="regexp">//</span>客户端能接收的mine</span><br><span class="line">Accept-Encoding：gzip,deflate,sdch     <span class="regexp">//</span>是否支持流压缩</span><br><span class="line">Accept-Charset：UTF-<span class="number">8</span>,*;q=<span class="number">0.5</span>      <span class="regexp">//</span>客户端字符编码集</span><br><span class="line"><span class="regexp">//</span>空行,用于分割请求头和消息体</span><br><span class="line"><span class="regexp">//</span>消息体,请求资源参数,例如POST传递的参数</span><br></pre></td></tr></table></figure><h4 id="2-1、HTTP客户端">2.1、HTTP客户端</h4><p>Go语言中的<code>net/http</code>包提供了最简洁的HTTP客户端实现，我们无需借助第三方网络通信库就可以直接使用HTTP中的GET和POST请求。</p><h4 id="基本方法">基本方法</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Client)</span> <span class="title">Get</span><span class="params">(url <span class="keyword">string</span>)</span><span class="params">(r *Response,err error)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Client)</span> <span class="title">Post</span><span class="params">(url <span class="keyword">string</span>,bodyType <span class="keyword">string</span>,body io.Reader)</span><span class="params">(r *Response,err error)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Client)</span> <span class="title">PostForm</span><span class="params">(url <span class="keyword">string</span>,data url.Values)</span><span class="params">(r *Response,err error)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Client)</span> <span class="title">Head</span><span class="params">(url <span class="keyword">string</span>)</span><span class="params">(r *Response，err error)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Client)</span> <span class="title">Do</span><span class="params">(req *Request)</span><span class="params">(r *Response, err error)</span></span></span><br></pre></td></tr></table></figure><p>Get方法</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetDemo</span><span class="params">()</span></span> &#123;</span><br><span class="line">resp, err := http.Get(<span class="string">&quot;http://www.baidu.com&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err.Error())</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">_ = resp.Body.Close()</span><br><span class="line">&#125;()</span><br><span class="line">_, _ = io.Copy(os.Stdout, resp.Body)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Post方法</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PostDemo</span><span class="params">()</span></span>&#123;</span><br><span class="line">imgFile, err := ioutil.ReadFile(<span class="string">&quot;a,jpg&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;ioutil.ReadFile(\&quot;a,jpg\&quot;) failed &quot;</span>,err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line">reader := bytes.NewReader(imgFile)</span><br><span class="line">resp, err := http.Post(<span class="string">&quot;http://example.com/upload&quot;</span>, <span class="string">&quot;image/jpeg&quot;</span>, reader)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot; http.Post(...) error &quot;</span>,err)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> resp.StatusCode != http.StatusOK &#123;</span><br><span class="line"><span class="comment">// 请求失败</span></span><br><span class="line">fmt.Println(<span class="string">&quot;request error，Response code is &quot;</span>,resp.StatusCode)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go面向对象编程</title>
      <link href="/2020/10/19/go-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/"/>
      <url>/2020/10/19/go-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="面向对象编程">面向对象编程</h2><h3 id="1、类型系统">1、类型系统</h3><p>类型系统是指一个语言的类型体系结构。一个典型的类型系统通常包括如下的基本内容。</p><span id="more"></span><p>基础类型 int、float等</p><p>复合类型 数组、结构体、指针等</p><p>可以指向任意对象的类型（Any类型）</p><p>值语义和引用语义</p><p>面向对象</p><p>接口。</p><p>在Java中存在两套类型系统，分别是值类型和对象类型，值类型包byte、int等值类型，对象类型是继承自Object的对象类型。这些类型可以定义成员变量和成员方法。而对于Go语言来说大多数都是值类型并且都可以包含对应的操作方法。在需要的时候你可以给任何类型新增方法（包括内置类型）。实现某个接口时无需从该接口继承，只需要实现该接口中的所有方法就被认为实现了该接口。任何类型都可以被Any类型引用，Any类型就是空接口<code>interface&#123;&#125;</code></p><h4 id="1-1-为类型添加方法">1.1 为类型添加方法</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Integer <span class="keyword">int</span></span><br><span class="line"><span class="comment">// 为Integer类增加一个Less方法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span><span class="params">(a Integer)</span><span class="title">Less</span><span class="params">(b Integer)</span><span class="title">bool</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&lt;b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 可以直接声明</span></span><br><span class="line">    <span class="keyword">var</span> a Integer = <span class="number">1</span></span><br><span class="line">    res := a.Less(<span class="number">2</span>)</span><br><span class="line">    fmt.Println(res) <span class="comment">// true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Java和C++中隐藏了this指针。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 直接使用了name和age 实际上是this.name和this.age</span></span><br><span class="line">        System.out.println(<span class="string">&quot;name:&quot;</span>+ name +<span class="string">&quot; age:&quot;</span>+age);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Person p = <span class="keyword">new</span> Person();</span><br><span class="line">        p.age = <span class="number">10</span>;</span><br><span class="line">        p.name = <span class="string">&quot;w&quot;</span>;</span><br><span class="line">        p.say();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Python中并没有省略，而是使用了self固定的关键字,它和this的指针作用是完全一样的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,name,age</span>):</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = <span class="built_in">int</span>(age)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">say</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">str</span>.<span class="built_in">format</span>(<span class="string">&quot;name:%s  age:%d&quot;</span>%(self.name,self.age)))</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    p = Person(<span class="string">&#x27;w&#x27;</span>,<span class="number">10</span>)</span><br><span class="line">    p.say()</span><br></pre></td></tr></table></figure><p>而在Go中没有隐藏this指针而且传递的不需要非要是指针，也不用非要叫this或者其他特定的名称。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">Name <span class="keyword">string</span></span><br><span class="line">Age  <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p Person)</span> <span class="title">Say</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Printf(<span class="string">&quot;name:%s  age:%d\n&quot;</span>, p.Name, p.Age)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">p1 := Person&#123;</span><br><span class="line">Name: <span class="string">&quot;w&quot;</span>,</span><br><span class="line">Age:  <span class="number">10</span>,</span><br><span class="line">&#125;</span><br><span class="line">p1.Say()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Go语言中面向对象最为直观，也无需支付额外的成本，如果要求对象必须以指针传递这时候会有一个额外的成本，因为如果对象很小的时候使用指针传递并不划算。只有需要修改某个对象的时候才必须使用指针，因为Go语言是值传递的，想要修改传递的值必须传递指针。</p><p>特别注意 <strong>使用接口编程时，如果实现接口的是指针，那么不能把结构体实例值 赋值给接口。</strong></p><p>例如</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义一个接口</span></span><br><span class="line"><span class="keyword">type</span> IRouter <span class="keyword">interface</span> &#123;</span><br><span class="line"><span class="comment">// handle之前的处理</span></span><br><span class="line">PreHandle(request IRequest)</span><br><span class="line"><span class="comment">// 业务处理</span></span><br><span class="line">Handle(request IRequest)</span><br><span class="line"><span class="comment">// handle 之后的处理</span></span><br><span class="line">PostHandle(request IRequest)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 实现接口</span></span><br><span class="line"><span class="keyword">type</span> BaseRouter <span class="keyword">struct</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *BaseRouter)</span> <span class="title">PreHandle</span><span class="params">(request ziface.IRequest)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *BaseRouter)</span> <span class="title">Handle</span><span class="params">(request ziface.IRequest)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(b *BaseRouter)</span> <span class="title">PostHandle</span><span class="params">(request ziface.IRequest)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ir IRouter</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">var</span> ir ziface.IRouter</span><br><span class="line">ir = BaseRouter&#123;&#125; <span class="comment">// 报错 cannot use BaseRouter literal (type BaseRouter) as type ziface.IRouter in assignment:</span></span><br><span class="line">    <span class="comment">//BaseRouter does not implement ziface.IRouter (Handle method has pointer receiver)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 必须取地址 不会报错</span></span><br><span class="line">    ir = &amp;BaseRouter&#123;&#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="1-2-值语义和引用语义">1.2 值语义和引用语义</h4><p>值引用对变量的修改只会对自身有效，而引用语义则会修改对应引用的所有变量。例如</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">p1 := Person&#123;</span><br><span class="line">Name: <span class="string">&quot;w&quot;</span>,</span><br><span class="line">Age:  <span class="number">10</span>,</span><br><span class="line">&#125;</span><br><span class="line">p2 := p1</span><br><span class="line">p2.Age = <span class="number">20</span></span><br><span class="line">p2.Say() <span class="comment">// name:w  age:20</span></span><br><span class="line">p1.Say() <span class="comment">// name:w  age:10</span></span><br><span class="line">fmt.Println(<span class="string">&quot;----------------------------&quot;</span>)</span><br><span class="line">p3 := &amp;p1</span><br><span class="line">p3.Name = <span class="string">&quot;l&quot;</span></span><br><span class="line">p3.Say() <span class="comment">// name:l  age:10</span></span><br><span class="line">p2.Say() <span class="comment">// name:w  age:20</span></span><br><span class="line">p1.Say() <span class="comment">// name:l  age:10</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Go语言中类型的值语义被表现的非常纯粹，在C语言中函数接受一个数组的时候是被认为是引用类型的，但是在结构体中定义的时候又被认为是值类型的，但是在Go语言中数组就是单纯的值语义的。其中有几个特例分别是：数组切片，map，channel和接口。</p><h4 id="1-3-结构体相关操作">1.3 结构体相关操作</h4><p>在Go语言中结构体与其他的面向对象的语言的类class是一个概念，但是放弃了很多属性例如继承，只是保留了组合这个基本的属性。其实严格上来说，组合并不能算是面向对象的特性。在C语言这种面向过程的语言中依旧存在。</p><p>结构体的定义</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="comment">//Animal 结构体.</span></span><br><span class="line"><span class="keyword">type</span> Animal <span class="keyword">struct</span> &#123;</span><br><span class="line">name <span class="keyword">string</span></span><br><span class="line">age  <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>结构体可以直接进行组合达到继承的目的</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Dog 结构体 组合Animal结构体中的属性</span></span><br><span class="line"><span class="keyword">type</span> Dog <span class="keyword">struct</span> &#123;</span><br><span class="line">Animal</span><br><span class="line">sound <span class="keyword">string</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结构体的初始化操作</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">dog1 := <span class="built_in">new</span>(Dog) <span class="comment">// 默认都是对应的基本属性的零值</span></span><br><span class="line">fmt.Println(dog1.age, dog1.name, dog1.sound)</span><br><span class="line">dog2 := &amp;Dog&#123;&#125; <span class="comment">// 同样</span></span><br><span class="line">_ = dog2</span><br><span class="line"></span><br><span class="line">dog3 := &amp;Dog&#123;</span><br><span class="line">Animal: Animal&#123;</span><br><span class="line">name: <span class="string">&quot;w&quot;</span>,</span><br><span class="line">age:  <span class="number">10</span>,</span><br><span class="line">&#125;,</span><br><span class="line">sound: <span class="string">&quot;sound&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(dog3.name)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>构造函数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// NewDog 构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewDog</span><span class="params">(name <span class="keyword">string</span>, age <span class="keyword">int</span>, sound <span class="keyword">string</span>)</span> *<span class="title">Dog</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;Dog&#123;</span><br><span class="line">Animal&#123;</span><br><span class="line">name: name,</span><br><span class="line">age:  age,</span><br><span class="line">&#125;,</span><br><span class="line">sound,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Student 结构体</span></span><br><span class="line"><span class="keyword">type</span> Student <span class="keyword">struct</span> &#123;</span><br><span class="line"><span class="comment">// Person的组合</span></span><br><span class="line">Person</span><br><span class="line">Score  <span class="keyword">float32</span></span><br><span class="line">Gender <span class="keyword">byte</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Say function 继承Person的Say方法并添加新的功能</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(s *Student)</span> <span class="title">Say</span><span class="params">()</span></span> &#123;</span><br><span class="line">gender := <span class="string">&quot;&quot;</span></span><br><span class="line">s.Person.Say()</span><br><span class="line"><span class="keyword">if</span> s.Gender == <span class="number">0</span> &#123;</span><br><span class="line">gender = <span class="string">&quot;男&quot;</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">gender = <span class="string">&quot;女&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;Gender：%s，Score；%f&quot;</span>, gender, s.Score)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2、接口">2、接口</h3><h4 id="2-1-接口赋值">2.1 接口赋值</h4><p>接口赋值在Go中分为两种情况：一种是将对象实例赋值给接口，另一种是将另一个接口赋值给该接口。</p><p><strong>将对象赋值给接口</strong></p><p>只要该对象实现了该接口中的所有方法就可以将这个对象赋值给该接口。</p><p>a、定义接口</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// LessAdder 定义复合接口</span></span><br><span class="line"><span class="keyword">type</span> LessAdder <span class="keyword">interface</span> &#123;</span><br><span class="line">Less(b Integer) <span class="keyword">bool</span></span><br><span class="line">Add(b Integer)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>b、对象实现这个接口中的所有方法</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Integer <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Less 判断小于的方法.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a Integer)</span> <span class="title">Less</span><span class="params">(b Integer)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> a &lt; b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Add 方法。</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a *Integer)</span> <span class="title">Add</span><span class="params">(b Integer)</span></span> &#123;</span><br><span class="line">*a += b</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在有个问题是，如果我们有一个<code>Integer</code>对象实例，我们是传递对象还是对象指针呢？</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a Integer = <span class="number">1</span></span><br><span class="line"><span class="keyword">var</span> b LessAdder = a <span class="comment">// 错误</span></span><br><span class="line"><span class="keyword">var</span> c LessAdder = &amp;a <span class="comment">// 正确</span></span><br></pre></td></tr></table></figure><p>为什么呢？</p><p>因为我们知道如果直接进行值拷贝，那么对于<code>Add</code>方法的实现就不能达到预期。对于Less方法可以生成<code>func (a *Integer) Less(b Integer) bool</code>方法，这个方法与预期的原方法是一样的。如果方法的接受者都是进行值拷贝，那么上面的两个均可以成功赋值。</p><p><strong>将接口赋值给接口</strong></p><p>在Go语言中只要两个接口拥有相同的方法列表（次序不同不影响），那么它们就是等同的，可以进行相互赋值。</p><p>例如我们定义了下面的两个接口</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> one</span><br><span class="line"></span><br><span class="line"><span class="comment">// ReadWriter 接口</span></span><br><span class="line"><span class="keyword">type</span> ReadWriter <span class="keyword">interface</span> &#123;</span><br><span class="line">Read(buf []<span class="keyword">byte</span>) (n <span class="keyword">int</span>, err error)</span><br><span class="line">Write(buf []<span class="keyword">byte</span>) (n <span class="keyword">int</span>, err error)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> two</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> IStraem <span class="keyword">interface</span> &#123;</span><br><span class="line">Write(bs []<span class="keyword">byte</span>) (n <span class="keyword">int</span>, err error)</span><br><span class="line">    Read(bs []<span class="keyword">byte</span>) (n <span class="keyword">int</span>, err error)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这两个接口在不同的包中且定义方法的次序不同，但是定义的方法列表相同。在Go语言中这两个接口并没有本质的区别。任何实现了one.ReadWriter就均实现了two.IStraem 两者的任何对象均可以相互赋值。当然接口的赋值中的方法并不要求<strong>一一对应</strong> 满足被赋值的接口中方法是赋值接口中方法的子集即可。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Writer <span class="keyword">interface</span> &#123;</span><br><span class="line">Write(buf []<span class="keyword">byte</span>) (n <span class="keyword">int</span>, err error)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例如Writer接口，只要实现了one.ReadWriter或two.IStraem均可以给Writer接口进行赋值。但是反过来是不可以的。</p><p><strong>接口查询</strong></p><p>如果想要让上面的Writer接口赋值给two.IStraem怎么办呢？就需要使用接口查询，使用接口查询查询Writer接口是否实现了two.IStream中的方法。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> file1 one.ReadWriter = <span class="built_in">new</span>(os.File)</span><br><span class="line"><span class="keyword">var</span> file2 one.Writer = file1</span><br><span class="line"><span class="keyword">if</span> file3,ok :=file2.(two.IStraem);ok&#123;</span><br><span class="line">_=file3</span><br><span class="line">fmt.Println(<span class="string">&quot;可以进行接口转换&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Go语言中可以询问接口能否转为任何的类型。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> t1,ok:=a.(<span class="keyword">type</span>);ok&#123;</span><br><span class="line">    <span class="comment">// do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然还可以进行更加直接了当的查询接口指向的对象实例的类型。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> v1 <span class="keyword">interface</span>&#123;&#125; =<span class="string">&quot;你好&quot;</span></span><br><span class="line"><span class="keyword">switch</span> v:=v1.(<span class="keyword">type</span>)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="keyword">int</span>:</span><br><span class="line">fmt.Printf(<span class="string">&quot;%d&quot;</span>,v)</span><br><span class="line"><span class="keyword">case</span> <span class="keyword">string</span>:</span><br><span class="line">fmt.Printf(<span class="string">&quot;%s\n&quot;</span>,v)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;unkonw&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>接口组合</strong></p><p>接口与结构体一样都可以进行组合。</p>]]></content>
      
      
      <categories>
          
          <category> go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go接口</title>
      <link href="/2020/09/19/Go-%E6%8E%A5%E5%8F%A3/"/>
      <url>/2020/09/19/Go-%E6%8E%A5%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<h3 id="接口">接口</h3><p>接口类型是对其他类型行为的抽象和概括，因为接口不会和特定的实现细节绑定在一起。Go语言与其他语言不同的是满足隐式实现，也就是说没有必要对给定具体类型定义所有满足的接口类型。简单的拥有一些必须的方法就足够了。</p><span id="more"></span><h4 id="接口约定">接口约定</h4><p>接口类型是一种抽象类型，不会暴露出它所代表的队形的内部值得结构和支持的基础操作的集合。也就是只知道它的方法能够干什么。</p><h4 id="接口定义">接口定义</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 接口定义</span></span><br><span class="line"><span class="keyword">type</span> Square <span class="keyword">interface</span> &#123;</span><br><span class="line"><span class="comment">// 定义计算面积的方法</span></span><br><span class="line">Area() <span class="keyword">float64</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="接口实现">接口实现</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">type</span> Rectangle <span class="keyword">struct</span> &#123;</span><br><span class="line">l, h <span class="keyword">float64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *Rectangle)</span> <span class="title">SetLang</span><span class="params">(lang <span class="keyword">float64</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> lang &lt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">&quot;数据必须大于0&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">r.l = lang</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *Rectangle)</span> <span class="title">SetHeight</span><span class="params">(height <span class="keyword">float64</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> height &lt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">&quot;数据必须大于0&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">r.h = height</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 实现接口</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *Rectangle)</span> <span class="title">Area</span><span class="params">()</span> <span class="title">float64</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> r.h * r.l</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用接口</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">GetArea</span><span class="params">(square Square)</span> <span class="title">float64</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> square.Area()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个圆</span></span><br><span class="line"><span class="keyword">type</span> Round <span class="keyword">struct</span> &#123;</span><br><span class="line">r <span class="keyword">float64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(round *Round)</span> <span class="title">setR</span><span class="params">(r <span class="keyword">float64</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> r &lt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">&quot;半径必须大于0&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">round.r = r</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(round *Round)</span> <span class="title">Area</span><span class="params">()</span> <span class="title">float64</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> math.Pi * math.Pow(round.r, <span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// 创建一个长方形对象</span></span><br><span class="line">p := <span class="built_in">new</span>(prase.Rectangle)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%T\n&quot;</span>, p)</span><br><span class="line">p.SetHeight(<span class="number">10</span>)</span><br><span class="line">p.SetLang(<span class="number">20</span>)</span><br><span class="line">area := prase.GetArea(p)</span><br><span class="line"><span class="built_in">println</span>(area)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个圆对象</span></span><br><span class="line">round := <span class="built_in">new</span>(prase.Round)</span><br><span class="line">fmt.Printf(<span class="string">&quot;%T\n&quot;</span>, round)</span><br><span class="line">round.SetR(<span class="number">12</span>)</span><br><span class="line"><span class="comment">// 实现了Square接口 同样可以传参</span></span><br><span class="line">roundArea := prase.GetArea(round)</span><br><span class="line"><span class="built_in">println</span>(roundArea)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*prase.Rectangle</span><br><span class="line">+<span class="number">2.000000e+002</span></span><br><span class="line">*prase.Round</span><br><span class="line">+<span class="number">4.523893e+002</span></span><br></pre></td></tr></table></figure><p>只要实现了接口中的全部方法就认为是实现了该接口。无论接口是否在同一个包下，是先编译还是后编译。也就是说，Go理解是否实现了接口就看这个你实现的方法与接口有没有保持一致。如果接口中的方法都实现了就认为实现了这个接口就可以转化。</p><h4 id="接口组合">接口组合</h4><p>一个接口可以是多个接口的组合形成工程新的接口</p><p>例如 定义读和写接口</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Reader <span class="keyword">interface</span> &#123;</span><br><span class="line">Reade() <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Writer <span class="keyword">interface</span> &#123;</span><br><span class="line">Write()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义读写组合的新接口</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> ReadWrite <span class="keyword">interface</span> &#123;</span><br><span class="line">Reader</span><br><span class="line">Writer</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 相当于</span></span><br><span class="line"><span class="keyword">type</span> ReadWrite <span class="keyword">interface</span> &#123;</span><br><span class="line">Reade() <span class="keyword">string</span></span><br><span class="line">Write()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为ReadWrite接口实现了Reader和Writer的接口 因此可以实现</p><p>ReadWrite和Reader、ReadWrite和Writer转换、也就是类似多态的效果。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 定义读接口</span></span><br><span class="line"><span class="keyword">type</span> Reader <span class="keyword">interface</span> &#123;</span><br><span class="line">Reade() <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义写接口</span></span><br><span class="line"><span class="keyword">type</span> Writer <span class="keyword">interface</span> &#123;</span><br><span class="line">Write(name <span class="keyword">string</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 读写接口聚合</span></span><br><span class="line"><span class="keyword">type</span> ReadWrite <span class="keyword">interface</span> &#123;</span><br><span class="line">Reader</span><br><span class="line">Writer</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个结构体</span></span><br><span class="line"><span class="keyword">type</span> Robbot <span class="keyword">struct</span> &#123;</span><br><span class="line">Name <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *Robbot)</span> <span class="title">Reade</span><span class="params">()</span> <span class="title">string</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> r.Name</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *Robbot)</span> <span class="title">Write</span><span class="params">(name <span class="keyword">string</span>)</span></span>  &#123;</span><br><span class="line">r.Name = name</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// 可以进行类似多态的转换</span></span><br><span class="line"><span class="keyword">var</span> rd prase.Writer=<span class="built_in">new</span>(prase.Robbot)</span><br><span class="line">rd.Write(<span class="string">&quot;demo&quot;</span>)</span><br><span class="line"><span class="comment">// 判断是否转换回来</span></span><br><span class="line">rd2,ok := rd.(prase.ReadWrite);</span><br><span class="line"><span class="keyword">if</span> ok &#123;</span><br><span class="line"><span class="built_in">println</span>(rd2.Reade())</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接口也可以作为值类型，使用变量进行接收。一个接口的零值的类型和值部分都是nil。</p><p>接口值可以使用==和!=进行比较 仅当都是nil或者动态类型相同且动态值类型也能进行== 判断 而且相等。</p><p>如果两个接口值得动态类型相同但是动态类型的值不可比较  这样进行比较就会失败并且抛出panic。</p><h4 id="接口是动态类型">接口是动态类型</h4><p>一个接口类型的变量varI中可以包含任意类型的值，如果需要检测它的动态类型 需要进性断言</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> v,ok:=varI.(T);ok&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果转换合法 v是T类型的值 ok是true  否则v是T类型的零值 ok为false。</p><p>类型判断接口变量的类型可以使用type-switch进行检测。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a <span class="keyword">string</span> = <span class="string">&quot;qqq&quot;</span></span><br><span class="line">testInterfaceValue(a)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">testInterfaceValue</span><span class="params">(a <span class="keyword">interface</span>&#123;&#125;)</span></span> &#123;</span><br><span class="line"><span class="keyword">switch</span> v := a.(<span class="keyword">type</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="keyword">int</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;int&quot;</span>, v)</span><br><span class="line"><span class="keyword">case</span> <span class="keyword">string</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;string&quot;</span>, v)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">fmt.Println(<span class="string">&quot;unknown&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>关于接口，下面说法正确的是（ABC）<br>A. 只要两个接口拥有相同的方法列表（次序不同不要紧），那么它们就是等价的，可以相互赋值<br>B. 如果接口A的方法列表是接口B的方法列表的子集，那么接口B可以赋值给接口A<br>C. 接口查询是否成功，要在运行期才能够确定<br>D. 接口赋值是否可行，要在运行期才能够确定 (在编译期就可以确定)</p>]]></content>
      
      
      <categories>
          
          <category> go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go函数</title>
      <link href="/2020/09/09/Go-%E5%87%BD%E6%95%B0/"/>
      <url>/2020/09/09/Go-%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="函数">函数</h3><h4 id="1、函数声明">1、函数声明</h4><p>函数声明包括 <code>函数名</code>、<code>形式参数列表</code>、<code>返回值列表</code>(可以省略)以及<code>函数体</code></p><span id="more"></span><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test</span><span class="params">(p1 type1,p2 type2...)</span><span class="params">(r1 type3,r2 type4...)</span></span>&#123;</span><br><span class="line">    <span class="comment">// 具体逻辑</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果一个函数没有==形式参数==可以不用写，如果没有==返回值==也不用写</p><p>返回值可以直接指定返回的变量</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sum01</span><span class="params">(x, y <span class="keyword">int</span>)</span><span class="params">(res <span class="keyword">int</span>)</span></span>&#123;</span><br><span class="line">    res = x+y</span><br><span class="line">   <span class="comment">// return res // 可以返回变量</span></span><br><span class="line">    <span class="keyword">return</span>  <span class="comment">// 也可以不指定返回变量</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 等价于</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sum02</span><span class="params">(x,y <span class="keyword">int</span>)</span><span class="title">int</span></span>&#123; <span class="comment">// 如果只有一个返回值且不指定返回变量的名称可以不用写</span></span><br><span class="line">    res:=x+y</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果一个函数包含了返回值列表就必须以return结尾，除非函数明显无法运行到结尾处，例如在结尾调用了panic或者函数无限循环。</p><p>函数传参是实参的拷贝，对形参的修改不会改变实参，但是如果形参是引用类型 例如指针、slice、map、function、channel等类型，实参可能由于函数简介引用被修改。</p><p>如果遇到没有函数体的函数声明，表示这个函数不是用GO实现的，这样声明定义了函数标识符。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Sin</span><span class="params">(x <span class="keyword">float64</span>)</span> <span class="title">float64</span> // 不是用<span class="title">Go</span>实现的</span></span><br></pre></td></tr></table></figure><h4 id="2、多值返回">2、多值返回</h4><p>Go语言支持多值返回，很多函数返回一个期望的返回值另一个是函数出错时的信息。语法见上。</p><h4 id="3、错误">3、错误</h4><p>对于大多数函数来说永远都不能保证一直运行成功。例如进行IO操作时会经常会面临出错的问题。通常导致失败的原因不止一种，尤其是对I/O操作来说，Go提供了一个内置的error接口。error的类型可能是 nil或者non-nil。nil意味着函数运行成功，对于non-nil的error类型，我们可以调用error的Error函数或者输出函数获得字符串类型的错误信息。</p><h5 id="3-1-错误处理策略">3.1 错误处理策略</h5><p>根据情况的不同，常用的处理方式有五种。</p><p>（1）、<strong>传播错误</strong></p><p>传播错误意味着函数中的某个子程序运行失败会导致函数整体失败。这时候需要将该错误返回给调用者用来分析导致函数出错的具体原因。</p><p>（2）、<strong>重试</strong></p><p>如果错误是偶然发生的，或者是由于不可知的问题导致的。当然在重试的时候需要限制重试的时间间隔或者重试的次数防止无限制的重试。</p><p>（3）、<strong>输出错误信息并结束程序</strong></p><p>如果发生错误后程序无法运行，就需要直接结束程序运行并输出错误信息给用户，这种策略只应在main函数中执行。对于库函数而言应该向上传递错误，除非该错误意味着程序内部包含不一致性，也就是遇到了bug，才能在库函数中结束程序。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">os.Exit(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>（4）直接输出错误信息</p><p>（5）忽略</p><h5 id="3-2-文件结尾错误">3.2 文件结尾错误</h5><p>io包保证任何文件结束都会引发同一个错误–io.EOF。通过io.EOF来判断是否读取完成。</p><h4 id="4、函数值">4、函数值</h4><p>在Go中函数被看做为第一类值，函数同其他值一样也拥有类型可以赋值给其他变量，传递给函数，从函数返回。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(x, y <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 作为变量进行赋值</span></span><br><span class="line"><span class="keyword">var</span> addFunc = add</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数作为参数作为参数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">AddFun</span><span class="params">(add <span class="keyword">func</span>(<span class="keyword">int</span>, <span class="keyword">int</span>)</span> <span class="title">int</span>, <span class="title">x</span>, <span class="title">y</span> <span class="title">int</span>) <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> add(x, y)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">mkSub</span><span class="params">()</span> <span class="title">func</span><span class="params">(x, y <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> x - y</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数类型的零值为nil 调用值为nil的函数会引起panic错误。</p><p>函数可以与nil进行比较，但是函数之间不能进行比较，也不能作为map的key。</p><h4 id="5、匿名函数">5、匿名函数</h4><p>拥有函数名的函数只能在包级的语法块中被声明，通过函数字面量我们可以饶过这一限制，在任一和表达式中表示这一函数值。函数字面量的语法和函数声明相似，区别在于func关键字后面没有函数名。函数值字面量是一种表达式，它的值被称为匿名函数。</p><p>函数字面量允许我们在使用函数时再去定义它,通过这种技巧我们可以改写string.Map的调用。</p><h5 id="5-1、捕获迭代的变量">5.1、捕获迭代的变量</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test21</span><span class="params">()</span></span> &#123;</span><br><span class="line">rmdirs := <span class="built_in">make</span>([]<span class="keyword">string</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _, dir := <span class="keyword">range</span> demoDirs() &#123;</span><br><span class="line"><span class="built_in">println</span>(&amp;dir) <span class="comment">// 地址是相同的</span></span><br><span class="line">rmdirs = <span class="built_in">append</span>(rmdirs, dir)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6、可变参数">6、可变参数</h4><p>参数数量可变的参数被称为可变参数，典型的例子就是fmt.Println() 函数，可以接受任意多个参数。在声明可变参数时，需要在参数列表的最后一个参数类型前加上<code>...</code>表示该函数会接受任意数量该类型的参数。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sum</span><span class="params">(vals...<span class="keyword">int</span>)</span><span class="title">int</span></span>&#123;</span><br><span class="line">    total:=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> _,val:<span class="keyword">range</span> vals&#123;</span><br><span class="line">        total+=val</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> total</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>虽然在可变参数函数内部，…int型参数的行为看起来很像切片类型，但在实际上，可变参数函数和切片作为参数的函数时不同的。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f</span><span class="params">(vals...<span class="keyword">int</span>)</span></span>&#123;&#125; <span class="comment">// type func(...int)</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">g</span><span class="params">(vals []<span class="keyword">int</span>])</span></span>&#123;&#125; <span class="comment">// type func([]int)</span></span><br></pre></td></tr></table></figure><p>如果参数是interface{} 类型表示可以接受任意类型。</p><h4 id="7、defer函数">7、defer函数</h4><p>在普通的函数或者回复前加上defer关键字就完成了defer的语法。当defer语句执行时，跟在defer后面的函数会延迟执行，直到包含该defer语句的函数执行完毕后defer后面的函数才会别执行，不论包含defer语句的函数时通过return正常结束还是由于panic异常导致的结束，可以在一个函数中执行多条defer语句，它们的==执行顺序和声明顺序相反==</p><p>defer语句通常用于处理成对的操作，例如 打开、关闭、连接、断开等。</p><p><strong>for循环中使用defer的注意事项</strong></p><p>在循环题中使用defer语句需要特别注意，因为只有函数执行完毕之后，这些被延迟的函数才会被执行。</p><p>下面的代码会导致系统化的文件描述符被耗尽，因为在所有文件都被处理之前没有文件会被关闭。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> _,fliename <span class="keyword">range</span> filenames&#123;</span><br><span class="line">    f,err:=os.Open(filename)</span><br><span class="line">    <span class="keyword">if</span> err!=<span class="literal">nil</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">defer</span> f.Close() <span class="comment">// 在循环处理完所有的文件之前不会调用</span></span><br><span class="line">    ... </span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解决方法：</p><p>将循环体中的defer语句移至另一个函数，每次循环时调用这个函数。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> _,filename :=<span class="keyword">range</span> filenames&#123;</span><br><span class="line">    <span class="keyword">if</span> err:=doFile(filename);err!=<span class="literal">nil</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">doFile</span><span class="params">(filename <span class="keyword">string</span>)</span><span class="title">error</span></span>&#123;</span><br><span class="line">    f,err:=os.Open(filename)</span><br><span class="line">    <span class="keyword">if</span> err!=<span class="literal">nil</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> err</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">defer</span> f.Close()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8、Panic异常">8、Panic异常</h4><p>Go的类型系统会在编译时捕获很多错误但是有些错误只能在运行时进行检查，比如数组访问越界、空指针异常等，这些运行时会引起panic异常。一般而言当发生panic异常发生时程序会中断运行并立即执行在该goroutine中被延迟的函数（defer机制）术后程序崩溃后并输出日志信息。</p><p>并不是所有的panic异常都来自运行时，直接调用内置的panic函数也会引起panic异常，panic函数接受任何只作为参数。当某些不应该发生的场景发生时应该调用panic进行中断。</p><p>虽然Go的panic机制类似于其他语言的异常但是panic使用场景有一些不同。由于panic会引起程序的崩溃，因此panic一把用于严重的程序错误。对于大部分的漏洞应该使用Go提供的错误机制而不是panic。</p><h4 id="9、recover捕获异常">9、recover捕获异常</h4><p>一般来说不应该对panic异常进行处理，但有时需要在异常中进行恢复例如在web服务器遇到不可预料的严重问题时，在崩溃前应该将所有连接关闭，如果不做任何处理会使得客户端一直处理等待状态。</p><p>如果再defer函数中调用了内置函数recover并且定义该defer语句的函数发生了panic异常recover会使程序从panic中回复并返回并返回panic value。导致panic异常的函数不会继续运行但是能正常价返回。在未发生panic时调用recover，recover会返回nil。</p><p>不能不加区分的恢复所有panic异常。不应该回复其他包引起的panic，公共API应该将函数作的运行失败作为error进行返回而不是panic。同样的一夜不应该回复一个由其他人开发的函数引起的panic，比如调用这传入的回调函数因为你无法确保这样做是安全的。</p><p>关于函数返回值的错误设计，下面说法正确的是（ABCD）<br>A. 如果失败原因只有一个，则返回bool<br>B. 如果失败原因超过一个，则返回error<br>C. 如果没有失败原因，则不返回bool或error<br>D. 如果重试几次可以避免失败，则不要立即返回bool或error</p><p>关于异常设计，下面说法正确的是（ABD）<br>A. 在程序开发阶段，坚持速错，让程序异常崩溃<br>B. 在程序部署后，应恢复异常避免程序终止<br>C. 一切皆错误，不用进行异常设计<br>D. 对于不应该出现的分支，使用异常处理</p><p>关于异常的触发，下面说法正确的是（ABCD）<br>A. 空指针解析<br>B. 下标越界<br>C. 除数为0<br>D. 调用panic函数</p><p>关于cap函数的适用类型，下面说法正确的是（ABCD）<br>A. array<br>B. slice<br>C. map<br>D. channel</p>]]></content>
      
      
      <categories>
          
          <category> go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go复合数据类型</title>
      <link href="/2020/09/07/Go-%E5%A4%8D%E5%90%88%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2020/09/07/Go-%E5%A4%8D%E5%90%88%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="复合数据类型">复合数据类型</h3><p>复合数据类型包括：数组，slice、map和struct。</p><p>数组是同构元素组成的、结构体是异构元素组成的。数组和结构体具有固定的内存大小。slice和map是动态的。</p><span id="more"></span><h4 id="1、数组">1、数组</h4><p>数组是一个由固定大小的同一类型的元素组成的序列，一个数组可以由0-多个元素组成。与之对应的slice可以动态的增长和收缩序列。</p><h5 id="1-1、创建数组">1.1、创建数组</h5><p><code>var 变量名[数组长度]数据类型</code> 在没有显式初始化的情况下每个元素都会初始化为元素对应的零值</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a[<span class="number">3</span>]<span class="keyword">int</span> <span class="comment">//定义一个长度为3的int类型的数组 默认初始化为0</span></span><br></pre></td></tr></table></figure><h5 id="1-2、获取数组的长度">1.2、获取数组的长度</h5><p>使用内置的<code>len</code>函数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">len</span>(a) <span class="comment">// 获取数组a的长度</span></span><br></pre></td></tr></table></figure><h5 id="1-3-显式初始化">1.3 显式初始化</h5><p>显示初始化对应位置的数据为显示初始化的值，没有进行显示初始化的为对应类型的零值。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a[<span class="number">3</span>]<span class="keyword">int</span> =[<span class="number">3</span>]<span class="keyword">int</span>&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125; <span class="comment">// 对应的a[0]=1 a[1]=2 a[2]=3</span></span><br><span class="line"><span class="keyword">var</span> b[<span class="number">3</span>]<span class="keyword">int</span> = [<span class="number">3</span>]<span class="keyword">int</span>&#123;<span class="number">1</span>,<span class="number">2</span>&#125; <span class="comment">// 对应的b[0]=1 b[1]=2  b[2]= 0 b[2] 没有对应的显式初始化值 初始化为int的0值</span></span><br></pre></td></tr></table></figure><h5 id="1-4、初始化推导长度">1.4、初始化推导长度</h5><p>如果出现数组的长度使用<code>...</code>进行代替 则表示根据初始化值的个数作为数组的长度</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c:=[...]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125; <span class="comment">// c的长度为3</span></span><br></pre></td></tr></table></figure><h5 id="1-5-索引初始化">1.5 索引初始化</h5><p>可以指定一个索引和对应值列表进行初始化</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Currency <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义索引</span></span><br><span class="line"><span class="keyword">const</span>(</span><br><span class="line">USD Currency=<span class="literal">iota</span> <span class="comment">// 美元</span></span><br><span class="line">    EUR <span class="comment">// 欧元</span></span><br><span class="line">    GBP <span class="comment">// 英镑</span></span><br><span class="line">    RMB <span class="comment">// 人名币</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">symbol:=[...]&#123;USD:<span class="string">&quot;$&quot;</span>,EUR:<span class="string">&quot;€&quot;</span>,GBP:<span class="string">&quot;￡&quot;</span>,RMB:<span class="string">&quot;￥&quot;</span>&#125;</span><br><span class="line">fmt.Println(symbol[RMB])<span class="comment">// ￥</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="1-6-指定初始化位置">1.6 指定初始化位置</h5><p>初始化索引的位置顺序是无关紧要的，而且没有用到的索引可以省略。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r:=[...]intP&#123;<span class="number">99</span>:<span class="number">-1</span>&#125; <span class="comment">// r包含了100个元素最后一个元素初始化为-1 其他默认初始化为0</span></span><br></pre></td></tr></table></figure><h5 id="1-7-数据比较">1.7 数据比较</h5><p>如果两个数组中元素一一相等那么这两个数组是相等的。可以使用<code>==</code>进行判断。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a:=[<span class="number">2</span>]<span class="keyword">int</span>&#123;<span class="number">1</span>,<span class="number">2</span>&#125;</span><br><span class="line">b:=[...]<span class="keyword">int</span>&#123;<span class="number">1</span>,<span class="number">2</span>&#125;</span><br><span class="line">c:=[<span class="number">2</span>]<span class="keyword">int</span>&#123;<span class="number">1</span>,<span class="number">3</span>&#125;</span><br><span class="line">fmt.Println(a==b)<span class="comment">//true</span></span><br><span class="line">fmt.Println(a==c)<span class="comment">//false</span></span><br><span class="line">fmt.Println(b==c)<span class="comment">//false</span></span><br></pre></td></tr></table></figure><p>数组长度和类型都相同的元素是同一个类型，不同长度或者类型的数组不是同一个类型，不能进行比较。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a:=[<span class="number">2</span>]<span class="keyword">int</span>&#123;<span class="number">1</span>,<span class="number">2</span>&#125;</span><br><span class="line">b:=[<span class="number">2</span>]<span class="keyword">float32</span>&#123;<span class="number">1.0</span>,<span class="number">2.0</span>&#125;</span><br><span class="line">c:=[<span class="number">3</span>]<span class="keyword">int</span>&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;</span><br><span class="line">fmt.Println(a==b)<span class="comment">//compile error</span></span><br><span class="line">fmt.Println(a==c)<span class="comment">// compile error</span></span><br></pre></td></tr></table></figure><h5 id="1-8-数组作为参数">1.8 数组作为参数</h5><p>在Go语言中函数参数变量接收的是一个复制的副本，并不是原始调用的变量。因此对一个函数传递大数据是非常低效的，而且在函数中对数组的修改都是修改在复制的数组上不会对原始的数组产生任何影响。</p><p>如果想对原始数组进行修改，可以显式传递衣蛾数组指针，这样就能直接反馈给调用者。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">zero</span><span class="params">(ptr *[32]<span class="keyword">int</span>)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> i:=<span class="keyword">range</span> ptr&#123;</span><br><span class="line">        ptr[i] = <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2、slice">2、slice</h4><p>Slice(切片)代表变长的序列，序列中每个元素都有相同的类型。一个slice类型一般写作[]T 其中T代表slice中元素的类型。slice与数组很像但是没有固定长度。</p><p>slice与数组之间有着紧密的联系，slice底层引用了一个数组对象。slice提供了访问数组子序列（包括全部）的功能。</p><p>组成:</p><p>指针、长度、容量。</p><p>指针指向第一个slice元素对应的底层数组的元素地址，但是不一定是底层数组的第一个元素。长度对应slice元素的个数，长度不能超过容量。容量一般是slice从看是位置到底层数组结尾的位置。内置的len和cap分别返回slice的长度和容量。</p><p>多个slice之间可以共享底层的数据并且引用的数组部分区间可能会重叠。例如对slice进行切片获取新的slice 底层的数据是共享的</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test06</span><span class="params">()</span></span> &#123;</span><br><span class="line">months := [...]<span class="keyword">string</span>&#123;</span><br><span class="line"><span class="string">&quot;&quot;</span>,</span><br><span class="line"><span class="string">&quot;1月&quot;</span>,</span><br><span class="line"><span class="string">&quot;2月&quot;</span>,</span><br><span class="line"><span class="string">&quot;3月&quot;</span>,</span><br><span class="line"><span class="string">&quot;4月&quot;</span>,</span><br><span class="line"><span class="string">&quot;5月&quot;</span>,</span><br><span class="line"><span class="string">&quot;6月&quot;</span>,</span><br><span class="line"><span class="string">&quot;7月&quot;</span>,</span><br><span class="line"><span class="string">&quot;8月&quot;</span>,</span><br><span class="line"><span class="string">&quot;9月&quot;</span>,</span><br><span class="line"><span class="string">&quot;10月&quot;</span>,</span><br><span class="line"><span class="string">&quot;11月&quot;</span>,</span><br><span class="line"><span class="string">&quot;12月&quot;</span>,</span><br><span class="line">&#125;</span><br><span class="line">q2 := months[<span class="number">4</span>:<span class="number">7</span>]</span><br><span class="line">summer := months[<span class="number">6</span>:<span class="number">9</span>]</span><br><span class="line">fmt.Println(&amp;months[<span class="number">6</span>])           <span class="comment">// 0xc000040af0</span></span><br><span class="line">fmt.Println(&amp;q2[<span class="number">2</span>])               <span class="comment">//0xc000040af0</span></span><br><span class="line">fmt.Println(&amp;summer[<span class="number">0</span>])           <span class="comment">//0xc000040af0</span></span><br><span class="line">fmt.Println(&amp;q2[<span class="number">2</span>] == &amp;summer[<span class="number">0</span>]) <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>容量一般是slice<strong>从看是位置到底层数组结尾的位置</strong> 使用cap查看</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(<span class="built_in">cap</span>(months)) <span class="comment">// 13</span></span><br><span class="line">fmt.Println(<span class="built_in">cap</span>(summer)) <span class="comment">// 7</span></span><br><span class="line">fmt.Println(<span class="built_in">cap</span>(q2)) <span class="comment">// 9</span></span><br></pre></td></tr></table></figure><p>months是分配的13个数组大小的空间 summer从6月开始 也就是从底层数组为6开始 len(底层数组)-6 = 13-6 = 7 q2同理。</p><p>如果一个切片的超出cap(s) 的上限【s为被切骗的slice】，就会导致一个panic异常</p><p>长度是切片中元素存在个数的数量。超出len(s)意味着扩展了slice，因为新的slice长度会变大【这个扩展的长度是在slice切片的基础上进行的 不能超过cap(s)的大小】</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fmt.<span class="constructor">Println(<span class="params">len</span>(<span class="params">months</span>)</span>) <span class="comment">// 13</span></span><br><span class="line">fmt.<span class="constructor">Println(<span class="params">len</span>(<span class="params">summer</span>)</span>) <span class="comment">// 3</span></span><br><span class="line">fmt.<span class="constructor">Println(<span class="params">len</span>(<span class="params">q2</span>)</span>) <span class="comment">// 3</span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">s1 := summer[:<span class="number">5</span>]</span><br><span class="line"><span class="keyword">for</span> i, i2 := <span class="keyword">range</span> s1 &#123;</span><br><span class="line">fmt.Println(i,<span class="string">&quot;========&quot;</span>,i2)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">0 ======== 6月</span></span><br><span class="line"><span class="comment">1 ======== 7月</span></span><br><span class="line"><span class="comment">2 ======== 8月</span></span><br><span class="line"><span class="comment">3 ======== 9月</span></span><br><span class="line"><span class="comment">4 ======== 10月</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>结果比来的summer还要大 引用了原始的months里的数据，扩大了slice</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">s1 := summer[:<span class="number">10</span>] <span class="comment">// 大于cap(summer)=7</span></span><br><span class="line"><span class="comment">// panic: runtime error: slice bounds out of range [:10] with capacity 7</span></span><br><span class="line"><span class="keyword">for</span> i, i2 := <span class="keyword">range</span> s1 &#123;</span><br><span class="line">fmt.Println(i,<span class="string">&quot;========&quot;</span>,i2)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>slice切片直接修改的是底层的共享数据</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">summer[<span class="number">0</span>] = <span class="string">&quot;我修改了&quot;</span></span><br><span class="line"><span class="keyword">for</span> i, i2 := <span class="keyword">range</span> months &#123;</span><br><span class="line">fmt.Println(i,<span class="string">&quot;========&quot;</span>,i2)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">0 ========</span></span><br><span class="line"><span class="comment">1 ======== 1月</span></span><br><span class="line"><span class="comment">2 ======== 2月</span></span><br><span class="line"><span class="comment">3 ======== 3月</span></span><br><span class="line"><span class="comment">4 ======== 4月</span></span><br><span class="line"><span class="comment">5 ======== 5月</span></span><br><span class="line"><span class="comment">6 ======== 我修改了</span></span><br><span class="line"><span class="comment">7 ======== 7月</span></span><br><span class="line"><span class="comment">8 ======== 8月</span></span><br><span class="line"><span class="comment">9 ======== 9月</span></span><br><span class="line"><span class="comment">10 ======== 10月</span></span><br><span class="line"><span class="comment">11 ======== 11月</span></span><br><span class="line"><span class="comment">12 ======== 12月</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>和数组不同的是slice之间不能进行比较，不过可以使用bytes.Equal韩家墅进行判断两个字节型的是否相等 其他类型必须展开进行逐个元素的比较。唯一合法的比较是nil</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> s==<span class="literal">nil</span>&#123;...&#125;</span><br></pre></td></tr></table></figure><p>但是如果需要判断一个slice是否为空应该使用长度是否为0进行判断而不是用nil。</p><h5 id="2-1、make函数创建slice">2.1、make函数创建slice</h5><p>内置的make函数可以创建一个指定元素类型、长度和容量的slice。容量部分可以省略，省略的情况下容量等于长度。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">make</span>([]T,<span class="built_in">len</span>)</span><br><span class="line"><span class="built_in">make</span>([]T,<span class="built_in">len</span>,<span class="built_in">cap</span>)</span><br></pre></td></tr></table></figure><h5 id="2-2-append函数追加元素">2.2 append函数追加元素</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">s:=<span class="built_in">make</span>([]<span class="keyword">int</span>,<span class="number">3</span>)</span><br><span class="line">s = <span class="built_in">append</span>(s, <span class="number">4</span>)</span><br><span class="line"><span class="keyword">for</span> i, i2 := <span class="keyword">range</span> s &#123;</span><br><span class="line">fmt.Println(i, <span class="string">&quot;========&quot;</span>, i2)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">0 ======== 0</span></span><br><span class="line"><span class="comment">1 ======== 0</span></span><br><span class="line"><span class="comment">2 ======== 0</span></span><br><span class="line"><span class="comment">3 ======== 4</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>追加元素会在之前的基础上进行扩容。</p><p>每次扩容时直接翻倍。</p><h4 id="3、map">3、map</h4><p>在Go语言中一个map就是一个哈希表的引用，map类型可以写作map[K]V,map中所有的key都是相同的类型且必须支持==操作。V对应的value数据没有任何限制。</p><h5 id="3-1、创建map">3.1、创建map</h5><ul><li>make创建map</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ages:=<span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>)</span><br></pre></td></tr></table></figure><ul><li>字面量创建</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ages:=<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>&#123;</span><br><span class="line">    <span class="string">&quot;alice&quot;</span>: <span class="number">31</span>,</span><br><span class="line">    <span class="string">&quot;charlie&quot;</span>: <span class="number">34</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>创建空map</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ages:=<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>&#123;&#125;</span><br></pre></td></tr></table></figure><h5 id="3-2-访问">3.2 访问</h5><p>通过key进行访问</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(ages[<span class="string">&quot;alice&quot;</span>]) <span class="comment">//31</span></span><br></pre></td></tr></table></figure><h5 id="3-3-删除">3.3 删除</h5><p>使用内置的delete函数删除</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">delete</span>(ages,<span class="string">&quot;alice&quot;</span>) <span class="comment">// 移除alice</span></span><br></pre></td></tr></table></figure><p>上述的操作都是安全的，即使找不到元素会返回value类型对应的零值。</p><p>支持赋值语句</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ages[<span class="string">&quot;bob&quot;</span>]+=<span class="number">1</span></span><br><span class="line">ages[<span class="string">&quot;bob&quot;</span>]++</span><br></pre></td></tr></table></figure><p>但是map中的元素并不是一个变量，无法获取地址</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;ages[<span class="string">&quot;bob&quot;</span>] <span class="comment">// compile error</span></span><br></pre></td></tr></table></figure><p>禁止map元素取地址的原因是随着map的增大 map可能会重新分配空间，从而导致之前的地址无效。</p><h5 id="3-4-遍历">3.4 遍历</h5><p>使用for range进行遍历</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> k,v <span class="keyword">range</span> ages&#123;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>map的迭代顺序是不确定的。如果需要按照顺序进行遍历的话 可以先将key存入一个slice进行排序后再通过key获取value</p><p>map类型的零值是nil，也就是没有引用任何哈希表。</p><p>map在未进行初始化的时候不能进行插入操作，会引发panic错误</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> m <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span></span><br><span class="line">fmt.Println(m == <span class="literal">nil</span>) <span class="comment">// true</span></span><br><span class="line"><span class="comment">//m[&quot;a&quot;]=1 // panic</span></span><br><span class="line">ages:=<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>&#123;&#125;</span><br><span class="line">fmt.Println(ages == <span class="literal">nil</span>) <span class="comment">// false</span></span><br><span class="line">ages[<span class="string">&quot;na&quot;</span>]=<span class="number">10</span></span><br><span class="line">fmt.Println(ages)</span><br></pre></td></tr></table></figure><h5 id="3-5-判断key是否存在">3.5 判断key是否存在</h5><p>为了区分返回的值是结果为0 还是key不存在返回的0值，go会返回一个结果值和一个状态值,利用状态值进行判断是否存在值</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">age,ok = ages[<span class="string">&quot;blob&quot;</span>]</span><br><span class="line"><span class="keyword">if</span> !ok&#123;</span><br><span class="line">    <span class="comment">// key不存在</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>和slice一样map也不能直接进行==的比较，唯一例外的是和nil进行比较。如果要判断两个map是否相同 需要遍历进行实现。</p><h4 id="4、结构体">4、结构体</h4><p>结构体是一种聚合的数据类型，是由0-N个任意类型的值聚合的实体，每个值称为结构体的成员。</p><h5 id="4-1、结构体声明">4.1、结构体声明</h5><p>声明一个学生结构体 有姓名、年龄、成绩三个成员。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Student <span class="keyword">struct</span> &#123;</span><br><span class="line">StudentName <span class="keyword">string</span></span><br><span class="line">Age         <span class="keyword">int</span></span><br><span class="line">Score       <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> stu1 Student <span class="comment">// 声明一个类型为Student的stu1变量</span></span><br></pre></td></tr></table></figure><p>可以通过点操作符进行访问并进行赋值</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> stu1 Student</span><br><span class="line">stu1.StudentName = <span class="string">&quot;张三&quot;</span></span><br><span class="line">stu1.Age = <span class="number">10</span></span><br><span class="line">stu1.Score = <span class="number">99</span></span><br><span class="line"><span class="comment">// 也可以声明时进行初始化赋值</span></span><br><span class="line">stu := Student&#123;<span class="string">&quot;张三&quot;</span>, <span class="number">10</span>, <span class="number">100</span>&#125;</span><br></pre></td></tr></table></figure><p>也可以对成员进行取地址然后通过指针进行访问</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sc := &amp;stu.Score</span><br><span class="line">fmt.Println(sc,<span class="string">&quot;====&quot;</span>,*sc)</span><br><span class="line"><span class="comment">// 0xc0000044d8 ==== 100</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>结构体成员的顺序不同的话就是不同的类型，例如交换Age和Score就是不同的类型了。</p><h5 id="4-2-成员可见性">4.2 成员可见性</h5><p>如果一耳光结构体成员的名字是大写开头的就是可导出的，也就是可以用点符号<code>.</code>进行操作，否则就不能进行导出，一个结构体中可以同时包含导出和不可导出的成员。</p><p>结构体的成员也可以是一个结构体。但是一个命名为S的结构体不能包含S类型的成员，但是可以包含指针类型为<code>*S</code>的指针成员，这可以让我们创建递归的数据结构例如、树或者链表。</p><p>定义一个二叉树</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> tree <span class="keyword">struct</span>&#123;</span><br><span class="line">value <span class="keyword">int</span></span><br><span class="line">left,right *tree</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4-3-函数传参">4.3 函数传参</h5><p>由于Go语言是值传递，因此如果需要修改就必须传递指针。</p><h5 id="4-4-结构体比较">4.4 结构体比较</h5><p>如果结构体的==全部成员==都是可以比较的，那么结构体也是可以比较的。</p><h5 id="4-5-匿名成员">4.5 匿名成员</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Point <span class="keyword">struct</span> &#123;</span><br><span class="line">Radio <span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Wheel <span class="keyword">struct</span> &#123;</span><br><span class="line">Point <span class="comment">// 匿名嵌入 直接点操作Point里面的成员</span></span><br><span class="line">name <span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> w Wheel</span><br><span class="line">w.Radio=<span class="number">3</span> <span class="comment">//直接操作Point内部的Radio成员 无需点Ponint</span></span><br><span class="line">w.name = <span class="string">&quot;wheel&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5、JSON">5、JSON</h4><p>在GO语言中对JSON、XML、ASN.1等标准格式的编码和解码都有良好的支持。JSON对象可以和map与结构体进行转换。</p><h5 id="5-1、结构体转JSON">5.1、结构体转JSON</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Movie <span class="keyword">struct</span> &#123;</span><br><span class="line">Title  <span class="keyword">string</span></span><br><span class="line">Year   <span class="keyword">int</span>  <span class="string">`json:&quot;released&quot;`</span></span><br><span class="line">Color  <span class="keyword">bool</span> <span class="string">`json:&quot;color,omitempty&quot;`</span></span><br><span class="line">Actors []<span class="keyword">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> movies = []Movie&#123;</span><br><span class="line">&#123;Title: <span class="string">&quot;Casablanca&quot;</span>, Year: <span class="number">1942</span>, Color: <span class="literal">false</span>,</span><br><span class="line">Actors: []<span class="keyword">string</span>&#123;<span class="string">&quot;Humphrey Bogart&quot;</span>, <span class="string">&quot;Ingrid Bergman&quot;</span>&#125;&#125;,</span><br><span class="line">&#123;Title: <span class="string">&quot;Cool Hand Luke&quot;</span>, Year: <span class="number">1967</span>, Color: <span class="literal">true</span>,</span><br><span class="line">Actors: []<span class="keyword">string</span>&#123;<span class="string">&quot;Paul Newman&quot;</span>&#125;&#125;,</span><br><span class="line">&#123;Title: <span class="string">&quot;Bullitt&quot;</span>, Year: <span class="number">1968</span>, Color: <span class="literal">true</span>,</span><br><span class="line">Actors: []<span class="keyword">string</span>&#123;<span class="string">&quot;Steve McQueen&quot;</span>, <span class="string">&quot;Jacqueline Bisset&quot;</span>&#125;&#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//data, err := json.Marshal(movies)  // 不进行格式化</span></span><br><span class="line">data, err := json.MarshalIndent(movies,<span class="string">&quot;&quot;</span>,<span class="string">&quot;\t&quot;</span>) <span class="comment">// 进行格式化</span></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;JSON marshaing failed %s&quot;</span>, err)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(<span class="keyword">string</span>(data))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用tag可以改变key的值</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="attr">&quot;Title&quot;</span>: <span class="string">&quot;Casablanca&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;released&quot;</span>: <span class="number">1942</span>,</span><br><span class="line">                <span class="attr">&quot;Actors&quot;</span>: [</span><br><span class="line">                        <span class="string">&quot;Humphrey Bogart&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;Ingrid Bergman&quot;</span></span><br><span class="line">                ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="attr">&quot;Title&quot;</span>: <span class="string">&quot;Cool Hand Luke&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;released&quot;</span>: <span class="number">1967</span>,</span><br><span class="line">                <span class="attr">&quot;color&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">&quot;Actors&quot;</span>: [</span><br><span class="line">                        <span class="string">&quot;Paul Newman&quot;</span></span><br><span class="line">                ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">                <span class="attr">&quot;Title&quot;</span>: <span class="string">&quot;Bullitt&quot;</span>,</span><br><span class="line">                <span class="attr">&quot;released&quot;</span>: <span class="number">1968</span>,</span><br><span class="line">                <span class="attr">&quot;color&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">&quot;Actors&quot;</span>: [</span><br><span class="line">                        <span class="string">&quot;Steve McQueen&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;Jacqueline Bisset&quot;</span></span><br><span class="line">                ]</span><br><span class="line">        &#125;</span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>omitempty选项表示当Go语言结构体成员为空或者零值时不产生JSON对象。</p><h5 id="5-2-JOSN转结构体">5.2 JOSN转结构体</h5><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">data:=<span class="string">`[</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">                &quot;Title&quot;: &quot;Casablanca&quot;,</span></span><br><span class="line"><span class="string">                &quot;released&quot;: 1942,</span></span><br><span class="line"><span class="string">                &quot;Actors&quot;: [</span></span><br><span class="line"><span class="string">                        &quot;Humphrey Bogart&quot;,</span></span><br><span class="line"><span class="string">                        &quot;Ingrid Bergman&quot;</span></span><br><span class="line"><span class="string">                ]</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">                &quot;Title&quot;: &quot;Cool Hand Luke&quot;,</span></span><br><span class="line"><span class="string">                &quot;released&quot;: 1967,</span></span><br><span class="line"><span class="string">                &quot;color&quot;: true,</span></span><br><span class="line"><span class="string">                &quot;Actors&quot;: [</span></span><br><span class="line"><span class="string">                        &quot;Paul Newman&quot;</span></span><br><span class="line"><span class="string">                ]</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">                &quot;Title&quot;: &quot;Bullitt&quot;,</span></span><br><span class="line"><span class="string">                &quot;released&quot;: 1968,</span></span><br><span class="line"><span class="string">                &quot;color&quot;: true,</span></span><br><span class="line"><span class="string">                &quot;Actors&quot;: [</span></span><br><span class="line"><span class="string">                        &quot;Steve McQueen&quot;,</span></span><br><span class="line"><span class="string">                        &quot;Jacqueline Bisset&quot;</span></span><br><span class="line"><span class="string">                ]</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">]</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line">err := json.Unmarshal([]<span class="keyword">byte</span>(data), &amp;movies)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Fatalf(<span class="string">&quot;err %s&quot;</span>,err)</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">fmt.Println(movies)</span><br><span class="line">fmt.Println(movies[<span class="number">0</span>].Title)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>关于slice或map操作，下面正确的是（ACD）</p><p>A.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> s []<span class="keyword">int</span></span><br><span class="line">s =<span class="built_in">append</span>(s,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>B.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mmap[<span class="keyword">string</span>]<span class="keyword">int</span></span><br><span class="line">m[<span class="string">&quot;one&quot;</span>]= <span class="number">1</span></span><br></pre></td></tr></table></figure><p>C.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> s[]<span class="keyword">int</span></span><br><span class="line">s =<span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">0</span>)</span><br><span class="line">s =<span class="built_in">append</span>(s,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>D.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mmap[<span class="keyword">string</span>]<span class="keyword">int</span></span><br><span class="line">m =<span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">int</span>)</span><br><span class="line">m[<span class="string">&quot;one&quot;</span>]= <span class="number">1</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go方法</title>
      <link href="/2020/09/06/Go-%E6%96%B9%E6%B3%95/"/>
      <url>/2020/09/06/Go-%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h3 id="方法">方法</h3><h4 id="1、方法声明">1、方法声明</h4><p>在函数声明时，在名字前面加上一个变量 就变成了一个方法。这个附加的参数会讲该函数附加到这种类型上，即相当于定义了一个独占的方法。</p><p>下面通过一个两点之间计算欧式距离的方法 来比较普通的函数和方法之间的区别</p><span id="more"></span><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;math&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Point <span class="keyword">struct</span> &#123;</span><br><span class="line">x, y <span class="keyword">float64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算欧式距离</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Distance</span><span class="params">(p1, p2 Point)</span> <span class="params">(distance <span class="keyword">float64</span>)</span></span> &#123;</span><br><span class="line"><span class="comment">//dis = sqrt((x1-x2)^2+(y1-y2)^2)</span></span><br><span class="line">x := math.Pow(p1.x-p2.x, <span class="number">2</span>)</span><br><span class="line">y := math.Pow(p1.y-p2.y, <span class="number">2</span>)</span><br><span class="line">distance = math.Sqrt((x + y))</span><br><span class="line"><span class="keyword">return</span> distance</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 相对比于普通函数前面增加了函数接受者的类型</span></span><br><span class="line"><span class="comment">// 可与普通函数重名</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p Point)</span> <span class="title">Distance</span><span class="params">(q Point)</span> <span class="params">(distance <span class="keyword">float64</span>)</span></span> &#123;</span><br><span class="line">x := math.Pow(p.x-q.x, <span class="number">2</span>)</span><br><span class="line">y := math.Pow(p.y-q.y, <span class="number">2</span>)</span><br><span class="line">distance = math.Sqrt(x + y)</span><br><span class="line"><span class="keyword">return</span> distance</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">p1 := Point&#123;x: <span class="number">4</span>, y: <span class="number">0</span>&#125;</span><br><span class="line">p2 := Point&#123;x: <span class="number">0</span>, y: <span class="number">3</span>&#125;</span><br><span class="line"><span class="built_in">println</span>(Distance(p1, p2)) <span class="comment">// 5.000000e+000</span></span><br><span class="line"><span class="built_in">println</span>(p1.Distance(p2))  <span class="comment">// 5.000000e+000</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面于函数不同的是在函数名前面增加了方法接收器，在Go语言中不会向其他面向对象语言那样使用this或者self作为接收器而是可以自定义选择接收器的名字。命名建议为其使用类型的第一个字母。</p><p><code>p1.Distance(p2)</code>称为方法选择器。</p><h4 id="2、基于指针对象的方法">2、基于指针对象的方法</h4><p>当调用一个函数时会对每一个参数进行值拷贝，如果一个函数需要更新变量或者函数中的参数实在太大可以通过使用指针避免进行这种默认的拷贝。对应到我们这里更新接收器的对象方法，当这个接受者变量本身比较大时，我们就可以使用其指针而不是对象声明方法。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 给予指针对象的方法 传递普通参数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Point)</span> <span class="title">Distance2</span><span class="params">(q Point)</span> <span class="params">(distance <span class="keyword">float64</span>)</span></span> &#123;</span><br><span class="line">x := math.Pow(p.x-q.x, <span class="number">2</span>)</span><br><span class="line">y := math.Pow(p.y-q.y, <span class="number">2</span>)</span><br><span class="line">distance = math.Sqrt(x + y)</span><br><span class="line"><span class="keyword">return</span> distance</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 基于指针对象的方法 传递指针</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Point)</span> <span class="title">Distance3</span><span class="params">(q *Point)</span> <span class="params">(distance <span class="keyword">float64</span>)</span></span> &#123;</span><br><span class="line">x := math.Pow(p.x-q.x, <span class="number">2</span>)</span><br><span class="line">y := math.Pow(p.y-q.y, <span class="number">2</span>)</span><br><span class="line">distance = math.Sqrt(x + y)</span><br><span class="line"><span class="keyword">return</span> distance</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="NIl也是合法的接收器类型">NIl也是合法的接收器类型</h6><p>就像函数允许nil指针作为参数一样，方法理论上也可以用nil指针作为接收器尤其当nil对于对象来说是合法的零值时，例如map或者slice。</p><p>例如</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义一个链表</span></span><br><span class="line"><span class="keyword">type</span> IntList <span class="keyword">struct</span>&#123;</span><br><span class="line">    Value <span class="keyword">int</span></span><br><span class="line">    Tail *IntList</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//求链表和</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(list *IntList)</span><span class="title">Sum</span><span class="params">()</span><span class="title">int</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> list==<span class="literal">nil</span>&#123; <span class="comment">// 判断是否到链尾</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 递归求和</span></span><br><span class="line">    <span class="keyword">return</span> list.Value+list.Tail.Sum()</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3、通过嵌入结构体来扩展类型">3、通过嵌入结构体来扩展类型</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Point <span class="keyword">struct</span>&#123;</span><br><span class="line">    X,Y <span class="keyword">float64</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> Rec <span class="keyword">struct</span>&#123;</span><br><span class="line">    Point</span><br><span class="line">    Area <span class="keyword">float64</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过嵌入Point类型也可以直接访问Rec.X,Rec.Y字段 不需要再调用的是否指出Point</p><p>与传统的类的继承不同的是，这里的Point和Rec并不是继承的关系 Point也无法通过“多态”的方法获得Rec的Area属性。但是Point和Area存在“has a”的关系</p><h4 id="4、方法值和方法表达式">4、方法值和方法表达式</h4><p>我们通过选择一个方法并且再通过一个表达式里执行，比如常见的p.Distance()形式，实际上可以分成两步执行也是可以的。p.Distance叫做选择其，选择器可以返回一个方法值  可以使用一个变量进行接受  执行这个变量调用传入参数即可</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> P <span class="keyword">struct</span> &#123;</span><br><span class="line">X, Y <span class="keyword">float32</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p1 *P)</span> <span class="title">distance</span><span class="params">(p2 P)</span> <span class="title">float64</span></span> &#123;</span><br><span class="line"><span class="comment">// 欧式距离</span></span><br><span class="line">xDis := math.Pow(<span class="keyword">float64</span>((p1.X - p2.X)), <span class="number">2</span>)</span><br><span class="line">yDis := math.Pow(<span class="keyword">float64</span>(p1.Y-p2.Y), <span class="number">2</span>)</span><br><span class="line"><span class="keyword">return</span> math.Sqrt(xDis + yDis)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">p1 := P&#123;</span><br><span class="line">X: <span class="number">2</span>,</span><br><span class="line">Y: <span class="number">3</span>,</span><br><span class="line">&#125;</span><br><span class="line">p2 := P&#123;</span><br><span class="line">X: <span class="number">3</span>,</span><br><span class="line">Y: <span class="number">2</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 直接将方法赋值给变量</span></span><br><span class="line">f := p1.distance</span><br><span class="line"><span class="comment">// 正常调用</span></span><br><span class="line"><span class="built_in">println</span>(f(p2))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="封装">封装</h3><p>一个对象的变量或者方法如果调用方是不可见的话就一般定义为封装。封装有时候也被称为信息隐藏。Go使用首字母大小写来判断是否对外可见。大写可见，小写不可见。</p><p>基于名字的手段再语言中最小的封装单元是package而不是其他类型语言的类型。一个struct类型字段对于同一个包中的所有代码都可见，无论是再一个函数还是方法中。</p><p>封装优点：</p><p>1、调用方不能直接修改对象的变量值，只需要关注少量的变量即可。</p><p>2、隐藏实现细节</p>]]></content>
      
      
      <categories>
          
          <category> go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go调度模型</title>
      <link href="/2020/08/06/go%E8%B0%83%E5%BA%A6%E6%A8%A1%E5%9E%8B/"/>
      <url>/2020/08/06/go%E8%B0%83%E5%BA%A6%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="go-调度模型">go 调度模型</h2><p>我们知道CPU执行速度四很快的，大部分的性能瓶颈不在cpu上而是在IO上，在大部分的系统中CPU都不是瓶颈，CPU的时间被大量的浪费了，增加CPU的有效时间是开发的重要目标。</p><span id="more"></span><p>为了增加CPU的有效时间有以下两种方法：</p><p>① 尽可能的让每个CPU的核心都有事情可做</p><p>在实际上要根据运行程序的特性（IO密集型还是CPU密集型）。合理的设置cpu和线程之间的关系。一般情况下线程数要大于CPU核心数，才能发挥机器的价值。</p><p>② 尽可能的提高每个CPU核心的做事效率</p><p>现代操作系统虽然能够进行并行调度，但是当进程数大于cpu的核心数时就存在进程切换的问题，切换就需要保存上下文，恢复堆栈。如果进程特别多就需要频繁的进行上下文的切换，这也很消耗时间。最理想的是让每个进程在切换时能够充分的使用CPU的分片时间。</p><h3 id="Go-GMP-调度模型">Go GMP 调度模型</h3><p>M Machine 系统线程，交由操作系统管理，goroutine就是在M上进行运行。</p><p>P Processor 处理器(Go自己定义的，并不是指cpu) 主要用途是用来执行goroutine，它维护了一个goroutine队列 也就是runqueque P持有运行go代码的资源，也就是具有调度goroutine的能力。</p><p>G go协程</p><p>M必须持有P才能运行，M与其他的系统中的线程是一样的也能被系统阻塞。P的个数在程序启动时决定默认情况下是等于CPU的核心数。可以通过GoMaxProcess 或者在程序运行时决定。M一般稍大于P的个数据</p><p><a href="https://zhuanlan.zhihu.com/p/261590663">https://zhuanlan.zhihu.com/p/261590663</a></p>]]></content>
      
      
      <categories>
          
          <category> go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go单元测试</title>
      <link href="/2020/08/05/GO%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
      <url>/2020/08/05/GO%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h2 id="单元测试">单元测试</h2><p>Go本身提供了一套轻量级的测试框架。符合规则的测试代码会在运行测试时被自动识别病执行。单元测试源文件命名需要符合<strong>在需要测试的包下创建</strong><code>xx_test.go</code>测试文件。GO单元测试函数分为功能型测试函数和性能测试函数，分别为以Test和Benchmark为函数前缀并以<code>t *testing.T</code>为单一参数的函数</p><span id="more"></span><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestAdd</span><span class="params">(t *testing.T)</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Benchmark</span><span class="params">(t *testing.T)</span></span></span><br></pre></td></tr></table></figure><p>测试工具会根据函数中的实际执行动作来得到不同的测试结果。功能测试函数会根据测试代码执行过程中是否发生错误来返回不同的结果，而性能测试函数仅仅打印测试过程中花费的时间。</p><p>举个简单的例子</p><p>创建一个go mod 项目具体如下图所展示</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210208201616.png" alt="20210208201616.png"></p><h3 id="单元测试-2">单元测试</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// math.go</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> mymath</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Add</span><span class="params">(a, b <span class="keyword">int</span>)</span> <span class="params">(sum <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">sum = a + b</span><br><span class="line"><span class="keyword">return</span> sum</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// math_test.go</span></span><br><span class="line"><span class="keyword">package</span> mymath</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;testing&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestAdd</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">r := Add(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="keyword">if</span> r != <span class="number">3</span> &#123;</span><br><span class="line">t.Errorf(<span class="string">&quot;Add(1,2) failed Go %d expected 3&quot;</span>, r)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>进行测试</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">go <span class="built_in">test</span> -v ./mymath</span><br><span class="line"></span><br><span class="line">============================</span><br><span class="line">=== RUN   TestAdd</span><br><span class="line">--- PASS: TestAdd (0.00s)</span><br><span class="line">PASS</span><br><span class="line">ok      unitest/mymath  </span><br></pre></td></tr></table></figure><p>出错的情况</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">=== RUN   TestAdd</span><br><span class="line">    math_test.go:8: Add(1,2) failed Go 5 expected 3</span><br><span class="line">--- FAIL: TestAdd (0.00s)</span><br><span class="line">FAIL</span><br><span class="line">FAIL    unitest/mymath  0.002s</span><br><span class="line">FAIL</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="性能测试">性能测试</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> mymath</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;testing&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestAdd</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">......</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// BenchmarkAdd 用于测试性能</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkAdd</span><span class="params">(b *testing.B)</span></span> &#123;</span><br><span class="line">b.StopTimer() <span class="comment">// 暂停计时器</span></span><br><span class="line"><span class="comment">// 模拟非测试函数的耗时 排除这个耗时</span></span><br><span class="line">time.Sleep(time.Second * <span class="number">2</span>) <span class="comment">// 模拟一个耗时的准备工作 例如读取文件</span></span><br><span class="line"><span class="comment">//开启计时器</span></span><br><span class="line">b.StartTimer()</span><br><span class="line"><span class="comment">// 开始进行测试性能</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; b.N; i++ &#123;</span><br><span class="line">Add(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>测试执行 (使用 <code>-run=none</code> 避免运行普通的测试函数, 因为一般不可能有函数名匹配 <code>none</code>):</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go <span class="built_in">test</span> -v  -bench=<span class="string">&quot;BenchmarkAdd$&quot;</span> -run=none  ./mymath</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">liao@liao ~/g/s/unitest&gt; go <span class="built_in">test</span> -v  -bench=<span class="string">&quot;BenchmarkAdd$&quot;</span> -run=none  ./mymath</span><br><span class="line">goos: linux</span><br><span class="line">goarch: amd64</span><br><span class="line">pkg: unitest/mymath</span><br><span class="line">BenchmarkAdd</span><br><span class="line">BenchmarkAdd-4          1000000000               0.397 ns/op</span><br><span class="line">PASS</span><br><span class="line">ok      unitest/mymath  12.471s</span><br></pre></td></tr></table></figure><p>从测试结果可以看出一共测试了1000000000轮 平均耗时0.397 ns</p><h3 id="性能分析">性能分析</h3><p>执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go test -v  -bench=&quot;BenchmarkAdd$&quot; -run=none  -cpuprofile cpu.out  ./mymath </span><br></pre></td></tr></table></figure><p>执行完毕在项目的根目录生成<code>cpu.out</code>和<code>mymath.test</code>文件</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210208204435.png" alt="20210208204435.png"></p><p>可以生成cpu的profile 利用<code>graphviz</code>进行可视化的查询</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go tool pprof -http=<span class="string">&quot;:&quot;</span> cpu.out</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210208204558.png" alt="20210208204558.png"></p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210208204614.png" alt="20210208204614.png"></p><h3 id="测试覆盖率">测试覆盖率</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go <span class="built_in">test</span> -v   -coverprofile=cover.out ./mymath</span><br></pre></td></tr></table></figure><p>假设添加一个新的函数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// math.go</span></span><br><span class="line"><span class="keyword">package</span> mymath</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Add</span><span class="params">(a, b <span class="keyword">int</span>)</span> <span class="params">(sum <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">.....</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 添加减法函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Sub</span><span class="params">(a,b <span class="keyword">int</span>)</span><span class="params">(res <span class="keyword">int</span>)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a-b</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">liao@liao ~/g/s/unitest&gt; go <span class="built_in">test</span> -v   -coverprofile=cover.out ./mymath                                                                                                                                     1</span><br><span class="line">=== RUN   TestAdd</span><br><span class="line">--- PASS: TestAdd (0.00s)</span><br><span class="line">PASS</span><br><span class="line">coverage: 66.7% of statements</span><br><span class="line">ok      unitest/mymath  0.002s  coverage: 66.7% of statements</span><br></pre></td></tr></table></figure><p>检查测试覆盖率</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">liao@liao ~/g/s/unitest&gt; go tool cover -func=cover.out                </span><br><span class="line">unitest/mymath/math.go:3:       Add             100.0%</span><br><span class="line">unitest/mymath/math.go:8:       Sub             0.0%</span><br><span class="line">total:                          (statements)    66.7%</span><br></pre></td></tr></table></figure><p>使用goland进行快捷测试</p><p>使用Goland在每个测试函数或者包的前面有绿色的选项，可以根据自己的需要进行上面的测试。</p>]]></content>
      
      
      <categories>
          
          <category> go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>04-图片验证码</title>
      <link href="/2020/01/08/04-spring%20security%20%E5%9B%BE%E7%89%87%E9%AA%8C%E8%AF%81%E7%A0%81/"/>
      <url>/2020/01/08/04-spring%20security%20%E5%9B%BE%E7%89%87%E9%AA%8C%E8%AF%81%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<h3 id="图片验证码">图片验证码</h3><p>为了防止恶意用户无限制的重试，往往在登录页面引入验证码机制。我们在<code>learn-03</code>项目的基础上进行改进引入验证码。</p><span id="more"></span><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--加载图片验证--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.penggle<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>kaptcha<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>为了实现验证码首先需要一个获取图形验证码的API。在这里使用开源工具kaptcha</p><p>创建kaptcha的配置文件 kaptcha.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">kaptcha.border</span>=<span class="string">yes</span></span><br><span class="line"><span class="meta">kaptcha.border.color</span>=<span class="string">105,179,90</span></span><br><span class="line"><span class="meta">kaptcha.textproducer.char.length</span>=<span class="string">4</span></span><br><span class="line"><span class="meta">kaptcha.textproducer.font.names</span>=<span class="string">宋体,楷体,微软雅黑</span></span><br><span class="line"><span class="meta">kaptcha.textproducer.font.size</span>=<span class="string">40</span></span><br><span class="line"><span class="meta">kaptcha.textproducer.font.color</span>=<span class="string">black</span></span><br><span class="line"><span class="meta">kaptcha.image.width</span>=<span class="string">110</span></span><br><span class="line"><span class="meta">kaptcha.image.height</span>=<span class="string">50</span></span><br></pre></td></tr></table></figure><p>创建配置类 KaptchaConfig</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@PropertySource(value = &#123;&quot;classpath:kaptcha/kaptcha.properties&quot;&#125;)</span> <span class="comment">// 配置文件存放的路径</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KaptchaConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;kaptcha.border&#125;&quot;)</span></span><br><span class="line">    String border;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;kaptcha.border.color&#125;&quot;)</span></span><br><span class="line">    String borderColor;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;kaptcha.textproducer.char.length&#125;&quot;)</span></span><br><span class="line">    String charLength;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;kaptcha.textproducer.font.names&#125;&quot;)</span></span><br><span class="line">    String fontName;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;kaptcha.textproducer.font.size&#125;&quot;)</span></span><br><span class="line">    String fontSize;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;kaptcha.textproducer.font.color&#125;&quot;)</span></span><br><span class="line">    String fontColor;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;kaptcha.image.width&#125;&quot;)</span></span><br><span class="line">    String imgWidth;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;kaptcha.image.height&#125;&quot;)</span></span><br><span class="line">    String imgHeight;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DefaultKaptcha <span class="title">getDefaultKaptcha</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DefaultKaptcha captchaProducer = <span class="keyword">new</span> DefaultKaptcha();</span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties();</span><br><span class="line">        properties.setProperty(<span class="string">&quot;kaptcha.border&quot;</span>, border);</span><br><span class="line">        properties.setProperty(<span class="string">&quot;kaptcha.border.color&quot;</span>, borderColor);</span><br><span class="line">        properties.setProperty(<span class="string">&quot;kaptcha.textproducer.font.color&quot;</span>, fontColor);</span><br><span class="line">        properties.setProperty(<span class="string">&quot;kaptcha.image.width&quot;</span>, imgWidth);</span><br><span class="line">        properties.setProperty(<span class="string">&quot;kaptcha.image.height&quot;</span>, imgHeight);</span><br><span class="line">        properties.setProperty(<span class="string">&quot;kaptcha.textproducer.font.size&quot;</span>, fontSize);</span><br><span class="line">        properties.setProperty(<span class="string">&quot;kaptcha.session.key&quot;</span>, Constants.KAPTCHA_SESSION_KEY);</span><br><span class="line">        properties.setProperty(<span class="string">&quot;kaptcha.textproducer.char.length&quot;</span>, charLength);</span><br><span class="line">        properties.setProperty(<span class="string">&quot;kaptcha.textproducer.font.names&quot;</span>, fontName);</span><br><span class="line">        Config config = <span class="keyword">new</span> Config(properties);</span><br><span class="line">        captchaProducer.setConfig(config);</span><br><span class="line">        <span class="keyword">return</span> captchaProducer;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建验证码验证以及过期时间配置 KaptchaImageVo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KaptchaImageVo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String code;</span><br><span class="line">    <span class="keyword">private</span> LocalDateTime expiredTime;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">KaptchaImageVo</span><span class="params">(String code, <span class="keyword">int</span> expiredAfterSeconds)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">        <span class="keyword">this</span>.expiredTime = LocalDateTime.now().plusSeconds(expiredAfterSeconds);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断是否过期</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isExpired</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> expiredTime.isBefore(LocalDateTime.now());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建获取验证码图片的网址</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CodeController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> Producer captchaProducer;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/kaptcha&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getKaptchaImage</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        HttpSession session = request.getSession();</span><br><span class="line">        response.setDateHeader(<span class="string">&quot;Expires&quot;</span>, <span class="number">0</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Cache-Control&quot;</span>, <span class="string">&quot;no-store, no-cache, must-revalidate&quot;</span>);</span><br><span class="line">        response.addHeader(<span class="string">&quot;Cache-Control&quot;</span>, <span class="string">&quot;post-check=0, pre-check=0&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Pragma&quot;</span>, <span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">        response.setContentType(<span class="string">&quot;image/jpeg&quot;</span>);</span><br><span class="line">        <span class="comment">//生成验证码</span></span><br><span class="line">        String capText = captchaProducer.createText();</span><br><span class="line">        <span class="comment">// 设置验证码的有效时间</span></span><br><span class="line">        KaptchaImageVo imageVo = <span class="keyword">new</span> KaptchaImageVo(capText, <span class="number">2</span> * <span class="number">60</span>);</span><br><span class="line">        session.setAttribute(Constants.KAPTCHA_SESSION_KEY, imageVo);</span><br><span class="line">        <span class="comment">//向客户端写出</span></span><br><span class="line">        BufferedImage bi = captchaProducer.createImage(capText);</span><br><span class="line">        ServletOutputStream out = response.getOutputStream();</span><br><span class="line">        ImageIO.write(bi, <span class="string">&quot;jpg&quot;</span>, out);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            out.flush();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            out.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建过滤器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CaptchaCodeFilter</span> <span class="keyword">extends</span> <span class="title">OncePerRequestFilter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> LoginFailHandler loginFailHandler;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doFilterInternal</span><span class="params">(HttpServletRequest request, HttpServletResponse response,</span></span></span><br><span class="line"><span class="params"><span class="function">                                    FilterChain filterChain)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 判断请求的url为 login和提交的方式post才能进行操作</span></span><br><span class="line">        String uri = request.getRequestURI();</span><br><span class="line">        <span class="comment">// 去除空格和转换成小写</span></span><br><span class="line">        String method = request.getMethod().trim().toLowerCase();</span><br><span class="line">        <span class="comment">// url为/login 而且</span></span><br><span class="line">        String loginUrl = <span class="string">&quot;/login&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (uri.equals(loginUrl) &amp;&amp; <span class="string">&quot;post&quot;</span>.equals(method)) &#123;</span><br><span class="line">            <span class="comment">// 捕获异常信息</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                validate(request);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SessionAuthenticationException e) &#123;</span><br><span class="line">                loginFailHandler.onAuthenticationFailure(request, response, e);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 继续向下执行</span></span><br><span class="line">        filterChain.doFilter(request, response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">validate</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">        HttpSession session = request.getSession();</span><br><span class="line">        <span class="comment">// 获取前端传递回来的验证码数据</span></span><br><span class="line">        String captcha = request.getParameter(<span class="string">&quot;captcha&quot;</span>);</span><br><span class="line">        <span class="comment">// 从session中获取保存的验证码谜底信息</span></span><br><span class="line">        KaptchaImageVo kaptchaImageVo = (KaptchaImageVo) session.getAttribute(Constants.KAPTCHA_SESSION_KEY);</span><br><span class="line">        <span class="comment">// 前端传递回来的信息为空</span></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isEmpty(captcha)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> SessionAuthenticationException(<span class="string">&quot;没有填写验证码&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Objects.isNull(kaptchaImageVo)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> SessionAuthenticationException(<span class="string">&quot;验证码不存在&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 验证码过期了</span></span><br><span class="line">        <span class="keyword">if</span> (kaptchaImageVo.isExpired()) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> SessionAuthenticationException(<span class="string">&quot;验证码已经过期了&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!kaptchaImageVo.getCode().equals(captcha)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> SessionAuthenticationException(<span class="string">&quot;验证码填写不正确&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改失败的处理方式 加入验证码失败的提示</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAuthenticationFailure</span><span class="params">(HttpServletRequest request, HttpServletResponse response, AuthenticationException e)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    String errMsg = <span class="string">&quot;用户名或者密码填写错误&quot;</span>;</span><br><span class="line">    <span class="comment">// 判断是否是验证码的错误 因为 CaptchaCodeFilter抛出的是SessionAuthenticationException异常</span></span><br><span class="line">    <span class="keyword">if</span> (e <span class="keyword">instanceof</span> SessionAuthenticationException) &#123;</span><br><span class="line">        errMsg = <span class="string">&quot;验证码填写错误&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    response.setContentType(<span class="string">&quot;application/json; charset=UTF-8&quot;</span>);</span><br><span class="line">    response.getWriter().write(objectMapper.writeValueAsString(R.error().data(errMsg)));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改spring security的配置文件加如验证码的过滤器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">   <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> CaptchaCodeFilter captchaCodeFilter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        http.addFilterBefore(captchaCodeFilter, UsernamePasswordAuthenticationFilter.class)</span><br><span class="line">                .csrf().disable()</span><br><span class="line">                .logout()</span><br><span class="line">          ......</span><br><span class="line">            .antMatchers(<span class="string">&quot;/login.html&quot;</span>, <span class="string">&quot;/login&quot;</span>,<span class="string">&quot;/kaptcha&quot;</span>).permitAll() <span class="comment">// 需要放行/kaptcha用于生成验证码</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>06-Session管理</title>
      <link href="/2020/01/08/06-Session%E7%AE%A1%E7%90%86/"/>
      <url>/2020/01/08/06-Session%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h3 id="Session管理">Session管理</h3><p>Session是为无状态的http实现用户状态可维持的一种解方案。</p><h4 id="防止session固定攻击">防止session固定攻击</h4><p>防止session固定攻击的方式很简单，只需要用户在登录之后生成新的session即可，在继承<code>WebSecurityConfigAdapter</code> springsecurity 就默认开启了这个配置。</p><span id="more"></span><p>其中<code>sessionMagemanet</code>是一个会话管理配置器，其中防御会话固定攻击的策略有四种：</p><ul><li>none 不做任何变动，登录之后仍然沿用旧的session</li><li>newSession 登录之后创建一个新的session</li><li>migrateSession 创建新的Session并将旧的Session的数据复制过来</li><li>changeSessionId不创建新的会话，而是使用Servlet容器提供会话固定保护</li></ul><p>默认使用migrateSession策略，如有必要可以进行修改。在springsecurity java配置文件中进行修改</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">   .and()</span><br><span class="line">                <span class="comment">// session管理</span></span><br><span class="line">                .sessionManagement()</span><br><span class="line">                .sessionFixation().none() <span class="comment">// 修改session策略</span></span><br><span class="line"></span><br><span class="line">....</span><br></pre></td></tr></table></figure><p>在spring security中即使没有进行配置，spring security也会默认拦截Session固定攻击。spring security的http防火墙会拦截非法的url。当访问非法url时会重定向到错误页面。</p><h4 id="Session过期">Session过期</h4><p>除了防御Session固定攻击之外，还可以通过Spring Security配置一些会话过期策略，例如会话过期后跳转到指定的url。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.sessionManagement()</span><br><span class="line"><span class="comment">//                .sessionFixation().none()</span></span><br><span class="line">                .invalidSessionUrl(<span class="string">&quot;/login.html&quot;</span>)</span><br></pre></td></tr></table></figure><p>或者通过实现InvalidSessionStrategy接口自定义过期策略</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyInvalidSessionStrategy</span> <span class="keyword">implements</span> <span class="title">InvalidSessionStrategy</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onInvalidSessionDetected</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        response.setContentType(<span class="string">&quot;application/json;charset=utf-8&quot;</span>);</span><br><span class="line">        response.getWriter().println(<span class="string">&quot;Session无效&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在security配置代码中进行配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">..... </span><br><span class="line">.and().sessionManagement().invalidSessionStrategy(<span class="keyword">new</span> MyInvalidSessionStrategy())</span><br><span class="line">     </span><br><span class="line">     .....</span><br></pre></td></tr></table></figure><p>默认情况下30分钟Session就会失效。可以在<code>application.yml</code>中进行配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8085</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">session:</span></span><br><span class="line">      <span class="attr">timeout:</span> <span class="number">60</span> <span class="comment"># 配置Session超时时间</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>会话的过期时间最少是60秒 如果小于这个时间 springboot会默认修正为60s</p><h4 id="会话并发控制">会话并发控制</h4><p>在javaconfig中配置允许登录的最大设备数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.and()</span><br><span class="line">        .sessionManagement()</span><br><span class="line">           <span class="comment">// 设置允许登录的最大设备数目</span></span><br><span class="line">           .maximumSessions(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>如果没有额外的配置，默认新登录的用户会挤掉旧的登录用户。自定义Session失效的提示信息。</p><p>自定义已失效的Session的处理方式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExpireSessionStrategy</span> <span class="keyword">implements</span> <span class="title">SessionInformationExpiredStrategy</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ObjectMapper objectMapper;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onExpiredSessionDetected</span><span class="params">(SessionInformationExpiredEvent event)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        HttpServletResponse response = event.getResponse();</span><br><span class="line">        response.setContentType(<span class="string">&quot;application/json; charset=UTF-8&quot;</span>);</span><br><span class="line">        response.getWriter().write(objectMapper.writeValueAsString(R.error().data(<span class="string">&quot;您已经在其他地方登录，被迫下线&quot;</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在配置文件中进行配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">     <span class="comment">// 自定义过期处理策略            </span></span><br><span class="line">.expiredSessionStrategy(expireSessionStrategy);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="集群会话解决方案">集群会话解决方案</h4><p>常见的解决方案有三种：</p><ul><li>session 保持</li><li>Session复制</li><li>Session共享</li></ul><p>Session保持也被称之为粘滞会话，通常采用IP哈希负载均衡将来自相同客户端的请求转发到相同的服务器上。Session保持虽然避免了集群会话问题，但是会存在负载失衡问题。例如 在某个营业部使用的同一个IP出口，那么实际上该营业部访问的都会分配到同一个服务器。</p><p>Session复制是将集群之间的Session通过复制保证每一台服务器上的Session都是相同的，达到各个实例之间的会话状态都是一致的做法，这样做是非常不可取的，因为是无法达到实时同步而且存在大量Session的情况下会消耗带宽和资源。</p><p>Session共享是将Session单独抽取出来存放到独立的数据容器中，各个服务器进行共享。例如存放在redis。由于所有的服务器都去数据容器中取Session，因此不存在Session不一致的问题而且与服务器分离后不存在因为服务器停止造成Session丢失的问题。</p><p>当然Session共享并不是完全没有缺点的，独立的数据容器增加了网络交互，数据容器的网络、IO等都能成为性能的瓶颈，为了避免这些情况在内网中使用Redis是最佳的选项。</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>05-自动登录</title>
      <link href="/2020/01/08/05-spring%20security%20%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95/"/>
      <url>/2020/01/08/05-spring%20security%20%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h3 id="自动登录">自动登录</h3><p>自动登录的原理是将用户的登录信息保存在用户浏览器的cookie中，当用户下次访问时实现自动校验并建立登录状态的一种机制。</p><p>Spring Security 提供了两种令牌机制</p><ul><li>用散列算法加密用户必要的登录信息并生成令牌</li><li>数据库等持久化存储机制持久化令牌</li></ul><span id="more"></span><h4 id="散列算法">散列算法</h4><p>将用户名（username）、过期时间（expirationTime）、密码（password）和散列盐值（key）进行md5运算得到令牌。再下次登录时会使用base64简单解码得到用户名、过期时间和加密散列值，然后通过用户名得到密码，接着重新计算与旧的散列值进行对比确认是否有效。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hashInfo = md5Hex(username+<span class="string">&quot;:&quot;</span>+expirationTime+<span class="string">&quot;:&quot;</span>+password+<span class="string">&quot;:&quot;</span>+key);</span><br><span class="line">remeberCookie = base64(username+<span class="string">&quot;:&quot;</span>+expirationTime+<span class="string">&quot;:&quot;</span>+hashInfo)</span><br></pre></td></tr></table></figure><p>在Spring Security中实现该功能非常简单，只需要在javaconfig进行配置即可。这里在learn-05上进行修改。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    http</span><br><span class="line">            <span class="comment">// 在验证用户名和密码之前验证验证码</span></span><br><span class="line">            .addFilterBefore(captchaCodeFilter, UsernamePasswordAuthenticationFilter.class).</span><br><span class="line">           ..... <span class="comment">// 省略其他代码</span></span><br><span class="line">            .and()</span><br><span class="line">            .rememberMe()</span><br><span class="line">            <span class="comment">// 定义过期时间 一周</span></span><br><span class="line">            .tokenValiditySeconds(<span class="number">7</span> * <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span>)</span><br><span class="line">            <span class="comment">// 定义记住我 在前端的name</span></span><br><span class="line">            .rememberMeParameter(<span class="string">&quot;remember-me&quot;</span>)</span><br><span class="line">            <span class="comment">// 在cookie中存放显示的名称</span></span><br><span class="line">            .rememberMeCookieName(<span class="string">&quot;remember-cookies&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在前端登录页面添加记住我的功能。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    用户名<span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    验证码<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;kaptcha&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/kaptcha&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;验证码&quot;</span> <span class="attr">id</span>=<span class="string">&quot;img_cha&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;rememberMe&quot;</span>&gt;</span>一周之内免登陆<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">id</span>=<span class="string">&quot;rememberMe&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.5.1/jquery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    $(<span class="string">&quot;#img_cha&quot;</span>).click(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">console</span>.log(<span class="string">&quot;hehhe&quot;</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">&#x27;#img_cha&#x27;</span>).attr(<span class="string">&quot;src&quot;</span>, <span class="string">&quot;/kaptcha&quot;</span>);</span></span><br><span class="line"><span class="javascript">    &#125;);</span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript"></span></span><br><span class="line"><span class="javascript">    $(<span class="string">&quot;#btn&quot;</span>).click(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> username = $(<span class="string">&quot;#username&quot;</span>).val();</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> password = $(<span class="string">&quot;#password&quot;</span>).val();</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> checked = $(<span class="string">&quot;#rememberMe&quot;</span>).is(<span class="string">&quot;:checked&quot;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> captcha = $(<span class="string">&quot;#kaptcha&quot;</span>).val();</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> form = &#123;</span></span><br><span class="line"><span class="javascript">            <span class="string">&quot;username&quot;</span>: username,</span></span><br><span class="line"><span class="javascript">            <span class="string">&quot;password&quot;</span>: password,</span></span><br><span class="line"><span class="javascript">            <span class="string">&quot;captcha&quot;</span>: captcha,</span></span><br><span class="line"><span class="javascript">            <span class="string">&quot;remember-me&quot;</span>: checked,</span></span><br><span class="line"><span class="javascript">        &#125;;</span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">url</span>: <span class="string">&quot;/login&quot;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">method</span>: <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">data</span>: form,</span></span><br><span class="line"><span class="javascript">            <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (res.code === <span class="number">200</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    location.href = <span class="string">&quot;/index&quot;</span></span></span><br><span class="line"><span class="javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    <span class="built_in">console</span>.log(res);</span></span><br><span class="line"><span class="javascript">                    alert(res.data);</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">&quot;#username&quot;</span>).val(<span class="string">&quot;&quot;</span>);</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">&quot;#password&quot;</span>).val(<span class="string">&quot;&quot;</span>)</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;)</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="存在的问题">存在的问题</h4><p>在每次服务重启之后，key的值都会进行更新导致重启之前的cookie失效而且如果是多实例部署的情况下，由于实例之间的key值不同，所以当用户访问另一个实例的时候自动登录状态就会失效。合理的用法是指定key，这里测试即使是指定了key在重启之后仍然需要进行登录。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.rememberMeCookieName(<span class="string">&quot;remember-cookies&quot;</span>)</span><br><span class="line">             .userDetailsService(userDetailsService()).key(<span class="string">&quot;fba675ec-9a6b-489a-bb8a-607f1558c18f&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="持久化令牌">持久化令牌</h4><p>持久化在交互逻辑上和散列加密是一致的，都是用户在勾选了remember-me后将生成的令牌发送给浏览器，用户在下次访问系统时读取该令牌进行认证。不同的是持久化令牌采取了更加严格的验证。</p><p>在持久化令牌方案中最核心的是<code>series</code>和<code>token</code>两个值，都是采用MD5散列过的随机字符串，不同的是<code>series</code>在用户使用密码进行重新登录后进行更新，而token则是每次会话都会进行更新。自动登录并不会将series进行更改，当令牌在未使用时就被盗用时，系统会在非法验证用户通过后刷新token。此时的合法用户的token也会失效，系统因此可以对合法用户进行提醒 用户账号可能被盗用。</p><p>创建持久化令牌的数据库表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> NAMES utf8mb4;</span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for persistent_logins</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `persistent_logins`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `persistent_logins`  (</span><br><span class="line">  `username` <span class="type">varchar</span>(<span class="number">60</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `series` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `token` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `last_used` <span class="type">timestamp</span>(<span class="number">0</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`series`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_general_ci ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>引入新的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.20<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置数据库连接</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/security?serverTimezone=Asia/Shanghai</span></span><br></pre></td></tr></table></figure><p>实现repository</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> DataSource dataSource;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * save  remember-me to database</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> PersistentTokenRepository <span class="title">tokenRepository</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    JdbcTokenRepositoryImpl repository = <span class="keyword">new</span> JdbcTokenRepositoryImpl();</span><br><span class="line">    repository.setDataSource(dataSource);</span><br><span class="line">    <span class="keyword">return</span> repository;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>实现自定义退出</p><p>实现自定义退出</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebLogoutSuccessHandler</span> <span class="keyword">implements</span> <span class="title">LogoutSuccessHandler</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLogoutSuccess</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Authentication authentication)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        <span class="comment">// 自定义的业务逻辑  如果是前后端分离可以不用跳转 返回json 由前端进行控制页面的跳转</span></span><br><span class="line">        response.sendRedirect(<span class="string">&quot;/login.html&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> WebLogoutSuccessHandler logoutSuccessHandler;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        http</span><br><span class="line">                <span class="comment">// 在验证用户名和密码之前验证验证码</span></span><br><span class="line">                .addFilterBefore(captchaCodeFilter, UsernamePassw</span><br><span class="line">                .... <span class="comment">// 省略代码</span></span><br><span class="line">                .and().logout()</span><br><span class="line">                <span class="comment">// 退出成功的规则 退出成功会清除session信息</span></span><br><span class="line"><span class="comment">//                .logoutSuccessUrl(&quot;/login.html&quot;)</span></span><br><span class="line">                <span class="comment">// 自定义退出功能</span></span><br><span class="line">                .logoutSuccessHandler(logoutSuccessHandler)</span><br><span class="line">                <span class="comment">// 删除浏览器的cookie</span></span><br><span class="line">                .deleteCookies(<span class="string">&quot;JSESSIONID&quot;</span>)</span><br><span class="line">        ;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>07-整合SpringSession实现分布式Session管理</title>
      <link href="/2020/01/08/07-%E5%88%86%E5%B8%83%E5%BC%8FSession/"/>
      <url>/2020/01/08/07-%E5%88%86%E5%B8%83%E5%BC%8FSession/</url>
      
        <content type="html"><![CDATA[<h3 id="整合SpringSession实现分布式Session管理">整合SpringSession实现分布式Session管理</h3><p>Spring Security使用提供的会话并发是基于内存实现的，在集群部署的时候如果想要使用会话并发控制可以利用Spring sesion与Redis实现，整合起来非常简单，只要引入pom文件和配置redis即可</p><span id="more"></span><p>1、引入pom文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.session<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-session-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、配置application.yml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  redis:</span><br><span class="line">    port: 6379</span><br><span class="line">    host: 127.0.0.1</span><br><span class="line">    database: 4</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>03-认证与授权</title>
      <link href="/2020/01/07/03-springsecurity%E8%AE%A4%E8%AF%81%E4%B8%8E%E6%8E%88%E6%9D%83/"/>
      <url>/2020/01/07/03-springsecurity%E8%AE%A4%E8%AF%81%E4%B8%8E%E6%8E%88%E6%9D%83/</url>
      
        <content type="html"><![CDATA[<h3 id="认证与授权">认证与授权</h3><p>在上一节，我们自定义了内存中的用户，定义了两种角色分别是<code>admin</code>和<code>demo</code>.在spring security中默认的角色是<code>user</code>。</p><span id="more"></span><p>基于内存的多角色支持。在上一节中我们使用了在<code>Security</code>中重写<code>protected void configure(AuthenticationManagerBuilder auth)</code>方法 进行多用户的支持。这里我们采用一种新的方式。通过自定义实现一个<code>UserDetailService</code> 通过继承树我们可以看到<code>InMemoryUserDetailsManager</code>通过实现<code>UserDetailsManager</code>、而<code>UserDetailsManager</code>继承了<code>UserDetailsService</code>。因此我们可以使用<code>InMemoryUserDetailsManager</code>创建内存对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> UserDetailsService <span class="title">userDetailsService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    InMemoryUserDetailsManager manager = <span class="keyword">new</span> InMemoryUserDetailsManager();</span><br><span class="line">    manager.createUser(User.withUsername(<span class="string">&quot;admin&quot;</span>)</span><br><span class="line">            .password(passwordEncoder.encode(<span class="string">&quot;123456&quot;</span>))</span><br><span class="line">            .roles(<span class="string">&quot;admin&quot;</span>).build()</span><br><span class="line">    );</span><br><span class="line">    manager.createUser(User.withUsername(<span class="string">&quot;demo&quot;</span>)</span><br><span class="line">            .password(passwordEncoder.encode(<span class="string">&quot;1234&quot;</span>))</span><br><span class="line">            .roles(<span class="string">&quot;demo&quot;</span>).build()</span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">return</span> manager;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>自定义基于数据库的RBAC权限控制</p><p>RBAC数据库设计</p><h4 id="准备工作">准备工作</h4><p>建表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> NAMES utf8mb4;</span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for sys_menu</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `sys_menu`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `sys_menu`  (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `menu_name` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `url` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `menu_pid` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `menu_pids` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `is_leaf` tinyint(<span class="number">4</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `status` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">6</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_general_ci ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for sys_org</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `sys_org`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `sys_org`  (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `org_pid` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `org_pids` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `is_leaf` tinyint(<span class="number">4</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `org_name` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `sort` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `level` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `status` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">4</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_general_ci ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for sys_role</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `sys_role`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `sys_role`  (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">10</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `role_name` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `role_code` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `role_desc` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `sort` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `status` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `create_time` datetime(<span class="number">0</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">4</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_general_ci ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for sys_role_menu</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `sys_role_menu`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `sys_role_menu`  (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">10</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `role_id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `menu_id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">8</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_general_ci ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for sys_role_user</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `sys_role_user`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `sys_role_user`  (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">10</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `user_id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `role_id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">4</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_general_ci ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for sys_user</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `sys_user`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `sys_user`  (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) UNSIGNED <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `username` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `password` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `create_datetime` datetime(<span class="number">0</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `org_id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `enable` tinyint(<span class="number">4</span>) <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE <span class="operator">=</span> InnoDB AUTO_INCREMENT <span class="operator">=</span> <span class="number">3</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> <span class="operator">=</span> utf8 <span class="keyword">COLLATE</span> <span class="operator">=</span> utf8_general_ci ROW_FORMAT <span class="operator">=</span> <span class="keyword">Dynamic</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建 用户-角色-权限表 用户和角色是多对多的关系 角色和menu（这里使用url代指）也是多对多的关系。</p><p>这里创建两个用户<code>admin</code>和<code>demo</code> 两个权限 <code>admin</code> 和 <code>common</code> 其中admin权限 拥有所有的权限 也就是能够访问所有的url common只能访问部分的数据。</p><p>创建项目 <code>learn-04</code></p><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.20<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>创建springboot项目准备步骤</p><p>启动文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@MapperScan(&quot;com.liao.security.learn04.mapper&quot;)</span><span class="comment">// 指定mapper包路径</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RbacApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(RbacApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建配置文件 application.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8084</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:mapper/*.xml</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/security?serverTimezone=Asia/Shanghai</span></span><br></pre></td></tr></table></figure><p>创建登录页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>登录页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>登录页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    用户名<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.5.1/jquery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    $(<span class="string">&quot;#btn&quot;</span>).click(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> username = $(<span class="string">&quot;#username&quot;</span>).val();</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> password = $(<span class="string">&quot;#password&quot;</span>).val();</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> form = &#123;</span></span><br><span class="line"><span class="javascript">            <span class="string">&quot;username&quot;</span>: username,</span></span><br><span class="line"><span class="javascript">            <span class="string">&quot;password&quot;</span>: password,</span></span><br><span class="line"><span class="javascript">        &#125;;</span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">url</span>: <span class="string">&quot;/login&quot;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">method</span>: <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">data</span>: form,</span></span><br><span class="line"><span class="javascript">            <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (res.code === <span class="number">200</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    alert(<span class="built_in">JSON</span>.stringify(res));</span></span><br><span class="line"><span class="javascript">                    location.href = <span class="string">&quot;/index&quot;</span></span></span><br><span class="line"><span class="javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    alert(<span class="built_in">JSON</span>.stringify(res));</span></span><br><span class="line"><span class="javascript">                    alert(<span class="string">&quot;用户名或者密码错误，请重新填写&quot;</span>);</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">&quot;#username&quot;</span>).val(<span class="string">&quot;&quot;</span>);</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">&quot;#password&quot;</span>).val(<span class="string">&quot;&quot;</span>)</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;)</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>准备mapper和对应的xml文件 <code>UserMapper.java</code>和<code>UserMapper.xml</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.liao.security.learn04.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;BaseResultMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;com.liao.security.learn04.domain.User&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--@mbg.generated--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--@Table sys_user--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;INTEGER&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;username&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;password&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;create_datetime&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;TIMESTAMP&quot;</span> <span class="attr">property</span>=<span class="string">&quot;createDatetime&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;org_id&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;INTEGER&quot;</span> <span class="attr">property</span>=<span class="string">&quot;orgId&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;enable&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;TINYINT&quot;</span> <span class="attr">property</span>=<span class="string">&quot;enable&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;Base_Column_List&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--@mbg.generated--&gt;</span></span><br><span class="line">        id, username, `password`, create_datetime, org_id, `enable`</span><br><span class="line">    <span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>创建基础的配置类 PasswordEncoderConfig 和 统一返回 R</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PasswordEncoderConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PasswordEncoder <span class="title">passwordEncoder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">R</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">R</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> code;</span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line">    <span class="keyword">private</span> Object data;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> R <span class="title">success</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        R r = <span class="keyword">new</span> R();</span><br><span class="line">        r.setCode(<span class="number">200</span>);</span><br><span class="line">        r.setMessage(<span class="string">&quot;成功&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> R <span class="title">data</span><span class="params">(Object data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.setData(data);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> R <span class="title">error</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        R r = <span class="keyword">new</span> R();</span><br><span class="line">        r.setCode(<span class="number">500</span>);</span><br><span class="line">        r.setMessage(<span class="string">&quot;失败&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> r;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自定义登录成功和失败的Handler</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginFailHandler</span> <span class="keyword">implements</span> <span class="title">AuthenticationFailureHandler</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ObjectMapper objectMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAuthenticationFailure</span><span class="params">(HttpServletRequest request, HttpServletResponse response, AuthenticationException e)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        R data = R.error().data(<span class="string">&quot;登录失败&quot;</span>);</span><br><span class="line">        response.setContentType(<span class="string">&quot;application/json; charset=UTF-8&quot;</span>);</span><br><span class="line">        response.getWriter().write(objectMapper.writeValueAsString(data));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginSuccessHandler</span> <span class="keyword">implements</span> <span class="title">AuthenticationSuccessHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 对象转换为json</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ObjectMapper objectMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAuthenticationSuccess</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Authentication authentication)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">        R success = R.success().data(<span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">        response.setContentType(<span class="string">&quot;application/json;charset=utf-8&quot;</span>);</span><br><span class="line">        response.getWriter().write(objectMapper.writeValueAsString(success));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建spring security的配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="配置自定义登录以及权限控制">配置自定义登录以及权限控制</h4><p>实现UserDetail</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebUserDetails</span> <span class="keyword">implements</span> <span class="title">UserDetails</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> enable;</span><br><span class="line">    <span class="keyword">private</span> Collection&lt;? extends GrantedAuthority&gt; authorities;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Collection&lt;? extends GrantedAuthority&gt; getAuthorities() &#123;</span><br><span class="line">        <span class="keyword">return</span> authorities;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isAccountNonExpired</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isAccountNonLocked</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isCredentialsNonExpired</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEnabled</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> enable;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建RBAC查询接口 在Usermapper下创建相应的接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function">WebUserDetails <span class="title">getUserDetailsByUsername</span><span class="params">(String username)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;String&gt; <span class="title">getRoleByUserName</span><span class="params">(String username)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;String&gt; <span class="title">getAuthoritesByRoles</span><span class="params">(<span class="meta">@Param(&quot;roles&quot;)</span> List&lt;String&gt; roles)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;String&gt; <span class="title">getUrlByUsername</span><span class="params">(String username)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在UserMapper.xml下创建对应的sql</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserDetailsByUsername&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.liao.security.learn04.domain.WebUserDetails&quot;</span>&gt;</span></span><br><span class="line">    select id,</span><br><span class="line">           username,</span><br><span class="line">           password,</span><br><span class="line">           enable</span><br><span class="line">    from security.sys_user</span><br><span class="line">    where username = #&#123;username&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getRoleByUserName&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;java.lang.String&quot;</span>&gt;</span></span><br><span class="line">    SELECT role_code</span><br><span class="line">    FROM sys_user</span><br><span class="line">             LEFT JOIN sys_role_user ON sys_role_user.user_id = sys_user.id</span><br><span class="line">             LEFT JOIN sys_role ON sys_role_user.role_id = sys_role.id</span><br><span class="line">    WHERE username = #&#123;username&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getAuthoritesByRoles&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;java.lang.String&quot;</span>&gt;</span></span><br><span class="line">    SELECT</span><br><span class="line">    url</span><br><span class="line">    FROM</span><br><span class="line">    sys_menu</span><br><span class="line">    LEFT JOIN sys_role_menu ON sys_menu.id = sys_role_menu.menu_id</span><br><span class="line">    LEFT JOIN sys_role ON sys_role_menu.role_id = sys_role.id</span><br><span class="line">    WHERE</span><br><span class="line">    role_code IN</span><br><span class="line">    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;roles&quot;</span> <span class="attr">item</span>=<span class="string">&quot;role&quot;</span> <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line">        #&#123;role&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUrlByUsername&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;java.lang.String&quot;</span>&gt;</span></span><br><span class="line">    SELECT url</span><br><span class="line">    FROM sys_menu</span><br><span class="line">    LEFT JOIN sys_role_menu ON sys_menu.id = sys_role_menu.menu_id</span><br><span class="line">    LEFT JOIN sys_role ON sys_role_menu.role_id = sys_role.id</span><br><span class="line">    LEFT JOIN sys_role_user ON sys_role_user.role_id = sys_role.id</span><br><span class="line">    LEFT JOIN sys_user ON sys_role_user.user_id = sys_user.id</span><br><span class="line">    WHERE username = #&#123;username&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>实现UserDetailService</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebUserDetailService</span> <span class="keyword">implements</span> <span class="title">UserDetailsService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserDetails <span class="title">loadUserByUsername</span><span class="params">(String username)</span> <span class="keyword">throws</span> UsernameNotFoundException </span>&#123;</span><br><span class="line"><span class="comment">// 加载基础信息</span></span><br><span class="line">        WebUserDetails userDetails = userMapper.getUserDetailsByUsername(username);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 根据用户名加载角色信息</span></span><br><span class="line">        List&lt;String&gt; roles = userMapper.getRoleByUserName(username);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 根据角色加载url</span></span><br><span class="line">        List&lt;String&gt; authorities = userMapper.getAuthoritesByRoles(roles);</span><br><span class="line">        <span class="comment">// 角色是一个特殊的权限 将用户角色转换成权限</span></span><br><span class="line">        roles = roles.stream().map(role -&gt; <span class="string">&quot;ROLE_&quot;</span> + role).collect(Collectors.toList());</span><br><span class="line">        authorities.addAll(roles);</span><br><span class="line">        <span class="comment">// 设置用户权限</span></span><br><span class="line">        userDetails.setAuthorities(</span><br><span class="line">                AuthorityUtils.commaSeparatedStringToAuthorityList(String.join(<span class="string">&quot;,&quot;</span>, authorities)));</span><br><span class="line">        <span class="comment">// 通过用户角色列表加载资源权限列表</span></span><br><span class="line">        <span class="keyword">return</span> userDetails;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建RBAC权限控制</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component(&quot;rbacService&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebRbacService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userDao;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> AntPathMatcher antPathMatcher = <span class="keyword">new</span> AntPathMatcher();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断用户是否具有request的访问权限</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasPermission</span><span class="params">(HttpServletRequest request, Authentication authentication)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> match = <span class="keyword">false</span>;</span><br><span class="line">        Object principal = authentication.getPrincipal();</span><br><span class="line">        <span class="keyword">if</span> (principal <span class="keyword">instanceof</span> UserDetails) &#123;</span><br><span class="line">            UserDetails userDetails = (UserDetails) principal;</span><br><span class="line">            String username = userDetails.getUsername();</span><br><span class="line">            String requestUri = request.getRequestURI();</span><br><span class="line">            <span class="comment">// 获取该用户能够有权访问的url</span></span><br><span class="line">            List&lt;String&gt; urls = userDao.getUrlByUsername(username);</span><br><span class="line">            match = urls.stream().anyMatch(</span><br><span class="line">                    <span class="comment">// 判断以*结尾的数据能够访问任意的数据</span></span><br><span class="line">                    url -&gt; &#123;</span><br><span class="line">                        log.info(<span class="string">&quot;获得的uri为&#123;&#125;&quot;</span>, requestUri);</span><br><span class="line">                        <span class="keyword">if</span> (url.endsWith(<span class="string">&quot;/*&quot;</span>)) &#123;</span><br><span class="line">                            String replace = url.replace(<span class="string">&quot;/*&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                            <span class="keyword">return</span> requestUri.startsWith(replace);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">return</span> antPathMatcher.match(url, requestUri);</span><br><span class="line">                    &#125;</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> match;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>配置Springsecurity javaconfig</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> WebUserDetailService userDetailService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> PasswordEncoder passwordEncoder;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> LoginSuccessHandler successHandler;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> LoginFailHandler failHandler;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">// 自定义用户的加载规则</span></span><br><span class="line">        auth.userDetailsService(userDetailService).passwordEncoder(passwordEncoder);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        http</span><br><span class="line">                <span class="comment">// 取消csrf的限制 否则无法加载</span></span><br><span class="line">                .csrf().disable()</span><br><span class="line">                <span class="comment">// 登录页面</span></span><br><span class="line">                .formLogin().loginPage(<span class="string">&quot;/login.html&quot;</span>)</span><br><span class="line">                <span class="comment">// 登录处理url</span></span><br><span class="line">                .loginProcessingUrl(<span class="string">&quot;/login&quot;</span>)</span><br><span class="line">                <span class="comment">// 登录成功和失败的Handler</span></span><br><span class="line">                .successHandler(successHandler).failureHandler(failHandler)</span><br><span class="line">                .and()</span><br><span class="line">                <span class="comment">// 认证规则</span></span><br><span class="line">                .authorizeRequests()</span><br><span class="line">                <span class="comment">// 允许所有人访问这两个网址</span></span><br><span class="line">                .antMatchers(<span class="string">&quot;/login.html&quot;</span>,<span class="string">&quot;/login&quot;</span>).permitAll()</span><br><span class="line">                <span class="comment">// 认证后跳转的url</span></span><br><span class="line">                .antMatchers(<span class="string">&quot;/index&quot;</span>).authenticated()</span><br><span class="line">                <span class="comment">// 允许admin用户访问/下所有的资源</span></span><br><span class="line">                .antMatchers(<span class="string">&quot;/*&quot;</span>).hasAnyRole(<span class="string">&quot;admin&quot;</span>)</span><br><span class="line">                <span class="comment">// 使用自定义的权限控制</span></span><br><span class="line">                .anyRequest().access(<span class="string">&quot;@rbacService.hasPermission(request,authentication)&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>02-自定义登录页面</title>
      <link href="/2020/01/06/02-springsecurity%E8%87%AA%E5%AE%9A%E4%B9%89%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2/"/>
      <url>/2020/01/06/02-springsecurity%E8%87%AA%E5%AE%9A%E4%B9%89%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="自定义登录页面">自定义登录页面</h3><p>在上一节中我们使用了springsecurity中自带的登录页面 但是页面比较简陋。spring security也提供了自定义登录页面的选项。</p><span id="more"></span><p>在<code>spring-security-learn</code>项目下新建一个子项目<code>learn-02</code></p><h4 id="0、准备工作">0、准备工作</h4><p>learn-02 pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--用于解析模板页面--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>com.liao.securtity.learn02.LoginFormApplication.java</code>启动文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginFormApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(LoginFormApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>页面准备</p><p>在<code>resources</code>目录下创建<code>pubilic</code>和<code>templates</code>两个目录 。</p><p><code>pubilic</code> springboot不会拦截页面 可以直接访问 存放login.html</p><p><code>templates</code> springboot存放模板文件的地方 会进行拦截 存放 demo1.html demo2.html index.html</p><p>login.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>登录页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/login&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>demo1.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">demo1</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>demo02.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">demo2</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/demo1&quot;</span>&gt;</span>demo1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/demo2&quot;</span>&gt;</span>demo2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;/logout&quot;</span>&gt;</span>退出登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="1、创建自定义的配置文件">1、创建自定义的配置文件</h4><p>创建<code>config</code>包在该包下创建自定义的javaConfig文件</p><p><code>com.liao.securtity.learn02.config.SecurityConfig.java</code>继承 <code>WebSecurityConfigurerAdapter</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableWebSecurity</span> <span class="comment">// 自定义security配置</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>定义内存中的用户</li><li>定义不同用户的访问权限</li></ul><p>为了简单期间 我们现在内存中定义两个用户 <code>admin</code>和<code>demo</code> 在spring security 设计师具有rbac权限的。现在先简单的理解为不同的用户能够访问的页面权限是不一样的。</p><p>并且在spring security中是不允许直接使用明文密码的，必须将明文密码进行加密后再使用。在spring security中提供了<code>PasswordEncoder</code>加密接口。可以通过实现该接口自定义加密方式。当然spring security 也帮我们实现了常用的加密方式，其中常用的是<code>BCryptPasswordEncoder</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PasswordEncoder</span> </span>&#123;</span><br><span class="line">    <span class="function">String <span class="title">encode</span><span class="params">(CharSequence var1)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">matches</span><span class="params">(CharSequence var1, String var2)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">default</span> <span class="keyword">boolean</span> <span class="title">upgradeEncoding</span><span class="params">(String encodedPassword)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>定义加密方式为<code>BCryptPasswordEncoder</code>的组件<code>com.liao.securtity.learn02.config.PasswordConfig</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PasswordConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自定义用户密码的加密方式 常用的是BCryptPasswordEncoder</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> BCryptPasswordEncoder</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PasswordEncoder <span class="title">passwordEncoder</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BCryptPasswordEncoder();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现在内存中的角色用户</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableWebSecurity</span> <span class="comment">// 自定义security配置</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> PasswordEncoder passwordEncoder;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        auth.inMemoryAuthentication()</span><br><span class="line">                <span class="comment">// 定义用户名</span></span><br><span class="line">                .withUser(<span class="string">&quot;admin&quot;</span>)</span><br><span class="line">                <span class="comment">// 使用自定义的passwordEncoder加密密码</span></span><br><span class="line">                .password(passwordEncoder.encode(<span class="string">&quot;123456&quot;</span>))</span><br><span class="line">                .roles(<span class="string">&quot;admin&quot;</span>)</span><br><span class="line">                .and()</span><br><span class="line">                .withUser(<span class="string">&quot;demo&quot;</span>)</span><br><span class="line">                .password(passwordEncoder.encode(<span class="string">&quot;1234&quot;</span>))</span><br><span class="line">                .roles(<span class="string">&quot;demo&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在SecurityConfig类实现自定义的security配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableWebSecurity</span> <span class="comment">// 自定义security配置</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        http.</span><br><span class="line">                <span class="comment">// 取消csrf的限制 否者无法加载页面</span></span><br><span class="line">                        csrf().disable()</span><br><span class="line">                .formLogin().loginPage(<span class="string">&quot;/login.html&quot;</span>)</span><br><span class="line">                <span class="comment">// 进行登录处理的URL 也就是form表单的action登录url 需要在antMatchers中允许访问 不进行拦截</span></span><br><span class="line">                .loginProcessingUrl(<span class="string">&quot;/login&quot;</span>)</span><br><span class="line">                <span class="comment">// 默认处理成功之后跳转的页面</span></span><br><span class="line">                .defaultSuccessUrl(<span class="string">&quot;/index&quot;</span>)</span><br><span class="line">                .and()</span><br><span class="line">                <span class="comment">// 验证规则</span></span><br><span class="line">                .authorizeRequests()</span><br><span class="line">                <span class="comment">// 允许所有用户包括未登录访问</span></span><br><span class="line">                .antMatchers(<span class="string">&quot;/login.html&quot;</span>, <span class="string">&quot;/login&quot;</span>).permitAll()</span><br><span class="line">                <span class="comment">// 允许已经访问的人进行登录</span></span><br><span class="line">                .antMatchers(<span class="string">&quot;/index&quot;</span>).authenticated()</span><br><span class="line">                <span class="comment">// 允许admin角色用户登录</span></span><br><span class="line">                .antMatchers(<span class="string">&quot;/demo1&quot;</span>).hasAnyRole(<span class="string">&quot;admin&quot;</span>)</span><br><span class="line">                <span class="comment">// 角色本身也是一种特殊的权限 当用户属于一种角色后就会默认存在一个ROLE_角色名的权限</span></span><br><span class="line">                <span class="comment">// 也就是允许拥有ROLE_admin和ROLE_user权限的用户登录 即角色为admin或者user的用户登录</span></span><br><span class="line">                .antMatchers(<span class="string">&quot;/demo2&quot;</span>).hasAnyAuthority(<span class="string">&quot;ROLE_admin&quot;</span>, <span class="string">&quot;ROLE_demo&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"> .....<span class="comment">// 省略内存用户的代码   </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动项目</p><p>我们可以发现 admin可以访问demo1和demo2页面 但是demo用户只能访问demo2页面 不能访问demo1页面。</p><h4 id="2、-修改项目为Restful风格">2、 修改项目为Restful风格</h4><p>在<code>learn-02</code>的基础上进行修改</p><p>创建统一返回模板</p><p>创建自定义的登录成功失败的Handler</p><p>登录成功</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginSuccessHandler</span> <span class="keyword">implements</span> <span class="title">AuthenticationSuccessHandler</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ObjectMapper objectMapper;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAuthenticationSuccess</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Authentication authentication)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">        R success = R.success().data(<span class="string">&quot;登录成功&quot;</span>);</span><br><span class="line">        response.setContentType(<span class="string">&quot;application/json;charset=utf-8&quot;</span>);</span><br><span class="line">        response.getWriter().write(objectMapper.writeValueAsString(success));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>登录失败</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginFailHandler</span> <span class="keyword">implements</span> <span class="title">AuthenticationFailureHandler</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> ObjectMapper objectMapper;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onAuthenticationFailure</span><span class="params">(HttpServletRequest request, HttpServletResponse response, AuthenticationException e)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        R data = R.error().data(<span class="string">&quot;登录失败&quot;</span>);</span><br><span class="line">        response.setContentType(<span class="string">&quot;application/json; charset=UTF-8&quot;</span>);</span><br><span class="line">        response.getWriter().write(objectMapper.writeValueAsString(data));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在SecurityConfig类实现自定义的security配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableWebSecurity</span> <span class="comment">// 自定义security配置</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> PasswordEncoder passwordEncoder;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> LoginSuccessHandler successHandler;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> LoginFailHandler failHandler;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        http.</span><br><span class="line">                <span class="comment">// 取消csrf的限制 否者无法加载页面</span></span><br><span class="line">                        csrf().disable()</span><br><span class="line">                .formLogin()</span><br><span class="line">                .loginPage(<span class="string">&quot;/login.html&quot;</span>)</span><br><span class="line">                <span class="comment">// 进行登录处理的URL 也就是form表单的action登录url 需要在antMatchers中允许访问 不进行拦截</span></span><br><span class="line">                .loginProcessingUrl(<span class="string">&quot;/login&quot;</span>)</span><br><span class="line">                .successHandler(successHandler) <span class="comment">// 自定义登录成功的处理方式</span></span><br><span class="line">                .failureHandler(failHandler) <span class="comment">// 自定义失败的处理方式</span></span><br><span class="line">                .and()</span><br><span class="line">                <span class="comment">// 验证规则</span></span><br><span class="line">                .authorizeRequests()</span><br><span class="line">                <span class="comment">// 允许所有用户包括未登录访问</span></span><br><span class="line">                .antMatchers(<span class="string">&quot;/login.html&quot;</span>, <span class="string">&quot;/login&quot;</span>).permitAll()</span><br><span class="line">                <span class="comment">// 允许已经访问的人进行登录</span></span><br><span class="line">                .antMatchers(<span class="string">&quot;/index&quot;</span>).authenticated()</span><br><span class="line">                <span class="comment">// 允许admin角色用户登录</span></span><br><span class="line">                .antMatchers(<span class="string">&quot;/demo1&quot;</span>).hasAnyRole(<span class="string">&quot;admin&quot;</span>)</span><br><span class="line">                <span class="comment">// 角色本身也是一种特殊的权限 当用户属于一种角色后就会默认存在一个ROLE_角色名的权限</span></span><br><span class="line">                <span class="comment">// 也就是允许拥有ROLE_admin和ROLE_user权限的用户登录 即角色为admin或者user的用户登录</span></span><br><span class="line">                .antMatchers(<span class="string">&quot;/demo2&quot;</span>).hasAnyAuthority(<span class="string">&quot;ROLE_admin&quot;</span>, <span class="string">&quot;ROLE_demo&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">.... <span class="comment">// 省略代码</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>修改login.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>登录页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>登录页面<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    用户名<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">id</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码 <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.5.1/jquery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    $(<span class="string">&quot;#btn&quot;</span>).click(<span class="function">() =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> username = $(<span class="string">&quot;#username&quot;</span>).val();</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> password = $(<span class="string">&quot;#password&quot;</span>).val();</span></span><br><span class="line"><span class="javascript">        <span class="keyword">let</span> form = &#123;</span></span><br><span class="line"><span class="javascript">            <span class="string">&quot;username&quot;</span>: username,</span></span><br><span class="line"><span class="javascript">            <span class="string">&quot;password&quot;</span>: password,</span></span><br><span class="line"><span class="javascript">        &#125;;</span></span><br><span class="line"><span class="javascript">        $.ajax(&#123;</span></span><br><span class="line"><span class="javascript">            <span class="attr">url</span>: <span class="string">&quot;/login&quot;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">method</span>: <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="javascript">            <span class="attr">data</span>: form,</span></span><br><span class="line"><span class="javascript">            <span class="attr">success</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">if</span> (res.code === <span class="number">200</span>) &#123;</span></span><br><span class="line"><span class="javascript">                    alert(<span class="built_in">JSON</span>.stringify(res));</span></span><br><span class="line"><span class="javascript">                    location.href = <span class="string">&quot;/index&quot;</span></span></span><br><span class="line"><span class="javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">                    alert(<span class="built_in">JSON</span>.stringify(res));</span></span><br><span class="line"><span class="javascript">                    alert(<span class="string">&quot;用户名或者密码错误，请重新填写&quot;</span>);</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">&quot;#username&quot;</span>).val(<span class="string">&quot;&quot;</span>);</span></span><br><span class="line"><span class="javascript">                    $(<span class="string">&quot;#password&quot;</span>).val(<span class="string">&quot;&quot;</span>)</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">        &#125;)</span></span><br><span class="line"><span class="javascript">    &#125;)</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01-spring boot与spring security整合</title>
      <link href="/2020/01/05/01-springboot%E4%B8%8Espringsecurity%E6%95%B4%E5%90%88/"/>
      <url>/2020/01/05/01-springboot%E4%B8%8Espringsecurity%E6%95%B4%E5%90%88/</url>
      
        <content type="html"><![CDATA[<h4 id="创建项目">创建项目</h4><p>为了后续项目的统一管理，在这里创建同意管理的父工程 springsecurity-learn 作为统一的pom依赖管理。</p><span id="more"></span><p>父pom文件内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--统一管理springboot项目工程--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.17.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure><p>创建子项目``learn-01`</p><p>项目pom文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!--必须添加 会自动配置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建springboot application</p><p>创建<code>com.liao.securtity.learn01.HelloSecurityApplication.java</code>文件作为springboot的启动类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloSecurityApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(HelloSecurityApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建测试路由<code>com.liao.securtity.learn01.controller.HelloController.java</code>文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;hello&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;spring security&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建配置文件</p><p>resources/application.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8001</span></span><br></pre></td></tr></table></figure><p>打开浏览器访问可以看到</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20200924115313296.png" alt="image-20200924115313296"></p><p>默认的用户名是<code>user</code></p><p>密码为在控制台打印的一串uuid</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/image-20200924153118637.png" alt="image-20200924153118637"></p><p>自定义登录的用户名和密码</p><p>在配置文件中<code>applicantion.yml</code>自定义</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">security:</span></span><br><span class="line">    <span class="attr">user:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">password:</span> <span class="number">123456</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring security </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring cloud alibaba快速入门（三）</title>
      <link href="/2019/12/05/spring-cloud-alibaba%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%89%EF%BC%89/"/>
      <url>/2019/12/05/spring-cloud-alibaba%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%89%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="spring-cloud-alibaba-dubbo-快速入门">spring-cloud-alibaba-dubbo 快速入门</h3><h4 id="前置条件">前置条件</h4><p>安装好nacos</p><p>这里使用nacos作为注册中心，在spring cloud alibaba快速入门（一）中已经详细介绍了如何安装nacos,这里不做赘述。</p><span id="more"></span><h4 id="创建项目">创建项目</h4><p>在之前的项目中添加一个名为<code>spring-cloud-alibaba-dubbo-starter</code>的项目</p><p>在<code>spring-cloud-alibaba-dubbo-starter</code>下创建maven项目<code>spring-cloud-alibaba-dubbo-starter-provider</code>如下图所示:</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162706.png" alt="image-20200106193009212"></p><p>同理创建<code>spring-cloud-alibaba-dubbo-starter-consumer</code>和<code>spring-cloud-alibaba-dubbo-starter-service</code></p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162710.png" alt="image-20200106193333297"></p><p>效果如图所示。</p><h4 id="创建服务消费者和服务提供者的接口">创建服务消费者和服务提供者的接口</h4><p>在<code>spring-cloud-alibaba-dubbo-starter-service</code>项目下创建服务接口，这个接口是为<code>consumer</code>和<code>provider</code>提供。</p><p>创建接口如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.liao.spring.cloud.alibaba.dubbo.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">HelloService</span> </span>&#123;</span><br><span class="line">    <span class="function">String <span class="title">hello</span><span class="params">(String info)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="创建服务提供者">创建服务提供者</h4><p>在<code>spring-cloud-alibaba-dubbo-starter-provider</code>下引入<code>spring-cloud-alibaba-dubbo-starter-service</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.liao<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dubbo-starter-service<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在<code>spring-cloud-alibaba-dubbo-starter-provider</code>下引入dubbo的依赖支持</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.liao<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dubbo-starter-service<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--spring cloud dubbo--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-dubbo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--在dubbo的服务提供者上使用，不用开启web端口--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--springboot的单元测试--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--服务发现--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--nacos-config--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--sentinel--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-sentinel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>创建服务提供者的入口类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.liao.spring.cloud.alibaba.dubbo.service.provider;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DubboServiceProviderApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(DubboServiceProviderApplication.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建服务提供者服务，这里以返回一个简单的字符串为例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.liao.spring.cloud.alibaba.dubbo.service.provider.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.liao.spring.cloud.alibaba.dubbo.service.HelloService;</span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.annotation.Service;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Service(version = &quot;1.0.0&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServiceImpl</span> <span class="keyword">implements</span> <span class="title">HelloService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">(String info)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>： 这里的<code>@Service</code>接口是来自<code>org.apache.dubbo.config.annotation.Service</code>这个包，而不是Spring下面的注解。实现的是<code>spring-cloud-alibaba-dubbo-starter-service</code>项目下的接口。</p><p>创建配置文件<code>application.yml</code>和<code>bootstrap.properties</code>因为这里引入了nacos的远程配置pom文件，所以必须添加<code>bootstrap.properties</code>配置文件进行远程配置中心地址的设置，否者会报错</p><p>bootstrap.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.application.name</span>=<span class="string">spring-cloud-alibaba-dubbo-starter-provider</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.server-addr</span>=<span class="string">192.168.77.132:8848</span></span><br><span class="line"><span class="meta">management.endpoints.web.exposure.include</span>=<span class="string">*</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.file-extension</span>=<span class="string">yaml</span></span><br></pre></td></tr></table></figure><p>application.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dubbo:</span></span><br><span class="line">  <span class="attr">scan:</span></span><br><span class="line">    <span class="comment"># dubbo 服务扫描基准包</span></span><br><span class="line">    <span class="attr">base-packages:</span> <span class="string">com.liao.spring.cloud.alibaba.dubbo.service.provider.service</span></span><br><span class="line">  <span class="attr">protocol:</span></span><br><span class="line">    <span class="comment"># dubbo 协议</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">dubbo</span></span><br><span class="line">    <span class="comment"># dubbo 协议端口（ -1 表示自增端口，从 20880 开始）</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">-1</span></span><br><span class="line">  <span class="attr">registry:</span></span><br><span class="line">    <span class="comment"># 挂载到 Spring Cloud 注册中心</span></span><br><span class="line">    <span class="attr">address:</span> <span class="string">nacos://192.168.77.132:8848</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="comment"># Dubbo 应用名称</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">spring-cloud-alibaba-dubbo-starter-provider</span></span><br><span class="line">  <span class="attr">main:</span></span><br><span class="line">    <span class="comment"># Spring Boot 2.1 需要设定</span></span><br><span class="line">    <span class="attr">allow-bean-definition-overriding:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="comment"># Nacos 服务发现与注册配置</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.77</span><span class="number">.132</span><span class="string">:8848</span></span><br></pre></td></tr></table></figure><p>启动服务；没有报错，证明启动成功，在nacos上可以发现已经注册成功</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162718.png" alt="image-20200106204116189"></p><p>创建服务消费者</p><p>在<code>spring-cloud-alibaba-dubbo-starter-consumer</code>下引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.liao<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dubbo-starter-service<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--spring cloud dubbo--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-dubbo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--在dubbo的服务消费者上使用--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--springboot的单元测试--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--服务发现--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--nacos-config--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--sentinel--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-sentinel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>创建sptingboot入口类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.liao.spring.cloud.alibaba.dubbo.service.consumer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DubboServiceConsumerApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(DubboServiceConsumerApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建配置文件<code>application.yml</code>和<code>bootstrap.properties</code>因为这里引入了nacos的远程配置pom文件，所以必须添加<code>bootstrap.properties</code>配置文件进行远程配置中心地址的设置，否者会报错</p><p><strong>application.yml</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">dubbo:</span></span><br><span class="line">  <span class="attr">protocol:</span></span><br><span class="line">    <span class="comment"># dubbo 协议</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">dubbo</span></span><br><span class="line">    <span class="comment"># dubbo 协议端口（ -1 表示自增端口，从 20880 开始）</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">-1</span></span><br><span class="line">  <span class="attr">registry:</span></span><br><span class="line">    <span class="comment"># 挂载到 Spring Cloud 注册中心</span></span><br><span class="line">    <span class="attr">address:</span> <span class="string">nacos://192.168.77.132:8848</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="comment"># Dubbo 应用名称</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">spring-cloud-alibaba-dubbo-starter-consumer</span></span><br><span class="line">  <span class="attr">main:</span></span><br><span class="line">    <span class="comment"># Spring Boot 2.1 需要设定</span></span><br><span class="line">    <span class="attr">allow-bean-definition-overriding:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="comment"># Nacos 服务发现与注册配置</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.77</span><span class="number">.132</span><span class="string">:8848</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">14000</span></span><br></pre></td></tr></table></figure><p><strong>bootstrap.properties</strong></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.application.name</span>=<span class="string">spring-cloud-alibaba-dubbo-starter-consumer</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.server-addr</span>=<span class="string">192.168.77.132:8848</span></span><br><span class="line"><span class="meta">management.endpoints.web.exposure.include</span>=<span class="string">*</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.file-extension</span>=<span class="string">yaml</span></span><br></pre></td></tr></table></figure><p>添加controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.liao.spring.cloud.alibaba.dubbo.service.consumer.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.liao.spring.cloud.alibaba.dubbo.service.HelloService;</span><br><span class="line"><span class="keyword">import</span> org.apache.dubbo.config.annotation.Reference;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Reference(version = &quot;1.0.0&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> HelloService helloService;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/&#123;info&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">(<span class="meta">@PathVariable</span> String info)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> helloService.hello(info);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动服务，访问http://localhost:14000/123 浏览器出现123证明成功</p><p>访问nacos发现服务已经注册成功</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162723.png" alt="image-20200106204553445"></p><p><strong>测试远程配置</strong></p><p>在nacos上添加配置如下图</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162726.png" alt="image-20200106204841236"></p><p>点击发布，并删除<code>spring-cloud-alibaba-dubbo-starter-consumer</code>下的server配置</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162729.png" alt="image-20200106205119387"></p><p>发现修改成功，证明远程配置加载成功。</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring cloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring cloud alibaba快速入门 （二）</title>
      <link href="/2019/12/05/spring-cloud-alibaba%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
      <url>/2019/12/05/spring-cloud-alibaba%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="Sentinel负载均衡和流量监控">Sentinel负载均衡和流量监控</h3><h4 id="1、sentinel控制台">1、sentinel控制台</h4><p>从https://github.com/alibaba/Sentinel/releases下载最新版的控制台jar包。</p><span id="more"></span><p>执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -Dserver.port=8080 -Dcsp.sentinel.dashboard.server=localhost:8080 -Dproject.name=sentinel-dashboard -jar sentinel-dashboard-版本号.jar</span><br></pre></td></tr></table></figure><p>访问 <a href="http://127.0.0.1:8080/">http://127.0.0.1:8080/</a></p><p>用户名和密码都是<code>sentinel</code></p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162625.png" alt="image-20200105114755793"></p><p>证明创建成功。</p><h4 id="2、在springcloud-中引入sentinel">2、在springcloud 中引入sentinel</h4><h5 id="2-1、服务提供者引入">2.1、服务提供者引入</h5><p>在<code>spring-cloud-alibaba-service-provider</code>中添加pom</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-sentinel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在需要进行限流的地方使用<code>@SentinelResource</code> 注解用来标识资源是否被限流、降级。</p><p>在<code>spring-cloud-alibaba-service-provider</code>中添加配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.liao.spring.cloud.service.provider.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.csp.sentinel.annotation.SentinelResource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;user.name:liao&#125;&quot;)</span></span><br><span class="line">    String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;user.age:12&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="comment">/*增加的修改，测试develop配置是否加载*/</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;env:none&#125;&quot;)</span></span><br><span class="line">    String env;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*Sentinel 引入流量监控*/</span></span><br><span class="line">    <span class="meta">@SentinelResource(&quot;hello&quot;)</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/hello/&#123;info&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">(<span class="meta">@PathVariable</span> String info)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello:&quot;</span> + info + <span class="string">&quot;: &quot;</span> + name + <span class="string">&quot;: &quot;</span> + age + <span class="string">&quot;当前的环境为：&quot;</span> + env;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在application.yml中增加配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">sentinel:</span></span><br><span class="line">      <span class="attr">transport:</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">8719</span></span><br><span class="line">        <span class="attr">dashboard:</span> <span class="string">localhost:8080</span> <span class="comment">#sentinel的控制台地址</span></span><br></pre></td></tr></table></figure><p>先访问一下http://localhost:10000/test/hello/123让sentinel中的先进行注册。在sentinel中</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162637.png" alt="image-20200105142921036"></p><p>监控成功。</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162642.png" alt="image-20200105143055338"></p><p>可以对对应的链路进行对应的操作。</p><h5 id="2-2、服务消费者引入（对feign的支持）">2.2、服务消费者引入（对feign的支持）</h5><p>同理在<code>spring-cloud-alibaba-service-consumer</code>中添加依赖 因为之前在feign中进行熔断的时候需要sentinel所以无需再进行引入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--feign--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--熔断与流量监控--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-sentinel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在配置文件application.yml中添加</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">sentinel:</span></span><br><span class="line">      <span class="attr">transport:</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">8719</span></span><br><span class="line">        <span class="attr">dashboard:</span> <span class="string">localhost:8080</span> <span class="comment">#sentinel的控制台地址</span></span><br></pre></td></tr></table></figure><p>重启服务，访问http://localhost:11000/test/hello/1</p><p>查看sentinel 如图：</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162647.png" alt="image-20200105144528412"></p><p>在这里引入成功</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring cloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring cloud alibaba快速入门（一）</title>
      <link href="/2019/12/05/spring-cloud-alibaba%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2019/12/05/spring-cloud-alibaba%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="nacos快速入门">nacos快速入门</h3><h4 id="1、nacos介绍">1、nacos介绍</h4><p><a href="https://github.com/alibaba/Nacos">nacos github地址</a></p><p>一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。</p><span id="more"></span><h4 id="2、快速上手">2、快速上手</h4><p>这里使用docker-compose快速安装nacos，<a href="https://github.com/nacos-group/nacos-docker">具体介绍</a>见github。</p><p>方法：（这里默认已经安装好了docker-compose 如果没有安装，请参考我的博客）</p><p>第一步 先克隆项目</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --depth 1 https://github.com/nacos-group/nacos-docker.git</span><br><span class="line"><span class="built_in">cd</span> nacos-docker</span><br></pre></td></tr></table></figure><p>官方提供很多的部署方式，这里使用<code>Standalone Derby</code>作为测试，其他的类似。执行以下命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose -f example/standalone-derby.yaml up</span><br></pre></td></tr></table></figure><p>启动后会出现如下的界面：</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162743.png" alt="image-20200104144222706"></p><p>访问浏览器 输入<code>你的ip:8848/nacos</code>出现</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162747.png" alt="image-20200104144413143"></p><p>用户名<code>nacos</code></p><p>密码：<code>nacos</code></p><h4 id="3、将nacos作为服务注册中心，实现服务提供者和服务消费者。">3、将nacos作为服务注册中心，实现服务提供者和服务消费者。</h4><h5 id="3-1、创建项目">3.1、创建项目</h5><p>创建maven项目，以<code>spring-cloud-alibaba-learn</code>为例，作为父项目。</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162754" alt="image-20200104145039903"></p><p>pom.xml内容如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.liao<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-learn<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modules</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>spring-cloud-alibaba-service-provider<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">module</span>&gt;</span>spring-cloud-alibaba-service-consumer<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-2、创建服务提供者">3.2、创建服务提供者</h5><p>创建项目如下</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162757.png" alt="image-20200104145516898"></p><p>修改pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-learn<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.liao<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-service-consumer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jetty<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--服务发现--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--引入feign--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>创建入口类<code>ServiceProviderApplication</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.liao.spring.cloud.service.provider;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span> <span class="comment">// 允许注册到nacos</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServiceProviderApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ServiceProviderApplication.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置文件application.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">10000</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-provider</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.200</span><span class="number">.72</span><span class="string">:8848</span> <span class="comment"># nacos的地址</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通过nacos注册中心查看 服务列表选项 可以看到注册的服务信息</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162802.png" alt="image-20200104150342489"></p><p>创建一个简单的业务：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.liao.spring.cloud.service.provider.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/hello/&#123;info&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">(<span class="meta">@PathVariable</span> String info)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello:&quot;</span>+info;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>访问 <a href="http://127.0.0.1:10000/test/hello/world">http://127.0.0.1:10000/test/hello/world</a></p><p>出现</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162806.png" alt="image-20200104151440711"></p><h5 id="3-3、创建服务消费者">3.3、创建服务消费者</h5><p>这里为了方便直接使用feign作为服务消费者，raibbo类似，可以参考官方的github示例。</p><p>创建一个<code>spring-cloud-alibaba-service-consumer</code>的maven项目</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162808.png" alt="image-20200104151741702"></p><p>修改pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-learn<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.liao<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-service-consumer<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jetty<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--引入服务发现--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--feign熔断--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--熔断与流量监控--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-sentinel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>创建springboot的入口类<code>ServiceConsumerApplication</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.liao.spring.cloud.service.consumer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.EnableFeignClients;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span> <span class="comment">// 允许注册到nacos</span></span><br><span class="line"><span class="meta">@EnableFeignClients</span> <span class="comment">//允许feign客户端</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ServiceConsumerApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ServiceConsumerApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>application.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">11000</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="number">192.168</span><span class="number">.200</span><span class="number">.72</span><span class="string">:8848</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">service-consumer</span></span><br><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">sentinel:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment">#允许开启fallback 默认为false</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建服务调用者<code>HelloServie</code> alibaba中不支持在接口前加@RequestMapping(“/**”)作为统一的url前缀。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.liao.spring.cloud.service.consumer.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.liao.spring.cloud.service.consumer.service.fallback.HelloFallback;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.FeignClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"></span><br><span class="line"><span class="meta">@FeignClient(name = &quot;service-provider&quot;,fallback= HelloFallback.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">HelloService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/test/hello/&#123;info&#125;&quot;)</span></span><br><span class="line">    <span class="function">String <span class="title">sayHello</span><span class="params">(<span class="meta">@PathVariable</span> String info)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建controller <code>HelloFeignController</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.liao.spring.cloud.service.consumer.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.liao.spring.cloud.service.consumer.service.HelloService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/v1&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloFeignController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> HelloService helloService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/hello/&#123;info&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello</span><span class="params">(<span class="meta">@PathVariable</span> String info)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> helloService.sayHello(info);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问http://localhost:11000/v1/hello/123</p><p>出现 hello:123证明创建成功。</p><p>查看nacos</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162814.png" alt="image-20200104153704690"></p><p>可以看到service-consumer在nacos也注册成功。</p><p><strong>创建熔断机制</strong></p><p>在service下创建fallback包然后创建<code>HelloServiceFallbackImpl</code>类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.liao.spring.cloud.service.consumer.service.fallback;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.liao.spring.cloud.service.consumer.service.HelloService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloFallback</span> <span class="keyword">implements</span> <span class="title">HelloService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">(String info)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> info + <span class="string">&quot;不可用&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改<code>HelloService</code>的<code>@FeignClient(name = &quot;service-provider&quot;)</code>为<code>@FeignClient(name = &quot;service-provider&quot;,fallback = HelloServiceFallbackImpl.class)</code>也就是增加调用失败的回调信息。</p><h4 id="4、实现远程配置服务">4、实现远程配置服务</h4><p>在原有的服务消费者和服务提供者进行修改，将配置迁移到nacos的配置中心进行配置。</p><p>对<code>spring-cloud-alibaba-service-provider</code>进行修改</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162819.png" alt="image-20200105084620118"></p><h5 id="4-1、增加properties远程配置">4.1、增加properties远程配置</h5><p>增加bootstarp.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.application.name</span>=<span class="string">service-provider # 应用名称，在nacos配置中需要使用</span></span><br><span class="line"><span class="meta">spring.cloud.nacos.config.server-addr</span>=<span class="string">192.168.200.72:8848</span></span><br><span class="line"><span class="meta">management.endpoints.web.exposure.include</span>=<span class="string">* # 这一条配置可以加在bootstarp.properties和application.properties中，但是不能加在application.yml中 在application.yml会找不到，报错</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162825.png" alt="image-20200105090003820"></p><p>点击添加右边添加按钮，添加一条配置。</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162828.png" alt="image-20200105090410346"></p><p>添加一条DataID为<code>service-provider.properties</code> 这里的命名规则为你在<code>bootstarp.properties</code>中的<code>spring.application.name</code>中的名称，再加上<code>.properties</code>配置规则。</p><p>配置内容： 根据自己的配置进行修改添加。这里测试添加了</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">user.name</span>=<span class="string">liao12</span></span><br><span class="line"><span class="meta">user.age</span>=<span class="string">23</span></span><br></pre></td></tr></table></figure><p>点击<code>发布</code>按钮，发布这一条规则。</p><p>添加测试代码：</p><p>创建<code>HelloController</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.liao.spring.cloud.service.provider.controller;</span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;user.name:liao&#125;&quot;)</span></span><br><span class="line">    String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;user.age:12&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/hello/&#123;info&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">(<span class="meta">@PathVariable</span> String info)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello:&quot;</span> + info + <span class="string">&quot;: &quot;</span> + name + <span class="string">&quot;: &quot;</span> + age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>测试远程的信息能否被加载，如果在页面上能够正确的显示远程的配置信息能够被正确的加载就，就证明远程配置成功。</p><p>启动服务，访问http://localhost:10000/test/hello/123</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162833.png" alt="image-20200105091701098"></p><p>这里能够正确的加载信息，加载成功。</p><h5 id="4-2、增加yaml远程配置">4.2、增加yaml远程配置</h5><p>nacos同样支持yaml配置文件，只需要在bootstarp.properties中进行增加一条配置。</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.cloud.nacos.config.file-extension</span>=<span class="string">yaml</span></span><br></pre></td></tr></table></figure><p>在nacos上添加一条远程配置文件</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162836.png" alt="image-20200105093055414"></p><p><strong>注意，配置文件名是<code>应用名.yaml</code>不是我们写的yml</strong></p><p>点击发布</p><p>重启服务,访问http://localhost:10000/test/hello/123</p><p>出现</p><p>实验成功。</p><h5 id="4-3、支持多环境配置">4.3、支持多环境配置</h5><p>spring-cloud-starter-alibaba-nacos-config 在加载配置的时候，不仅仅加载了以 dataid 为 <code>$&#123;spring.application.name&#125;.$&#123;file-extension:properties&#125;</code> 为前缀的基础配置，还加载了dataid为 <code>$&#123;spring.application.name&#125;-$&#123;profile&#125;.$&#123;file-extension:properties&#125;</code> 的基础配置。</p><p>例如： 我在</p><p>在application.yml中添加</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">develop</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605163013.png" alt="image-20200105095707708"></p><p>添加如图所示的一条配置，点击发布。修改<code>HelloController</code>为</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;user.name:liao&#125;&quot;)</span></span><br><span class="line">    String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;user.age:12&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="comment">/*增加的修改，测试develop配置是否加载*/</span></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;env:none&#125;&quot;)</span></span><br><span class="line">    String env;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/hello/&#123;info&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">(<span class="meta">@PathVariable</span> String info)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;hello:&quot;</span> + info + <span class="string">&quot;: &quot;</span> + name + <span class="string">&quot;: &quot;</span> + age + <span class="string">&quot;当前的环境为：&quot;</span> + env;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问http://localhost:10000/test/hello/123</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162843.png" alt="image-20200105100905665"></p><p>实验成功。</p><p>如果需要切换到生产环境，只需要更改 <code>$&#123;spring.profiles.active&#125;</code> 参数配置即可。如下所示：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.profiles.active</span>=<span class="string">product</span></span><br></pre></td></tr></table></figure><h5 id="4-4、自定义namespace">4.4、自定义namespace</h5><p>官方给出的概念</p><blockquote><p>用于进行租户粒度的配置隔离。不同的命名空间下，可以存在相同的 Group 或 Data ID 的配置。Namespace 的常用场景之一是不同环境的配置的区分隔离，例如开发测试环境和生产环境的资源（如配置、服务）隔离等。</p></blockquote><p>简单来说，就类似于java中包的概念，不同的包下可以有相同名称的类。在开发中可以在不同的命名空间下创建相同的配置文件。例如，在开发环境下我需要有一个<code>service-provider.yaml</code>的配置文件，在生产环境下也需要一个<code>service-provider.yaml</code>的配置文件。如果这两个在同一个命名空间下是不可以共存的，所以需要创建一个开发的命名空间一个生产的命名空，在开发的时候在项目中使用开发的命名空间的远程配置，在生产上线的时候使用生产空间，两者互不干扰。</p><p>在没有明确指定 <code>$&#123;spring.cloud.nacos.config.namespace&#125;</code> 配置的情况下， 默认使用的是 Nacos 上 Public 这个namespae。如果需要使用自定义的命名空间，可以通过以下配置来实现：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">spring.cloud.nacos.config.namespace</span>=<span class="string">你配置的命名空间名称</span></span><br></pre></td></tr></table></figure><blockquote><p>该配置必须放在 bootstrap.properties 文件中。此外 <code>spring.cloud.nacos.config.namespace</code> 的值是 namespace 对应的 id，id 值可以在 Nacos 的控制台获取。并且在添加配置时注意不要选择其他的 namespae，否则将会导致读取不到正确的配置。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162847.png" alt="image-20200105102307989"></p><p>在nacos上点击命名空间，点击新建命名空间创建一个开发的命名空间</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162850.png" alt="image-20200105102446679"></p><p>创建成功后店家配置列表</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162856.png" alt="image-20200105104105281"></p><p>我们将之前的public环境下的配置文件导出，然后上传到develop环境下，当然也可以自检重新创建配置。</p><p>导入配置文件之后，为了显示区别，修改<code>service-provider-develop.yaml</code>配置规则为</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">env:</span> <span class="string">develop</span> <span class="string">namespace</span></span><br></pre></td></tr></table></figure><p>在bootstarp.properties中添加</p><p><code>spring.cloud.nacos.config.namespace=82e48384-c0e5-4813-91b3-9c3a228ead7f</code></p><p>因为我创建的develop环境的id为<code>82e48384-c0e5-4813-91b3-9c3a228ead7f</code>。</p><p>访问http://localhost:10000/test/hello/123出现</p><p><img src="https://cdn.jsdelivr.net/gh/liaoxianfu/blogimg/data/20210605162905.png" alt="image-20200105104015395"></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> spring cloud </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
